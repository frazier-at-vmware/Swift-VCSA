//
// VcenterVMCloneSpec.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct VcenterVMCloneSpec: Codable {

    /** Virtual machine to clone from. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: VirtualMachine. When operations return a value of this structure as a result, the field will be an identifier for the resource type: VirtualMachine. */
    public var source: String
    /** Virtual machine name. */
    public var name: String
    /** Virtual machine placement information. If this field is unset, the system will use the values from the source virtual machine. If specified, each field will be used for placement. If the fields result in disjoint placement the operation will fail. If the fields along with the placement values of the source virtual machine result in disjoint placement the operation will fail. */
    public var placement: VcenterVMClonePlacementSpec?
    /** Set of Disks to Remove. If unset, all disks will be copied. If the same identifier is in VM.CloneSpec.disks-to-update InvalidArgument fault will be returned. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.vm.hardware.Disk. */
    public var disksToRemove: [String]?
    /** Map of Disks to Update. If unset, all disks will copied to the datastore specified in the VM.ClonePlacementSpec.datastore field of VM.CloneSpec.placement. If the same identifier is in VM.CloneSpec.disks-to-remove InvalidArgument fault will be thrown. When clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.Disk. */
    public var disksToUpdate: [VcenterVMCloneSpecDisksToUpdate]?
    /** Attempt to perform a VM.CloneSpec.power-on after clone. If unset, the virtual machine will not be powered on. */
    public var powerOn: Bool?
    /** Guest customization spec to apply to the virtual machine after the virtual machine is deployed. If unset, the guest operating system is not customized after clone. */
    public var guestCustomizationSpec: VcenterVMGuestCustomizationSpec?

    public init(source: String, name: String, placement: VcenterVMClonePlacementSpec?, disksToRemove: [String]?, disksToUpdate: [VcenterVMCloneSpecDisksToUpdate]?, powerOn: Bool?, guestCustomizationSpec: VcenterVMGuestCustomizationSpec?) {
        self.source = source
        self.name = name
        self.placement = placement
        self.disksToRemove = disksToRemove
        self.disksToUpdate = disksToUpdate
        self.powerOn = powerOn
        self.guestCustomizationSpec = guestCustomizationSpec
    }

    public enum CodingKeys: String, CodingKey { 
        case source
        case name
        case placement
        case disksToRemove = "disks_to_remove"
        case disksToUpdate = "disks_to_update"
        case powerOn = "power_on"
        case guestCustomizationSpec = "guest_customization_spec"
    }


}

