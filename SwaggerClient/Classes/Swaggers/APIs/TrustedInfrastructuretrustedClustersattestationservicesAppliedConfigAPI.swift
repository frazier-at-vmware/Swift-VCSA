//
// TrustedInfrastructuretrustedClustersattestationservicesAppliedConfigAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class TrustedInfrastructuretrustedClustersattestationservicesAppliedConfigAPI {
    /**
     Delete the Attestation Service configuration that has been applied to the given cluster. This method has no affect on the desired state, it only removes applied Attestation Service configuration from any Trusted Hosts within the given cluster.
     
     - parameter cluster: (path) The ID of the cluster against which the operation will be executed. The parameter must be an identifier for the resource type: ClusterComputeResource. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deletetask(cluster: String, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        deletetaskWithRequestBuilder(cluster: cluster).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Delete the Attestation Service configuration that has been applied to the given cluster. This method has no affect on the desired state, it only removes applied Attestation Service configuration from any Trusted Hosts within the given cluster.
     - DELETE /api/vcenter/trusted-infrastructure/trusted-clusters/{cluster}/attestation/services-applied-config?vmw-task=true
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={
  "blank": true,
  "bytes": [],
  "empty": true
}}]
     
     - parameter cluster: (path) The ID of the cluster against which the operation will be executed. The parameter must be an identifier for the resource type: ClusterComputeResource. 

     - returns: RequestBuilder<String> 
     */
    open class func deletetaskWithRequestBuilder(cluster: String) -> RequestBuilder<String> {
        var path = "/api/vcenter/trusted-infrastructure/trusted-clusters/{cluster}/attestation/services-applied-config?vmw-task=true"
        let clusterPreEscape = "\(cluster)"
        let clusterPostEscape = clusterPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{cluster}", with: clusterPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Returns detailed information about the health of the specified Attestation Service configuration applied to the cluster with respect to the desired state.
     
     - parameter cluster: (path) The ID of the cluster against which the operation will be executed. The parameter must be an identifier for the resource type: ClusterComputeResource. 
     - parameter hostname: (query) The IP address or DNS resolvable name of the service. 
     - parameter port: (query) The port of the service. If unset, port 443 will be used. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func gettask(cluster: String, hostname: String, port: Int? = nil, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        gettaskWithRequestBuilder(cluster: cluster, hostname: hostname, port: port).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns detailed information about the health of the specified Attestation Service configuration applied to the cluster with respect to the desired state.
     - GET /api/vcenter/trusted-infrastructure/trusted-clusters/{cluster}/attestation/services-applied-config?vmw-task=true
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={
  "blank": true,
  "bytes": [],
  "empty": true
}}]
     
     - parameter cluster: (path) The ID of the cluster against which the operation will be executed. The parameter must be an identifier for the resource type: ClusterComputeResource. 
     - parameter hostname: (query) The IP address or DNS resolvable name of the service. 
     - parameter port: (query) The port of the service. If unset, port 443 will be used. (optional)

     - returns: RequestBuilder<String> 
     */
    open class func gettaskWithRequestBuilder(cluster: String, hostname: String, port: Int? = nil) -> RequestBuilder<String> {
        var path = "/api/vcenter/trusted-infrastructure/trusted-clusters/{cluster}/attestation/services-applied-config?vmw-task=true"
        let clusterPreEscape = "\(cluster)"
        let clusterPostEscape = clusterPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{cluster}", with: clusterPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "hostname": hostname, 
            "port": port?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Returns basic information about the health of all Attestation Service configurations applied to the cluster with respect to the desired state.
     
     - parameter cluster: (path) The ID of the cluster against which the operation will be executed. The parameter must be an identifier for the resource type: ClusterComputeResource. 
     - parameter requestBody: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listtask(cluster: String, requestBody: VcenterTrustedInfrastructureTrustedClustersAttestationServicesAppliedConfigListTask? = nil, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        listtaskWithRequestBuilder(cluster: cluster, requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns basic information about the health of all Attestation Service configurations applied to the cluster with respect to the desired state.
     - POST /api/vcenter/trusted-infrastructure/trusted-clusters/{cluster}/attestation/services-applied-config?action=query&vmw-task=true
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={
  "blank": true,
  "bytes": [],
  "empty": true
}}]
     
     - parameter cluster: (path) The ID of the cluster against which the operation will be executed. The parameter must be an identifier for the resource type: ClusterComputeResource. 
     - parameter requestBody: (body)  (optional)

     - returns: RequestBuilder<String> 
     */
    open class func listtaskWithRequestBuilder(cluster: String, requestBody: VcenterTrustedInfrastructureTrustedClustersAttestationServicesAppliedConfigListTask? = nil) -> RequestBuilder<String> {
        var path = "/api/vcenter/trusted-infrastructure/trusted-clusters/{cluster}/attestation/services-applied-config?action=query&vmw-task=true"
        let clusterPreEscape = "\(cluster)"
        let clusterPostEscape = clusterPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{cluster}", with: clusterPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Update the applied Attestation Service configuration on the given Trusted Cluster to be consistent with the desired state. This method has no affect on the desired state, apart from it being used as a reference point for the remediation.
     
     - parameter cluster: (path) The ID of the Trusted Cluster against which the operation will be executed. The parameter must be an identifier for the resource type: ClusterComputeResource. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updatetask(cluster: String, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        updatetaskWithRequestBuilder(cluster: cluster).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Update the applied Attestation Service configuration on the given Trusted Cluster to be consistent with the desired state. This method has no affect on the desired state, apart from it being used as a reference point for the remediation.
     - PATCH /api/vcenter/trusted-infrastructure/trusted-clusters/{cluster}/attestation/services-applied-config?vmw-task=true
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={
  "blank": true,
  "bytes": [],
  "empty": true
}}]
     
     - parameter cluster: (path) The ID of the Trusted Cluster against which the operation will be executed. The parameter must be an identifier for the resource type: ClusterComputeResource. 

     - returns: RequestBuilder<String> 
     */
    open class func updatetaskWithRequestBuilder(cluster: String) -> RequestBuilder<String> {
        var path = "/api/vcenter/trusted-infrastructure/trusted-clusters/{cluster}/attestation/services-applied-config?vmw-task=true"
        let clusterPreEscape = "\(cluster)"
        let clusterPostEscape = clusterPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{cluster}", with: clusterPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
