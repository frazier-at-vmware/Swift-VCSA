//
// NamespaceManagementsupervisorssummaryAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class NamespaceManagementsupervisorssummaryAPI {
    /**
     Queries the current state of the specified Supervisor.
     
     - parameter supervisor: (path) the identifier for a supervisor The parameter must be an identifier for the resource type: vcenter.namespace_management.supervisor.Supervisor. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func callGet(supervisor: String, completion: @escaping ((_ data: VcenterNamespaceManagementSupervisorsSummaryInfo?,_ error: Error?) -> Void)) {
        callGetWithRequestBuilder(supervisor: supervisor).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Queries the current state of the specified Supervisor.
     - GET /api/vcenter/namespace-management/supervisors/{supervisor}/summary
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter supervisor: (path) the identifier for a supervisor The parameter must be an identifier for the resource type: vcenter.namespace_management.supervisor.Supervisor. 

     - returns: RequestBuilder<VcenterNamespaceManagementSupervisorsSummaryInfo> 
     */
    open class func callGetWithRequestBuilder(supervisor: String) -> RequestBuilder<VcenterNamespaceManagementSupervisorsSummaryInfo> {
        var path = "/api/vcenter/namespace-management/supervisors/{supervisor}/summary"
        let supervisorPreEscape = "\(supervisor)"
        let supervisorPostEscape = supervisorPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{supervisor}", with: supervisorPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterNamespaceManagementSupervisorsSummaryInfo>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     * enum for parameter configStatus
     */
    public enum ConfigStatus_list: String { 
        case configuring = "CONFIGURING"
        case removing = "REMOVING"
        case running = "RUNNING"
        case error = "ERROR"
    }

    /**
     * enum for parameter kubernetesStatus
     */
    public enum KubernetesStatus_list: String { 
        case ready = "READY"
        case warning = "WARNING"
        case error = "ERROR"
    }

    /**
     Queries the current state of all Supervisors. Optionally, apply the filter to Supervisors that match the criteria in the Summary.FilterSpec.
     
     - parameter configStatus: (query) The Summary.ConfigStatus enumerated type describes the status of reaching the desired state configuration for the Supervisor. (optional)
     - parameter kubernetesStatus: (query) The Summary.KubernetesStatus enumerated type describes the Supervisor&#39;s ability to deploy pods. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func list(configStatus: ConfigStatus_list? = nil, kubernetesStatus: KubernetesStatus_list? = nil, completion: @escaping ((_ data: VcenterNamespaceManagementSupervisorsSummaryListResult?,_ error: Error?) -> Void)) {
        listWithRequestBuilder(configStatus: configStatus, kubernetesStatus: kubernetesStatus).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Queries the current state of all Supervisors. Optionally, apply the filter to Supervisors that match the criteria in the Summary.FilterSpec.
     - GET /api/vcenter/namespace-management/supervisors/summaries
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter configStatus: (query) The Summary.ConfigStatus enumerated type describes the status of reaching the desired state configuration for the Supervisor. (optional)
     - parameter kubernetesStatus: (query) The Summary.KubernetesStatus enumerated type describes the Supervisor&#39;s ability to deploy pods. (optional)

     - returns: RequestBuilder<VcenterNamespaceManagementSupervisorsSummaryListResult> 
     */
    open class func listWithRequestBuilder(configStatus: ConfigStatus_list? = nil, kubernetesStatus: KubernetesStatus_list? = nil) -> RequestBuilder<VcenterNamespaceManagementSupervisorsSummaryListResult> {
        let path = "/api/vcenter/namespace-management/supervisors/summaries"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "config_status": configStatus?.rawValue, 
            "kubernetes_status": kubernetesStatus?.rawValue
        ])

        let requestBuilder: RequestBuilder<VcenterNamespaceManagementSupervisorsSummaryListResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
