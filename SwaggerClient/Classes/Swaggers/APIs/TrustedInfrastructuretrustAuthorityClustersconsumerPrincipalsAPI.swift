//
// TrustedInfrastructuretrustAuthorityClustersconsumerPrincipalsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class TrustedInfrastructuretrustAuthorityClustersconsumerPrincipalsAPI {
    /**
     Creates a profile with the specified connection information on all hosts from a Trust Authority Cluster.
     
     - parameter cluster: (path) The ID of the Trust Authority Cluster to configure. The parameter must be an identifier for the resource type: ClusterComputeResource. 
     - parameter requestBody: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createtask(cluster: String, requestBody: VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateTask? = nil, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        createtaskWithRequestBuilder(cluster: cluster, requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Creates a profile with the specified connection information on all hosts from a Trust Authority Cluster.
     - POST /api/vcenter/trusted-infrastructure/trust-authority-clusters/{cluster}/consumer-principals?vmw-task=true
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={
  "blank": true,
  "bytes": [],
  "empty": true
}}]
     
     - parameter cluster: (path) The ID of the Trust Authority Cluster to configure. The parameter must be an identifier for the resource type: ClusterComputeResource. 
     - parameter requestBody: (body)  (optional)

     - returns: RequestBuilder<String> 
     */
    open class func createtaskWithRequestBuilder(cluster: String, requestBody: VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateTask? = nil) -> RequestBuilder<String> {
        var path = "/api/vcenter/trusted-infrastructure/trust-authority-clusters/{cluster}/consumer-principals?vmw-task=true"
        let clusterPreEscape = "\(cluster)"
        let clusterPostEscape = clusterPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{cluster}", with: clusterPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Removes the read-only policy configured on ESX for a specific principal.
     
     - parameter cluster: (path) The ID of the Trust Authority Cluster to configure. The parameter must be an identifier for the resource type: ClusterComputeResource. 
     - parameter profile: (path) The ID of the connection profile to modify. The parameter must be an identifier for the resource type: esx.authentication.clientprofile. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deletetask(cluster: String, profile: String, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        deletetaskWithRequestBuilder(cluster: cluster, profile: profile).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Removes the read-only policy configured on ESX for a specific principal.
     - DELETE /api/vcenter/trusted-infrastructure/trust-authority-clusters/{cluster}/consumer-principals/{profile}?vmw-task=true
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={
  "blank": true,
  "bytes": [],
  "empty": true
}}]
     
     - parameter cluster: (path) The ID of the Trust Authority Cluster to configure. The parameter must be an identifier for the resource type: ClusterComputeResource. 
     - parameter profile: (path) The ID of the connection profile to modify. The parameter must be an identifier for the resource type: esx.authentication.clientprofile. 

     - returns: RequestBuilder<String> 
     */
    open class func deletetaskWithRequestBuilder(cluster: String, profile: String) -> RequestBuilder<String> {
        var path = "/api/vcenter/trusted-infrastructure/trust-authority-clusters/{cluster}/consumer-principals/{profile}?vmw-task=true"
        let clusterPreEscape = "\(cluster)"
        let clusterPostEscape = clusterPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{cluster}", with: clusterPostEscape, options: .literal, range: nil)
        let profilePreEscape = "\(profile)"
        let profilePostEscape = profilePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{profile}", with: profilePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Retrieve information for a specific profile.
     
     - parameter cluster: (path) The ID of the Trust Authority Cluster on which the profile is configured. The parameter must be an identifier for the resource type: ClusterComputeResource. 
     - parameter profile: (path) The ID of the profile. The parameter must be an identifier for the resource type: esx.authentication.clientprofile. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func gettask(cluster: String, profile: String, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        gettaskWithRequestBuilder(cluster: cluster, profile: profile).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Retrieve information for a specific profile.
     - GET /api/vcenter/trusted-infrastructure/trust-authority-clusters/{cluster}/consumer-principals/{profile}?vmw-task=true
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={
  "blank": true,
  "bytes": [],
  "empty": true
}}]
     
     - parameter cluster: (path) The ID of the Trust Authority Cluster on which the profile is configured. The parameter must be an identifier for the resource type: ClusterComputeResource. 
     - parameter profile: (path) The ID of the profile. The parameter must be an identifier for the resource type: esx.authentication.clientprofile. 

     - returns: RequestBuilder<String> 
     */
    open class func gettaskWithRequestBuilder(cluster: String, profile: String) -> RequestBuilder<String> {
        var path = "/api/vcenter/trusted-infrastructure/trust-authority-clusters/{cluster}/consumer-principals/{profile}?vmw-task=true"
        let clusterPreEscape = "\(cluster)"
        let clusterPostEscape = clusterPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{cluster}", with: clusterPostEscape, options: .literal, range: nil)
        let profilePreEscape = "\(profile)"
        let profilePostEscape = profilePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{profile}", with: profilePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Lists all policies configured on a specific cluster.
     
     - parameter cluster: (path) The ID of the Trust Authority Cluster on which the profile is configured. The parameter must be an identifier for the resource type: ClusterComputeResource. 
     - parameter requestBody: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listtask(cluster: String, requestBody: VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsListTask? = nil, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        listtaskWithRequestBuilder(cluster: cluster, requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Lists all policies configured on a specific cluster.
     - POST /api/vcenter/trusted-infrastructure/trust-authority-clusters/{cluster}/consumer-principals?action=query&vmw-task=true
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={
  "blank": true,
  "bytes": [],
  "empty": true
}}]
     
     - parameter cluster: (path) The ID of the Trust Authority Cluster on which the profile is configured. The parameter must be an identifier for the resource type: ClusterComputeResource. 
     - parameter requestBody: (body)  (optional)

     - returns: RequestBuilder<String> 
     */
    open class func listtaskWithRequestBuilder(cluster: String, requestBody: VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsListTask? = nil) -> RequestBuilder<String> {
        var path = "/api/vcenter/trusted-infrastructure/trust-authority-clusters/{cluster}/consumer-principals?action=query&vmw-task=true"
        let clusterPreEscape = "\(cluster)"
        let clusterPostEscape = clusterPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{cluster}", with: clusterPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
