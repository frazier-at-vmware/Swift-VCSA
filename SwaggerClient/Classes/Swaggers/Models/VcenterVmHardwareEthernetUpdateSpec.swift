//
// VcenterVmHardwareEthernetUpdateSpec.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct VcenterVmHardwareEthernetUpdateSpec: Codable {

    /** Flag indicating whether Universal Pass-Through (UPT) compatibility should be enabled on this virtual Ethernet adapter.   This field may be modified at any time, and changes will be applied the next time the virtual machine is powered on.  If unset, the value is unchanged. Must be unset if the emulation type of the virtual Ethernet adapter is not VMXNET3. */
    public var uptCompatibilityEnabled: Bool?
    /** MAC address type.   This field may be modified at any time, and changes will be applied the next time the virtual machine is powered on.  If unset, the value is unchanged. */
    public var macType: VcenterVmHardwareEthernetMacAddressType?
    /** MAC address.   This field may be modified at any time, and changes will be applied the next time the virtual machine is powered on.  If unset, the value is unchanged. Must be specified if Ethernet.UpdateSpec.mac-type is MANUAL. Must be unset if the MAC address type is not MANUAL. */
    public var macAddress: String?
    /** Flag indicating whether wake-on-LAN shoud be enabled on this virtual Ethernet adapter.   This field may be modified at any time, and changes will be applied the next time the virtual machine is powered on.  If unset, the value is unchanged. */
    public var wakeOnLanEnabled: Bool?
    /** Physical resource backing for the virtual Ethernet adapter.   This field may be modified at any time, and changes will be applied the next time the virtual machine is powered on.  If unset, the value is unchanged. */
    public var backing: VcenterVmHardwareEthernetBackingSpec?
    /** Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on. If unset, the value is unchanged. */
    public var startConnected: Bool?
    /** Flag indicating whether the guest can connect and disconnect the device. If unset, the value is unchanged. */
    public var allowGuestControl: Bool?

    public init(uptCompatibilityEnabled: Bool?, macType: VcenterVmHardwareEthernetMacAddressType?, macAddress: String?, wakeOnLanEnabled: Bool?, backing: VcenterVmHardwareEthernetBackingSpec?, startConnected: Bool?, allowGuestControl: Bool?) {
        self.uptCompatibilityEnabled = uptCompatibilityEnabled
        self.macType = macType
        self.macAddress = macAddress
        self.wakeOnLanEnabled = wakeOnLanEnabled
        self.backing = backing
        self.startConnected = startConnected
        self.allowGuestControl = allowGuestControl
    }

    public enum CodingKeys: String, CodingKey { 
        case uptCompatibilityEnabled = "upt_compatibility_enabled"
        case macType = "mac_type"
        case macAddress = "mac_address"
        case wakeOnLanEnabled = "wake_on_lan_enabled"
        case backing
        case startConnected = "start_connected"
        case allowGuestControl = "allow_guest_control"
    }


}

