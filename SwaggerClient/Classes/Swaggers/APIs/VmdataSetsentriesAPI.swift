//
// VmdataSetsentriesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class VmdataSetsentriesAPI {
    /**
     Retrieves the value of an entry in a data set. if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.DataSets.DataSetEntryGet.  
     
     - parameter vm: (path) Identifier of the virtual machine. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter dataSet: (path) Identifier of the data set. The parameter must be an identifier for the resource type: vcenter.vm.DataSet. 
     - parameter key: (path) The key of the entry to retrieve. The parameter must be an identifier for the resource type: vcenter.vm.data_sets.Entry. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func callGet(vm: String, dataSet: String, key: String, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        callGetWithRequestBuilder(vm: vm, dataSet: dataSet, key: key).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Retrieves the value of an entry in a data set. if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.DataSets.DataSetEntryGet.  
     - GET /api/vcenter/vm/{vm}/data-sets/{data_set}/entries/{key}
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={
  "blank": true,
  "bytes": [],
  "empty": true
}}]
     
     - parameter vm: (path) Identifier of the virtual machine. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter dataSet: (path) Identifier of the data set. The parameter must be an identifier for the resource type: vcenter.vm.DataSet. 
     - parameter key: (path) The key of the entry to retrieve. The parameter must be an identifier for the resource type: vcenter.vm.data_sets.Entry. 

     - returns: RequestBuilder<String> 
     */
    open class func callGetWithRequestBuilder(vm: String, dataSet: String, key: String) -> RequestBuilder<String> {
        var path = "/api/vcenter/vm/{vm}/data-sets/{data_set}/entries/{key}"
        let vmPreEscape = "\(vm)"
        let vmPostEscape = vmPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{vm}", with: vmPostEscape, options: .literal, range: nil)
        let dataSetPreEscape = "\(dataSet)"
        let dataSetPostEscape = dataSetPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{data_set}", with: dataSetPostEscape, options: .literal, range: nil)
        let keyPreEscape = "\(key)"
        let keyPostEscape = keyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{key}", with: keyPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Creates or updates an entry in a data set. If an entry whose key matches key already exists, it will replace the existing value, otherwise it will create a new entry. if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.DataSets.DataSetEntrySet.  
     
     - parameter vm: (path) Identifier of the virtual machine. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter dataSet: (path) Identifier of the data set. The parameter must be an identifier for the resource type: vcenter.vm.DataSet. 
     - parameter key: (path) The key of the entry to set. A key can be at most 4096 bytes. The parameter must be an identifier for the resource type: vcenter.vm.data_sets.Entry. 
     - parameter requestBody: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func callSet(vm: String, dataSet: String, key: String, requestBody: VcenterVmDataSetsEntriesSet? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        callSetWithRequestBuilder(vm: vm, dataSet: dataSet, key: key, requestBody: requestBody).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Creates or updates an entry in a data set. If an entry whose key matches key already exists, it will replace the existing value, otherwise it will create a new entry. if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.DataSets.DataSetEntrySet.  
     - PUT /api/vcenter/vm/{vm}/data-sets/{data_set}/entries/{key}
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     
     - parameter vm: (path) Identifier of the virtual machine. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter dataSet: (path) Identifier of the data set. The parameter must be an identifier for the resource type: vcenter.vm.DataSet. 
     - parameter key: (path) The key of the entry to set. A key can be at most 4096 bytes. The parameter must be an identifier for the resource type: vcenter.vm.data_sets.Entry. 
     - parameter requestBody: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func callSetWithRequestBuilder(vm: String, dataSet: String, key: String, requestBody: VcenterVmDataSetsEntriesSet? = nil) -> RequestBuilder<Void> {
        var path = "/api/vcenter/vm/{vm}/data-sets/{data_set}/entries/{key}"
        let vmPreEscape = "\(vm)"
        let vmPostEscape = vmPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{vm}", with: vmPostEscape, options: .literal, range: nil)
        let dataSetPreEscape = "\(dataSet)"
        let dataSetPostEscape = dataSetPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{data_set}", with: dataSetPostEscape, options: .literal, range: nil)
        let keyPreEscape = "\(key)"
        let keyPostEscape = keyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{key}", with: keyPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Deletes an entry in a data set. if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.DataSets.DataSetEntryDelete.  
     
     - parameter vm: (path) Identifier of the virtual machine. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter dataSet: (path) Identifier of the data set. The parameter must be an identifier for the resource type: vcenter.vm.DataSet. 
     - parameter key: (path) The key of the entry to delete. The parameter must be an identifier for the resource type: vcenter.vm.data_sets.Entry. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func delete(vm: String, dataSet: String, key: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        deleteWithRequestBuilder(vm: vm, dataSet: dataSet, key: key).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Deletes an entry in a data set. if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.DataSets.DataSetEntryDelete.  
     - DELETE /api/vcenter/vm/{vm}/data-sets/{data_set}/entries/{key}
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     
     - parameter vm: (path) Identifier of the virtual machine. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter dataSet: (path) Identifier of the data set. The parameter must be an identifier for the resource type: vcenter.vm.DataSet. 
     - parameter key: (path) The key of the entry to delete. The parameter must be an identifier for the resource type: vcenter.vm.data_sets.Entry. 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteWithRequestBuilder(vm: String, dataSet: String, key: String) -> RequestBuilder<Void> {
        var path = "/api/vcenter/vm/{vm}/data-sets/{data_set}/entries/{key}"
        let vmPreEscape = "\(vm)"
        let vmPostEscape = vmPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{vm}", with: vmPostEscape, options: .literal, range: nil)
        let dataSetPreEscape = "\(dataSet)"
        let dataSetPostEscape = dataSetPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{data_set}", with: dataSetPostEscape, options: .literal, range: nil)
        let keyPreEscape = "\(key)"
        let keyPostEscape = keyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{key}", with: keyPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Lists all entry keys in a data set. if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.DataSets.DataSetEntryList.  
     
     - parameter vm: (path) Identifier of the virtual machine. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter dataSet: (path) Identifier of the data set. The parameter must be an identifier for the resource type: vcenter.vm.DataSet. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func list(vm: String, dataSet: String, completion: @escaping ((_ data: [String]?,_ error: Error?) -> Void)) {
        listWithRequestBuilder(vm: vm, dataSet: dataSet).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Lists all entry keys in a data set. if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.DataSets.DataSetEntryList.  
     - GET /api/vcenter/vm/{vm}/data-sets/{data_set}/entries
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={}}]
     
     - parameter vm: (path) Identifier of the virtual machine. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter dataSet: (path) Identifier of the data set. The parameter must be an identifier for the resource type: vcenter.vm.DataSet. 

     - returns: RequestBuilder<[String]> 
     */
    open class func listWithRequestBuilder(vm: String, dataSet: String) -> RequestBuilder<[String]> {
        var path = "/api/vcenter/vm/{vm}/data-sets/{data_set}/entries"
        let vmPreEscape = "\(vm)"
        let vmPostEscape = vmPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{vm}", with: vmPostEscape, options: .literal, range: nil)
        let dataSetPreEscape = "\(dataSet)"
        let dataSetPostEscape = dataSetPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{data_set}", with: dataSetPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[String]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
