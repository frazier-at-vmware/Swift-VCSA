//
// VcenterVchaPlacementInfo.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct VcenterVchaPlacementInfo: Codable {

    /** The hostname of the vCenter server that is managing the VCHA node. */
    public var managementVcenterName: String
    /** The unique identifier of the vCenter server that is managing the VCHA node. This field is optional because it was added in a newer version than its parent node. */
    public var managementVcenterServerGuid: String?
    /** The virtual machine name of the VCHA node. */
    public var vmName: String
    /** The identifier of the datacenter of the VCHA node. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datacenter:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datacenter:VCenter. */
    public var datacenter: String
    /** The name of the datacenter of the VCHA node. */
    public var datacenterName: String
    /** The identifier of the host of the VCHA node. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem:VCenter. */
    public var host: String
    /** The name of the host of the VCHA node. */
    public var hostName: String
    /** The identifier of the cluster of which PlacementInfo.host is member. If unset, PlacementInfo.host is a standalone host. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource:VCenter. */
    public var cluster: String?
    /** The name of the cluster of which PlacementInfo.host is member. If unset, PlacementInfo.host is a standalone host. */
    public var clusterName: String?
    /** The identifier of the Network object used for the HA network. If unset, the information is currently unavailable or the haNetwork is not configured. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter. */
    public var haNetwork: String?
    /** The name of the Network object used for the HA network. If unset, the information is currently unavailable or the haNetwork is not configured. */
    public var haNetworkName: String?
    /** The type of the Network object used for the HA network. If unset, the information is currently unavailable or the haNetwork is not configured. */
    public var haNetworkType: VcenterVchaNetworkType?
    /** The identifier of the Network object used for the Management network. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter. */
    public var managementNetwork: String
    /** The name of the Network object used for the Management network. */
    public var managementNetworkName: String
    /** The type of the Network object used for the Management network. */
    public var managementNetworkType: VcenterVchaNetworkType
    /** The storage information of the VCHA node. */
    public var storage: VcenterVchaDiskInfo
    /** BIOS UUID for the node. If unset, the information is currently unavailable. */
    public var biosUuid: String?

    public init(managementVcenterName: String, managementVcenterServerGuid: String?, vmName: String, datacenter: String, datacenterName: String, host: String, hostName: String, cluster: String?, clusterName: String?, haNetwork: String?, haNetworkName: String?, haNetworkType: VcenterVchaNetworkType?, managementNetwork: String, managementNetworkName: String, managementNetworkType: VcenterVchaNetworkType, storage: VcenterVchaDiskInfo, biosUuid: String?) {
        self.managementVcenterName = managementVcenterName
        self.managementVcenterServerGuid = managementVcenterServerGuid
        self.vmName = vmName
        self.datacenter = datacenter
        self.datacenterName = datacenterName
        self.host = host
        self.hostName = hostName
        self.cluster = cluster
        self.clusterName = clusterName
        self.haNetwork = haNetwork
        self.haNetworkName = haNetworkName
        self.haNetworkType = haNetworkType
        self.managementNetwork = managementNetwork
        self.managementNetworkName = managementNetworkName
        self.managementNetworkType = managementNetworkType
        self.storage = storage
        self.biosUuid = biosUuid
    }

    public enum CodingKeys: String, CodingKey { 
        case managementVcenterName = "management_vcenter_name"
        case managementVcenterServerGuid = "management_vcenter_server_guid"
        case vmName = "vm_name"
        case datacenter
        case datacenterName = "datacenter_name"
        case host
        case hostName = "host_name"
        case cluster
        case clusterName = "cluster_name"
        case haNetwork = "ha_network"
        case haNetworkName = "ha_network_name"
        case haNetworkType = "ha_network_type"
        case managementNetwork = "management_network"
        case managementNetworkName = "management_network_name"
        case managementNetworkType = "management_network_type"
        case storage
        case biosUuid = "bios_uuid"
    }


}

