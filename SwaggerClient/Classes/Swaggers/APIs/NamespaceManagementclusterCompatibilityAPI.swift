//
// NamespaceManagementclusterCompatibilityAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class NamespaceManagementclusterCompatibilityAPI {
    /**
     * enum for parameter networkProvider
     */
    public enum NetworkProvider_list: String { 
        case nsxtContainerPlugin = "NSXT_CONTAINER_PLUGIN"
        case vsphereNetwork = "VSPHERE_NETWORK"
    }

    /**
     Returns Namespaces compatibility information for all vSphere clusters in the vCenter Server matching the ClusterCompatibility.FilterSpec. The result contains only visible (subject to permission checks) clusters. if you do not have all of the privileges described as follows:     -  Operation execution requires System.Anonymous.  
     
     - parameter compatible: (query) Set this flag to true to only list vSphere clusters that are currently compatible with the Namespaces feature. If set to false, both compatible and incompatible vSphere clusters will be listed. If unset, both compatible and incompatible vSphere clusters will be listed. (optional)
     - parameter networkProvider: (query) Identifies the network plugin that cluster networking functionalities for this vSphere Namespaces Cluster. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func list(compatible: Bool? = nil, networkProvider: NetworkProvider_list? = nil, completion: @escaping ((_ data: [VcenterNamespaceManagementClusterCompatibilitySummary]?,_ error: Error?) -> Void)) {
        listWithRequestBuilder(compatible: compatible, networkProvider: networkProvider).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns Namespaces compatibility information for all vSphere clusters in the vCenter Server matching the ClusterCompatibility.FilterSpec. The result contains only visible (subject to permission checks) clusters. if you do not have all of the privileges described as follows:     -  Operation execution requires System.Anonymous.  
     - GET /api/vcenter/namespace-management/cluster-compatibility
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={}}]
     
     - parameter compatible: (query) Set this flag to true to only list vSphere clusters that are currently compatible with the Namespaces feature. If set to false, both compatible and incompatible vSphere clusters will be listed. If unset, both compatible and incompatible vSphere clusters will be listed. (optional)
     - parameter networkProvider: (query) Identifies the network plugin that cluster networking functionalities for this vSphere Namespaces Cluster. (optional)

     - returns: RequestBuilder<[VcenterNamespaceManagementClusterCompatibilitySummary]> 
     */
    open class func listWithRequestBuilder(compatible: Bool? = nil, networkProvider: NetworkProvider_list? = nil) -> RequestBuilder<[VcenterNamespaceManagementClusterCompatibilitySummary]> {
        let path = "/api/vcenter/namespace-management/cluster-compatibility"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "compatible": compatible, 
            "network_provider": networkProvider?.rawValue
        ])

        let requestBuilder: RequestBuilder<[VcenterNamespaceManagementClusterCompatibilitySummary]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     * enum for parameter networkProvider
     */
    public enum NetworkProvider_listV2: String { 
        case nsxt = "NSXT"
        case vsphere = "VSPHERE"
    }

    /**
     Returns Namespaces compatibility information for all vSphere clusters that match the #FilterSpecV2 and are associated with the vSphere Zones in the vCenter Server that match the #ZoneFilterSpec. The result contains only visible (subject to permission checks) clusters.
     
     - parameter zones: (query) A list of vSphere Zone identifiers which will be used to filter vSphere Zones that correspond to this specific set of identifiers. If unset or empty, results will not be filtered for specific vSphere Zone identifiers. (optional)
     - parameter compatible: (query) Set this flag to true to only return vSphere clusters that are currently compatible with the Namespaces feature. If set to false, both compatible and incompatible vSphere clusters will be returned. If unset, both compatible and incompatible vSphere clusters will be listed. (optional)
     - parameter networkProvider: (query)  NetworkType enumerates types of networks supported by the Supervisor for workloads.  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listV2(zones: [String]? = nil, compatible: Bool? = nil, networkProvider: NetworkProvider_listV2? = nil, completion: @escaping ((_ data: VcenterNamespaceManagementClusterCompatibilityZoneCompatibilityInfo?,_ error: Error?) -> Void)) {
        listV2WithRequestBuilder(zones: zones, compatible: compatible, networkProvider: networkProvider).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns Namespaces compatibility information for all vSphere clusters that match the #FilterSpecV2 and are associated with the vSphere Zones in the vCenter Server that match the #ZoneFilterSpec. The result contains only visible (subject to permission checks) clusters.
     - GET /api/vcenter/namespace-management/cluster-compatibility/v2
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter zones: (query) A list of vSphere Zone identifiers which will be used to filter vSphere Zones that correspond to this specific set of identifiers. If unset or empty, results will not be filtered for specific vSphere Zone identifiers. (optional)
     - parameter compatible: (query) Set this flag to true to only return vSphere clusters that are currently compatible with the Namespaces feature. If set to false, both compatible and incompatible vSphere clusters will be returned. If unset, both compatible and incompatible vSphere clusters will be listed. (optional)
     - parameter networkProvider: (query)  NetworkType enumerates types of networks supported by the Supervisor for workloads.  (optional)

     - returns: RequestBuilder<VcenterNamespaceManagementClusterCompatibilityZoneCompatibilityInfo> 
     */
    open class func listV2WithRequestBuilder(zones: [String]? = nil, compatible: Bool? = nil, networkProvider: NetworkProvider_listV2? = nil) -> RequestBuilder<VcenterNamespaceManagementClusterCompatibilityZoneCompatibilityInfo> {
        let path = "/api/vcenter/namespace-management/cluster-compatibility/v2"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "zones": zones, 
            "compatible": compatible, 
            "network_provider": networkProvider?.rawValue
        ])

        let requestBuilder: RequestBuilder<VcenterNamespaceManagementClusterCompatibilityZoneCompatibilityInfo>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
