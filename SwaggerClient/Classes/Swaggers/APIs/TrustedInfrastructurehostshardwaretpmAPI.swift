//
// TrustedInfrastructurehostshardwaretpmAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class TrustedInfrastructurehostshardwaretpmAPI {
    /**
     Get the TPM details on a host. if you do not have all of the privileges described as follows:     -  The resource HostSystem referenced by the parameter host requires Host.Tpm.Read.  
     
     - parameter host: (path) Identifier of the host. The parameter must be an identifier for the resource type: HostSystem. 
     - parameter tpm: (path) the TPM identifier. The parameter must be an identifier for the resource type: vcenter.trusted_infrastructure.hosts.hardware.Tpm. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func callGet(host: String, tpm: String, completion: @escaping ((_ data: VcenterTrustedInfrastructureHostsHardwareTpmInfo?,_ error: Error?) -> Void)) {
        callGetWithRequestBuilder(host: host, tpm: tpm).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get the TPM details on a host. if you do not have all of the privileges described as follows:     -  The resource HostSystem referenced by the parameter host requires Host.Tpm.Read.  
     - GET /api/vcenter/trusted-infrastructure/hosts/{host}/hardware/tpm/{tpm}
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter host: (path) Identifier of the host. The parameter must be an identifier for the resource type: HostSystem. 
     - parameter tpm: (path) the TPM identifier. The parameter must be an identifier for the resource type: vcenter.trusted_infrastructure.hosts.hardware.Tpm. 

     - returns: RequestBuilder<VcenterTrustedInfrastructureHostsHardwareTpmInfo> 
     */
    open class func callGetWithRequestBuilder(host: String, tpm: String) -> RequestBuilder<VcenterTrustedInfrastructureHostsHardwareTpmInfo> {
        var path = "/api/vcenter/trusted-infrastructure/hosts/{host}/hardware/tpm/{tpm}"
        let hostPreEscape = "\(host)"
        let hostPostEscape = hostPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{host}", with: hostPostEscape, options: .literal, range: nil)
        let tpmPreEscape = "\(tpm)"
        let tpmPostEscape = tpmPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{tpm}", with: tpmPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterTrustedInfrastructureHostsHardwareTpmInfo>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Return a list of configured TPMs on a host. if you do not have all of the privileges described as follows:     -  The resource HostSystem referenced by the parameter host requires Host.Tpm.Read.  
     
     - parameter host: (path) Identifier of the host. The parameter must be an identifier for the resource type: HostSystem. 
     - parameter majorVersions: (query) The TPM major version number. if unset or empty, the result will not be filtered by version number. (optional)
     - parameter active: (query) The TPM status. if unset, the result will not be filtered by status. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func list(host: String, majorVersions: [Int64]? = nil, active: Bool? = nil, completion: @escaping ((_ data: [VcenterTrustedInfrastructureHostsHardwareTpmSummary]?,_ error: Error?) -> Void)) {
        listWithRequestBuilder(host: host, majorVersions: majorVersions, active: active).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Return a list of configured TPMs on a host. if you do not have all of the privileges described as follows:     -  The resource HostSystem referenced by the parameter host requires Host.Tpm.Read.  
     - GET /api/vcenter/trusted-infrastructure/hosts/{host}/hardware/tpm
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={}}]
     
     - parameter host: (path) Identifier of the host. The parameter must be an identifier for the resource type: HostSystem. 
     - parameter majorVersions: (query) The TPM major version number. if unset or empty, the result will not be filtered by version number. (optional)
     - parameter active: (query) The TPM status. if unset, the result will not be filtered by status. (optional)

     - returns: RequestBuilder<[VcenterTrustedInfrastructureHostsHardwareTpmSummary]> 
     */
    open class func listWithRequestBuilder(host: String, majorVersions: [Int64]? = nil, active: Bool? = nil) -> RequestBuilder<[VcenterTrustedInfrastructureHostsHardwareTpmSummary]> {
        var path = "/api/vcenter/trusted-infrastructure/hosts/{host}/hardware/tpm"
        let hostPreEscape = "\(host)"
        let hostPostEscape = hostPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{host}", with: hostPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "major_versions": majorVersions, 
            "active": active
        ])

        let requestBuilder: RequestBuilder<[VcenterTrustedInfrastructureHostsHardwareTpmSummary]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
