//
// VcenterNamespaceManagementSupervisorsWorkloads.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct VcenterNamespaceManagementSupervisorsWorkloads: Codable {

    /**  The workloads Workloads.network describes configuration for the primary workload network.   Workloads will communicate with each other and will reach external networks over this network.   The IP ranges configured on this network are managed primarily within Kubernetes.  */
    public var network: VcenterNamespaceManagementSupervisorsNetworksWorkloadNetwork
    /**  Workloads.edge configuration determines how network traffic will enter and leave the cluster.   The IP ranges configured on this network are managed by the Supervisor and the load balancer.  */
    public var edge: VcenterNamespaceManagementNetworksEdgesEdge
    /**  Workloads.kube-api-server-options declares configuration options for the Kubernetes API Server.  If unset, the default configuration will be used. */
    public var kubeAPIServerOptions: VcenterNamespaceManagementSupervisorsKubeAPIServerOptions?
    /**  Workloads.images specifies how images will be stored and pulled into the cluster.  If unset, image sync configuration will default to the settings described within the ImageSyncConfig structure. */
    public var images: VcenterNamespaceManagementSupervisorsImageSyncConfig?
    /**  Workloads.storage specifies which persistent storage is configured and accessible for workloads to consume. You can configure policies for both images and volumes.  If unset, configuration will be copied from the control plane when possible. If not, some storage features may be unavailable. */
    public var storage: VcenterNamespaceManagementSupervisorsWorkloadsStorageConfig?

    public init(network: VcenterNamespaceManagementSupervisorsNetworksWorkloadNetwork, edge: VcenterNamespaceManagementNetworksEdgesEdge, kubeAPIServerOptions: VcenterNamespaceManagementSupervisorsKubeAPIServerOptions?, images: VcenterNamespaceManagementSupervisorsImageSyncConfig?, storage: VcenterNamespaceManagementSupervisorsWorkloadsStorageConfig?) {
        self.network = network
        self.edge = edge
        self.kubeAPIServerOptions = kubeAPIServerOptions
        self.images = images
        self.storage = storage
    }

    public enum CodingKeys: String, CodingKey { 
        case network
        case edge
        case kubeAPIServerOptions = "kube_API_server_options"
        case images
        case storage
    }


}

