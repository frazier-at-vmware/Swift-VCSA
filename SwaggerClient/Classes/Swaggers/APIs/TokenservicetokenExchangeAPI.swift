//
// TokenservicetokenExchangeAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class TokenservicetokenExchangeAPI {
    /**
     Exchanges incoming token based on the spec and current client authorization data. <p>This {@term operation} has been deprecated in the vSphere 7.0 U2 release. Use {@code vcenter.authentication.Token#issue} instead.
     
     - parameter requestBody: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func exchange(requestBody: VcenterTokenserviceTokenExchangeExchange, completion: @escaping ((_ data: VcenterTokenserviceTokenExchangeExchangeResp?,_ error: Error?) -> Void)) {
        exchangeWithRequestBuilder(requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Exchanges incoming token based on the spec and current client authorization data. <p>This {@term operation} has been deprecated in the vSphere 7.0 U2 release. Use {@code vcenter.authentication.Token#issue} instead.
     - POST /rest/vcenter/tokenservice/token-exchange
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter requestBody: (body)  

     - returns: RequestBuilder<VcenterTokenserviceTokenExchangeExchangeResp> 
     */
    open class func exchangeWithRequestBuilder(requestBody: VcenterTokenserviceTokenExchangeExchange) -> RequestBuilder<VcenterTokenserviceTokenExchangeExchangeResp> {
        let path = "/rest/vcenter/tokenservice/token-exchange"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterTokenserviceTokenExchangeExchangeResp>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
