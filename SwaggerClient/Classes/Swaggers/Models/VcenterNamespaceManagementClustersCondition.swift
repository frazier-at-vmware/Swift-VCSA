//
// VcenterNamespaceManagementClustersCondition.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct VcenterNamespaceManagementClustersCondition: Codable {

    /** The type of the condition is a CamelCase, machine readable identifier, indicating the configuration stage. InfrastructureInitialized, ControlPlaneVMsDeployed and ControlPlaneVMsConfigured are examples of such identifiers. */
    public var type: String
    /** Description of the condition type in a human readable format. */
    public var _description: VapiStdLocalizableMessage
    /** The status of the condition. */
    public var status: VcenterNamespaceManagementClustersConditionStatus
    /** Last time the condition transitioned from one state to another. A transition happens when the value of status or severity field changes. if unset, there are no ongoing operations related to bringing the condition to the desired state. */
    public var lastTransitionTime: Date?
    /** A brief CamelCase message indicating details about the reason for the last transition. FailedWithSystemError, ManagementDNSServersMissing and WaitForNodeUpgrade are examples of such messages. */
    public var reason: String
    /** Provides an explicit classification of the reason identifier. Set when the value of status is FALSE. */
    public var severity: VcenterNamespaceManagementClustersConditionSeverity
    /** A list of human-readable messages that provide additional details about the last transition. */
    public var messages: [VcenterNamespaceManagementClustersMessage]

    public init(type: String, _description: VapiStdLocalizableMessage, status: VcenterNamespaceManagementClustersConditionStatus, lastTransitionTime: Date?, reason: String, severity: VcenterNamespaceManagementClustersConditionSeverity, messages: [VcenterNamespaceManagementClustersMessage]) {
        self.type = type
        self._description = _description
        self.status = status
        self.lastTransitionTime = lastTransitionTime
        self.reason = reason
        self.severity = severity
        self.messages = messages
    }

    public enum CodingKeys: String, CodingKey { 
        case type
        case _description = "description"
        case status
        case lastTransitionTime = "last_transition_time"
        case reason
        case severity
        case messages
    }


}

