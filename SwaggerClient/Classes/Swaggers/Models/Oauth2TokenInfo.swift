//
// Oauth2TokenInfo.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct Oauth2TokenInfo: Codable {

    /** The access token issued by the authorization server. */
    public var accessToken: String
    /** A case-insensitive value specifying the method of using the access token issued. */
    public var tokenType: String
    /** The validity lifetime, in seconds, of the token issued by the server. unset if not applicable for issued token. */
    public var expiresIn: Int64?
    /** Scope of the issued access token. The value of the scope parameter is expressed as a list of space- delimited, case-sensitive strings. The strings are defined by the authorization server. If the value contains multiple space-delimited strings, their order does not matter, and each string adds an additional access range to the requested scope. unset if the scope of the issued security token is identical to the scope requested by the client. */
    public var scope: String?
    /** The refresh token, which can be used to obtain new access tokens. unset if not applicable to the specific request. */
    public var refreshToken: String?
    /** An identifier which indicates the type of the access token in the TokenInfo.access-token field. unset if not the result of a token-exchange invocation; otherwise, required. */
    public var issuedTokenType: String?

    public init(accessToken: String, tokenType: String, expiresIn: Int64?, scope: String?, refreshToken: String?, issuedTokenType: String?) {
        self.accessToken = accessToken
        self.tokenType = tokenType
        self.expiresIn = expiresIn
        self.scope = scope
        self.refreshToken = refreshToken
        self.issuedTokenType = issuedTokenType
    }

    public enum CodingKeys: String, CodingKey { 
        case accessToken = "access_token"
        case tokenType = "token_type"
        case expiresIn = "expires_in"
        case scope
        case refreshToken = "refresh_token"
        case issuedTokenType = "issued_token_type"
    }


}

