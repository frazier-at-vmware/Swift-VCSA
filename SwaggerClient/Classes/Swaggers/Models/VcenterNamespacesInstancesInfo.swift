//
// VcenterNamespacesInstancesInfo.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct VcenterNamespacesInstancesInfo: Codable {

    /** Identifier for the vSphere cluster hosting the namespace. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource. */
    public var cluster: String
    /** Current setting for Instances.ConfigStatus. */
    public var configStatus: VcenterNamespacesInstancesConfigStatus
    /** Current set of messages associated with the object. */
    public var messages: [VcenterNamespacesInstancesMessage]
    /** Basic runtime statistics for the namespace. */
    public var stats: VcenterNamespacesInstancesStats
    /** Description of the namespace. */
    public var _description: String
    /** Quotas on the namespace resources. Refer to vcenter.namespace_management.NamespaceResourceOptions#get for the type of the value for this field. If unset, no resource constraints are associated with the namespace. */
    public var resourceSpec: JSONValue?
    /** Access controls associated with the namespace. */
    public var accessList: [VcenterNamespacesInstancesAccess]
    /** Storage associated with the namespace. */
    public var storageSpecs: [VcenterNamespacesInstancesStorageSpec]
    /** vSphere Networks associated with the namespace. This field is unset if the cluster hosting this namespace uses NSXT_CONTAINER_PLUGIN as its network provider. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.namespace_management.Network. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.namespace_management.Network. */
    public var networks: [String]?
    /** VM Service specification associated with the namespace. This field is optional because it was added in a newer version than its parent node. */
    public var vmServiceSpec: VcenterNamespacesInstancesVMServiceSpec?
    /** Image Registry Service specification associated with the namespace. {ImageRegistrySpec#contentLibraries} here also includes the content libraries only specified in {VMServiceSpec#contentLibraries}. If unset, no image registry is configured for the namespace. */
    public var imageRegistrySpec: VcenterNamespacesInstancesImageRegistrySpec?
    /** Creator of the namespace. Namespace self-service uses this field to populate the user who created this namespace. This field is optional because it was added in a newer version than its parent node. */
    public var creator: VcenterNamespacesInstancesPrincipal?
    /** Flag to indicate the self service namespace. If unset, the namespace is not marked as self service namespace. */
    public var selfServiceNamespace: Bool?

    public init(cluster: String, configStatus: VcenterNamespacesInstancesConfigStatus, messages: [VcenterNamespacesInstancesMessage], stats: VcenterNamespacesInstancesStats, _description: String, resourceSpec: JSONValue?, accessList: [VcenterNamespacesInstancesAccess], storageSpecs: [VcenterNamespacesInstancesStorageSpec], networks: [String]?, vmServiceSpec: VcenterNamespacesInstancesVMServiceSpec?, imageRegistrySpec: VcenterNamespacesInstancesImageRegistrySpec?, creator: VcenterNamespacesInstancesPrincipal?, selfServiceNamespace: Bool?) {
        self.cluster = cluster
        self.configStatus = configStatus
        self.messages = messages
        self.stats = stats
        self._description = _description
        self.resourceSpec = resourceSpec
        self.accessList = accessList
        self.storageSpecs = storageSpecs
        self.networks = networks
        self.vmServiceSpec = vmServiceSpec
        self.imageRegistrySpec = imageRegistrySpec
        self.creator = creator
        self.selfServiceNamespace = selfServiceNamespace
    }

    public enum CodingKeys: String, CodingKey { 
        case cluster
        case configStatus = "config_status"
        case messages
        case stats
        case _description = "description"
        case resourceSpec = "resource_spec"
        case accessList = "access_list"
        case storageSpecs = "storage_specs"
        case networks
        case vmServiceSpec = "vm_service_spec"
        case imageRegistrySpec = "image_registry_spec"
        case creator
        case selfServiceNamespace = "self_service_namespace"
    }


}

