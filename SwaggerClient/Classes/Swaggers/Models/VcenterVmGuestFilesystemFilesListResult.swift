//
// VcenterVmGuestFilesystemFilesListResult.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct VcenterVmGuestFilesystemFilesListResult: Codable {

    /** A list of Files.Summary structures containing information for all the matching files. */
    public var files: [VcenterVmGuestFilesystemFilesSummary]
    /** The total number of results from the Files.list. This is a hint to the user of the iterator regarding how many items are available to be retrieved. The total could change if the inventory of items are being changed. */
    public var total: Int64
    /** Positional index into the logical item list of the first item returned in the list of results. The first item in the logical item list has an index of 0. This is a hint to the user of the iterator regarding the logical position in the iteration. For example, this can be used to display to the user which page of the iteration is being shown. The total could change if the inventory of items are being changed. If unset no items were returned. */
    public var startIndex: Int64?
    /** Positional index into the logical item list of the last item returned in the list of results. The first item in the logical item list has an index of 0. This is a hint to the user of the iterator regarding the logical position in the iteration. For example, this can be used to display to the user which page of the iteration is being shown. The total could change if the inventory of items are being changed. If unset no items were returned. */
    public var endIndex: Int64?
    /** The last status for the iterator that indicates whether any more results can be expected if the caller continues to make requests for more data using the iterator. */
    public var status: VcenterVmGuestFilesystemFilesLastIterationStatus

    public init(files: [VcenterVmGuestFilesystemFilesSummary], total: Int64, startIndex: Int64?, endIndex: Int64?, status: VcenterVmGuestFilesystemFilesLastIterationStatus) {
        self.files = files
        self.total = total
        self.startIndex = startIndex
        self.endIndex = endIndex
        self.status = status
    }

    public enum CodingKeys: String, CodingKey { 
        case files
        case total
        case startIndex = "start_index"
        case endIndex = "end_index"
        case status
    }


}

