//
// VmguestfilesystemfilesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class VmguestfilesystemfilesAPI {
    /**
     Returns information about a file or directory in the guest.    if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.GuestOperations.Query.  
     
     - parameter vm: (path) Virtual Machine to perform the operation on. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter path: (path) The complete path to the file. 
     - parameter requestBody: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func callGet(vm: String, path: String, requestBody: VcenterVmGuestFilesystemFilesGet, completion: @escaping ((_ data: VcenterVmGuestFilesystemFilesInfo?,_ error: Error?) -> Void)) {
        callGetWithRequestBuilder(vm: vm, path: path, requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns information about a file or directory in the guest.    if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.GuestOperations.Query.  
     - POST /api/vcenter/vm/{vm}/guest/filesystem/files/{path}?action=get
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter vm: (path) Virtual Machine to perform the operation on. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter path: (path) The complete path to the file. 
     - parameter requestBody: (body)  

     - returns: RequestBuilder<VcenterVmGuestFilesystemFilesInfo> 
     */
    open class func callGetWithRequestBuilder(vm: String, path: String, requestBody: VcenterVmGuestFilesystemFilesGet) -> RequestBuilder<VcenterVmGuestFilesystemFilesInfo> {
        var path = "/api/vcenter/vm/{vm}/guest/filesystem/files/{path}?action=get"
        let vmPreEscape = "\(vm)"
        let vmPostEscape = vmPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{vm}", with: vmPostEscape, options: .literal, range: nil)
        let pathPreEscape = "\(path)"
        let pathPostEscape = pathPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{path}", with: pathPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterVmGuestFilesystemFilesInfo>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Creates a temporary file.   Creates a new unique temporary file for the user to use as needed. The user is responsible for removing it when it is no longer needed.    The new file name will be created in a guest-specific format using prefix, a guest generated string and suffix in parentPath.     if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.GuestOperations.Modify.  
     
     - parameter vm: (path) Virtual Machine to perform the operation on. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter requestBody: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createTemporary(vm: String, requestBody: VcenterVmGuestFilesystemFilesCreateTemporary, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        createTemporaryWithRequestBuilder(vm: vm, requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Creates a temporary file.   Creates a new unique temporary file for the user to use as needed. The user is responsible for removing it when it is no longer needed.    The new file name will be created in a guest-specific format using prefix, a guest generated string and suffix in parentPath.     if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.GuestOperations.Modify.  
     - POST /api/vcenter/vm/{vm}/guest/filesystem/files?action=createTemporary
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={
  "blank": true,
  "bytes": [],
  "empty": true
}}]
     
     - parameter vm: (path) Virtual Machine to perform the operation on. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter requestBody: (body)  

     - returns: RequestBuilder<String> 
     */
    open class func createTemporaryWithRequestBuilder(vm: String, requestBody: VcenterVmGuestFilesystemFilesCreateTemporary) -> RequestBuilder<String> {
        var path = "/api/vcenter/vm/{vm}/guest/filesystem/files?action=createTemporary"
        let vmPreEscape = "\(vm)"
        let vmPostEscape = vmPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{vm}", with: vmPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Deletes a file in the guest operating system    if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.GuestOperations.Modify.  
     
     - parameter vm: (path) Virtual Machine to perform the operation on. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter path: (path) The complete path to the file or symbolic link to be deleted. 
     - parameter requestBody: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func delete(vm: String, path: String, requestBody: VcenterVmGuestFilesystemFilesDelete, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        deleteWithRequestBuilder(vm: vm, path: path, requestBody: requestBody).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Deletes a file in the guest operating system    if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.GuestOperations.Modify.  
     - POST /api/vcenter/vm/{vm}/guest/filesystem/files/{path}?action=delete
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     
     - parameter vm: (path) Virtual Machine to perform the operation on. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter path: (path) The complete path to the file or symbolic link to be deleted. 
     - parameter requestBody: (body)  

     - returns: RequestBuilder<Void> 
     */
    open class func deleteWithRequestBuilder(vm: String, path: String, requestBody: VcenterVmGuestFilesystemFilesDelete) -> RequestBuilder<Void> {
        var path = "/api/vcenter/vm/{vm}/guest/filesystem/files/{path}?action=delete"
        let vmPreEscape = "\(vm)"
        let vmPostEscape = vmPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{vm}", with: vmPostEscape, options: .literal, range: nil)
        let pathPreEscape = "\(path)"
        let pathPostEscape = pathPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{path}", with: pathPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Returns information about files and directories in the guest.   Files are returned in operating system-specific (inode) order. If the directory is modified between queries, missing or duplicate results can occur.     if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.GuestOperations.Query.  
     
     - parameter vm: (path) Virtual Machine to perform the operation on. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter requestBody: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func list(vm: String, requestBody: VcenterVmGuestFilesystemFilesList, completion: @escaping ((_ data: VcenterVmGuestFilesystemFilesListResult?,_ error: Error?) -> Void)) {
        listWithRequestBuilder(vm: vm, requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns information about files and directories in the guest.   Files are returned in operating system-specific (inode) order. If the directory is modified between queries, missing or duplicate results can occur.     if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.GuestOperations.Query.  
     - POST /api/vcenter/vm/{vm}/guest/filesystem/files?action=list
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter vm: (path) Virtual Machine to perform the operation on. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter requestBody: (body)  

     - returns: RequestBuilder<VcenterVmGuestFilesystemFilesListResult> 
     */
    open class func listWithRequestBuilder(vm: String, requestBody: VcenterVmGuestFilesystemFilesList) -> RequestBuilder<VcenterVmGuestFilesystemFilesListResult> {
        var path = "/api/vcenter/vm/{vm}/guest/filesystem/files?action=list"
        let vmPreEscape = "\(vm)"
        let vmPostEscape = vmPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{vm}", with: vmPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterVmGuestFilesystemFilesListResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Renames a file in the guest.    if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.GuestOperations.Modify.  
     
     - parameter vm: (path) Virtual Machine to perform the operation on. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter requestBody: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func move(vm: String, requestBody: VcenterVmGuestFilesystemFilesMove, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        moveWithRequestBuilder(vm: vm, requestBody: requestBody).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Renames a file in the guest.    if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.GuestOperations.Modify.  
     - POST /api/vcenter/vm/{vm}/guest/filesystem/files?action=move
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     
     - parameter vm: (path) Virtual Machine to perform the operation on. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter requestBody: (body)  

     - returns: RequestBuilder<Void> 
     */
    open class func moveWithRequestBuilder(vm: String, requestBody: VcenterVmGuestFilesystemFilesMove) -> RequestBuilder<Void> {
        var path = "/api/vcenter/vm/{vm}/guest/filesystem/files?action=move"
        let vmPreEscape = "\(vm)"
        let vmPostEscape = vmPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{vm}", with: vmPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Changes the file attributes of a specified file or directory inside the guest.    if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.GuestOperations.Modify.  
     
     - parameter vm: (path) Virtual Machine to perform the operation on. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter requestBody: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func update(vm: String, requestBody: VcenterVmGuestFilesystemFilesUpdate, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        updateWithRequestBuilder(vm: vm, requestBody: requestBody).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Changes the file attributes of a specified file or directory inside the guest.    if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.GuestOperations.Modify.  
     - POST /api/vcenter/vm/{vm}/guest/filesystem/files?action=update
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     
     - parameter vm: (path) Virtual Machine to perform the operation on. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter requestBody: (body)  

     - returns: RequestBuilder<Void> 
     */
    open class func updateWithRequestBuilder(vm: String, requestBody: VcenterVmGuestFilesystemFilesUpdate) -> RequestBuilder<Void> {
        var path = "/api/vcenter/vm/{vm}/guest/filesystem/files?action=update"
        let vmPreEscape = "\(vm)"
        let vmPostEscape = vmPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{vm}", with: vmPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
