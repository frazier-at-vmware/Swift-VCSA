//
// VapiStdErrorsUnableToAllocateResource.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct VapiStdErrorsUnableToAllocateResource: Codable {

    /** Stack of one or more localizable messages for human error consumers.   The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked.    Each subsequent message in the stack describes the \&quot;cause\&quot; of the prior message.  */
    public var messages: [VapiStdLocalizableMessage]
    /** Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully.   Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports.    The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.  Some operations will not set this field when reporting errors. */
    public var data: JSONValue?
    /** Discriminator field to help API consumers identify the structure type. Can be unset for compatibility with preceding implementations. */
    public var errorType: VapiStdErrorsErrorType?

    public init(messages: [VapiStdLocalizableMessage], data: JSONValue?, errorType: VapiStdErrorsErrorType?) {
        self.messages = messages
        self.data = data
        self.errorType = errorType
    }

    public enum CodingKeys: String, CodingKey { 
        case messages
        case data
        case errorType = "error_type"
    }


}

