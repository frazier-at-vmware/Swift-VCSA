//
// DeploymentimportHistoryAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class DeploymentimportHistoryAPI {
    /**
     Get the current status of the vCenter historical data import.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func callGet(completion: @escaping ((_ data: VcenterDeploymentImportHistoryInfo?,_ error: Error?) -> Void)) {
        callGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get the current status of the vCenter historical data import.
     - GET /api/vcenter/deployment/history
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]

     - returns: RequestBuilder<VcenterDeploymentImportHistoryInfo> 
     */
    open class func callGetWithRequestBuilder() -> RequestBuilder<VcenterDeploymentImportHistoryInfo> {
        let path = "/api/vcenter/deployment/history"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterDeploymentImportHistoryInfo>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get the current status of the vCenter historical data import.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func callGet_0(completion: @escaping ((_ data: VcenterDeploymentImportHistoryResp?,_ error: Error?) -> Void)) {
        callGet_0WithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get the current status of the vCenter historical data import.
     - GET /rest/vcenter/deployment/history
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]

     - returns: RequestBuilder<VcenterDeploymentImportHistoryResp> 
     */
    open class func callGet_0WithRequestBuilder() -> RequestBuilder<VcenterDeploymentImportHistoryResp> {
        let path = "/rest/vcenter/deployment/history"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterDeploymentImportHistoryResp>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Cancels the task for importing vCenter historical data.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func cancel(completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        cancelWithRequestBuilder().execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Cancels the task for importing vCenter historical data.
     - POST /api/vcenter/deployment/history?action=cancel
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id

     - returns: RequestBuilder<Void> 
     */
    open class func cancelWithRequestBuilder() -> RequestBuilder<Void> {
        let path = "/api/vcenter/deployment/history?action=cancel"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Cancels the task for importing vCenter historical data.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func cancel_0(completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        cancel_0WithRequestBuilder().execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Cancels the task for importing vCenter historical data.
     - POST /rest/vcenter/deployment/history?action=cancel
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id

     - returns: RequestBuilder<Void> 
     */
    open class func cancel_0WithRequestBuilder() -> RequestBuilder<Void> {
        let path = "/rest/vcenter/deployment/history?action=cancel"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Pauses the task for importing vCenter historical data.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func pause(completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        pauseWithRequestBuilder().execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Pauses the task for importing vCenter historical data.
     - POST /api/vcenter/deployment/history?action=pause
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id

     - returns: RequestBuilder<Void> 
     */
    open class func pauseWithRequestBuilder() -> RequestBuilder<Void> {
        let path = "/api/vcenter/deployment/history?action=pause"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Pauses the task for importing vCenter historical data.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func pause_0(completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        pause_0WithRequestBuilder().execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Pauses the task for importing vCenter historical data.
     - POST /rest/vcenter/deployment/history?action=pause
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id

     - returns: RequestBuilder<Void> 
     */
    open class func pause_0WithRequestBuilder() -> RequestBuilder<Void> {
        let path = "/rest/vcenter/deployment/history?action=pause"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Resumes the task for importing vCenter historical data.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func resume(completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        resumeWithRequestBuilder().execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Resumes the task for importing vCenter historical data.
     - POST /api/vcenter/deployment/history?action=resume
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id

     - returns: RequestBuilder<Void> 
     */
    open class func resumeWithRequestBuilder() -> RequestBuilder<Void> {
        let path = "/api/vcenter/deployment/history?action=resume"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Resumes the task for importing vCenter historical data.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func resume_0(completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        resume_0WithRequestBuilder().execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Resumes the task for importing vCenter historical data.
     - POST /rest/vcenter/deployment/history?action=resume
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id

     - returns: RequestBuilder<Void> 
     */
    open class func resume_0WithRequestBuilder() -> RequestBuilder<Void> {
        let path = "/rest/vcenter/deployment/history?action=resume"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Creates and starts task for importing vCenter historical data.
     
     - parameter requestBody: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func start(requestBody: VcenterDeploymentImportHistoryStart? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        startWithRequestBuilder(requestBody: requestBody).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Creates and starts task for importing vCenter historical data.
     - POST /api/vcenter/deployment/history?action=start
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     
     - parameter requestBody: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func startWithRequestBuilder(requestBody: VcenterDeploymentImportHistoryStart? = nil) -> RequestBuilder<Void> {
        let path = "/api/vcenter/deployment/history?action=start"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Creates and starts task for importing vCenter historical data.
     
     - parameter requestBody: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func start_0(requestBody: VcenterDeploymentImportHistoryStart? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        start_0WithRequestBuilder(requestBody: requestBody).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Creates and starts task for importing vCenter historical data.
     - POST /rest/vcenter/deployment/history?action=start
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     
     - parameter requestBody: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func start_0WithRequestBuilder(requestBody: VcenterDeploymentImportHistoryStart? = nil) -> RequestBuilder<Void> {
        let path = "/rest/vcenter/deployment/history?action=start"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
