//
// VcenterVMInfo.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct VcenterVMInfo: Codable {

    /** Guest OS. */
    public var guestOS: VcenterVmGuestOS
    /** Virtual machine name. */
    public var name: String
    /** Identity of the virtual machine. This field is optional because it was added in a newer version than its parent node. */
    public var identity: VcenterVmIdentityInfo?
    /** Power state of the virtual machine. */
    public var powerState: VcenterVmPowerState
    /** Indicates whether the virtual machine is frozen for instant clone, or not. This field is optional because it was added in a newer version than its parent node. */
    public var instantCloneFrozen: Bool?
    /** Virtual hardware version information. */
    public var hardware: VcenterVmHardwareInfo
    /** Boot configuration. */
    public var boot: VcenterVmHardwareBootInfo
    /** Boot device configuration. If the list has no entries, a server-specific default boot sequence is used. */
    public var bootDevices: [VcenterVmHardwareBootDeviceEntry]
    /** CPU configuration. */
    public var cpu: VcenterVmHardwareCpuInfo
    /** Memory configuration. */
    public var memory: VcenterVmHardwareMemoryInfo
    /** List of disks. When clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.Disk. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.Disk. */
    public var disks: [VcenterVMInfoDisks]
    /** List of Ethernet adapters. When clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.Ethernet. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.Ethernet. */
    public var nics: [VcenterVMInfoNics]
    /** List of CD-ROMs. When clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.Cdrom. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.Cdrom. */
    public var cdroms: [VcenterVMInfoCdroms]
    /** List of floppy drives. When clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.Floppy. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.Floppy. */
    public var floppies: [VcenterVMInfoFloppies]
    /** List of parallel ports. When clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.ParallelPort. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.ParallelPort. */
    public var parallelPorts: [VcenterVMInfoParallelPorts]
    /** List of serial ports. When clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.SerialPort. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.SerialPort. */
    public var serialPorts: [VcenterVMInfoSerialPorts]
    /** List of SATA adapters. When clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.SataAdapter. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.SataAdapter. */
    public var sataAdapters: [VcenterVMInfoSataAdapters]
    /** List of SCSI adapters. When clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.ScsiAdapter. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.ScsiAdapter. */
    public var scsiAdapters: [VcenterVMInfoScsiAdapters]
    /** List of NVMe adapters. This field is optional because it was added in a newer version than its parent node. When clients pass a value of this structure as a parameter, the key in the field map must be an identifier for the resource type: vcenter.vm.hardware.NvmeAdapter. When operations return a value of this structure as a result, the key in the field map will be an identifier for the resource type: vcenter.vm.hardware.NvmeAdapter. */
    public var nvmeAdapters: [VcenterVMInfoNvmeAdapters]?

    public init(guestOS: VcenterVmGuestOS, name: String, identity: VcenterVmIdentityInfo?, powerState: VcenterVmPowerState, instantCloneFrozen: Bool?, hardware: VcenterVmHardwareInfo, boot: VcenterVmHardwareBootInfo, bootDevices: [VcenterVmHardwareBootDeviceEntry], cpu: VcenterVmHardwareCpuInfo, memory: VcenterVmHardwareMemoryInfo, disks: [VcenterVMInfoDisks], nics: [VcenterVMInfoNics], cdroms: [VcenterVMInfoCdroms], floppies: [VcenterVMInfoFloppies], parallelPorts: [VcenterVMInfoParallelPorts], serialPorts: [VcenterVMInfoSerialPorts], sataAdapters: [VcenterVMInfoSataAdapters], scsiAdapters: [VcenterVMInfoScsiAdapters], nvmeAdapters: [VcenterVMInfoNvmeAdapters]?) {
        self.guestOS = guestOS
        self.name = name
        self.identity = identity
        self.powerState = powerState
        self.instantCloneFrozen = instantCloneFrozen
        self.hardware = hardware
        self.boot = boot
        self.bootDevices = bootDevices
        self.cpu = cpu
        self.memory = memory
        self.disks = disks
        self.nics = nics
        self.cdroms = cdroms
        self.floppies = floppies
        self.parallelPorts = parallelPorts
        self.serialPorts = serialPorts
        self.sataAdapters = sataAdapters
        self.scsiAdapters = scsiAdapters
        self.nvmeAdapters = nvmeAdapters
    }

    public enum CodingKeys: String, CodingKey { 
        case guestOS = "guest_OS"
        case name
        case identity
        case powerState = "power_state"
        case instantCloneFrozen = "instant_clone_frozen"
        case hardware
        case boot
        case bootDevices = "boot_devices"
        case cpu
        case memory
        case disks
        case nics
        case cdroms
        case floppies
        case parallelPorts = "parallel_ports"
        case serialPorts = "serial_ports"
        case sataAdapters = "sata_adapters"
        case scsiAdapters = "scsi_adapters"
        case nvmeAdapters = "nvme_adapters"
    }


}

