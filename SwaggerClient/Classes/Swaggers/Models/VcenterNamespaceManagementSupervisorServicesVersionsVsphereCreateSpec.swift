//
// VcenterNamespaceManagementSupervisorServicesVersionsVsphereCreateSpec.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct VcenterNamespaceManagementSupervisorServicesVersionsVsphereCreateSpec: Codable {

    /** Inline content that contains all service definition of the version in vSphere application service format, which shall be base64 encoded. */
    public var content: String
    /** Whether or not the Supervisor Service version is from a trusted provider, this field must be set to false if the service version is not from a trusted provider. If it is set to be true, but the Versions.VsphereCreateSpec.content is not signed or the signature is invalid, an InvalidArgument will be thrown. If unset, the default value is true. In this case, the Versions.VsphereCreateSpec.content must be signed and will be verified. */
    public var trustedProvider: Bool?
    /** Whether or not the End User License Agreement (EULA) that is specified in the Versions.VsphereCreateSpec.content is accepted. If a EULA is specified, this field must be set to be true so that the Supervisor Service version can be created. If unset, the default value is false. */
    public var acceptEULA: Bool?

    public init(content: String, trustedProvider: Bool?, acceptEULA: Bool?) {
        self.content = content
        self.trustedProvider = trustedProvider
        self.acceptEULA = acceptEULA
    }

    public enum CodingKeys: String, CodingKey { 
        case content
        case trustedProvider = "trusted_provider"
        case acceptEULA = "accept_EULA"
    }


}

