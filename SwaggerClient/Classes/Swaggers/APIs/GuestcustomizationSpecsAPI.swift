//
// GuestcustomizationSpecsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class GuestcustomizationSpecsAPI {
    /**
     Returns the guest customization specification from vCenter with the specified identifier. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachine.Provisioning.ReadCustSpecs.  
     
     - parameter name: (path) The name of the customization specification. The parameter must be an identifier for the resource type: vcenter.guest.CustomizationSpec. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func callGet(name: String, completion: @escaping ((_ data: VcenterGuestCustomizationSpecsInfo?,_ error: Error?) -> Void)) {
        callGetWithRequestBuilder(name: name).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns the guest customization specification from vCenter with the specified identifier. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachine.Provisioning.ReadCustSpecs.  
     - GET /api/vcenter/guest/customization-specs/{name}
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter name: (path) The name of the customization specification. The parameter must be an identifier for the resource type: vcenter.guest.CustomizationSpec. 

     - returns: RequestBuilder<VcenterGuestCustomizationSpecsInfo> 
     */
    open class func callGetWithRequestBuilder(name: String) -> RequestBuilder<VcenterGuestCustomizationSpecsInfo> {
        var path = "/api/vcenter/guest/customization-specs/{name}"
        let namePreEscape = "\(name)"
        let namePostEscape = namePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{name}", with: namePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterGuestCustomizationSpecsInfo>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Returns the guest customization specification from vCenter with the specified identifier. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachine.Provisioning.ReadCustSpecs.  
     
     - parameter name: (path) The name of the customization specification. The parameter must be an identifier for the resource type: vcenter.guest.CustomizationSpec. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func callGet_0(name: String, completion: @escaping ((_ data: VcenterGuestCustomizationSpecsResp?,_ error: Error?) -> Void)) {
        callGet_0WithRequestBuilder(name: name).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns the guest customization specification from vCenter with the specified identifier. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachine.Provisioning.ReadCustSpecs.  
     - GET /rest/vcenter/guest/customization-specs/{name}
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter name: (path) The name of the customization specification. The parameter must be an identifier for the resource type: vcenter.guest.CustomizationSpec. 

     - returns: RequestBuilder<VcenterGuestCustomizationSpecsResp> 
     */
    open class func callGet_0WithRequestBuilder(name: String) -> RequestBuilder<VcenterGuestCustomizationSpecsResp> {
        var path = "/rest/vcenter/guest/customization-specs/{name}"
        let namePreEscape = "\(name)"
        let namePostEscape = namePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{name}", with: namePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterGuestCustomizationSpecsResp>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Sets an existing specification, possibly after retrieving (by using CustomizationSpecs.get) and editing it. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachine.Provisioning.ModifyCustSpecs.  
     
     - parameter name: (path) The name of the customization specification that needs to be set. The parameter must be an identifier for the resource type: vcenter.guest.CustomizationSpec. 
     - parameter requestBody: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func callSet(name: String, requestBody: VcenterGuestCustomizationSpecsSet? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        callSetWithRequestBuilder(name: name, requestBody: requestBody).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Sets an existing specification, possibly after retrieving (by using CustomizationSpecs.get) and editing it. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachine.Provisioning.ModifyCustSpecs.  
     - PUT /api/vcenter/guest/customization-specs/{name}
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     
     - parameter name: (path) The name of the customization specification that needs to be set. The parameter must be an identifier for the resource type: vcenter.guest.CustomizationSpec. 
     - parameter requestBody: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func callSetWithRequestBuilder(name: String, requestBody: VcenterGuestCustomizationSpecsSet? = nil) -> RequestBuilder<Void> {
        var path = "/api/vcenter/guest/customization-specs/{name}"
        let namePreEscape = "\(name)"
        let namePostEscape = namePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{name}", with: namePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Sets an existing specification, possibly after retrieving (by using CustomizationSpecs.get) and editing it. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachine.Provisioning.ModifyCustSpecs.  
     
     - parameter name: (path) The name of the customization specification that needs to be set. The parameter must be an identifier for the resource type: vcenter.guest.CustomizationSpec. 
     - parameter requestBody: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func callSet_0(name: String, requestBody: VcenterGuestCustomizationSpecsSet, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        callSet_0WithRequestBuilder(name: name, requestBody: requestBody).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Sets an existing specification, possibly after retrieving (by using CustomizationSpecs.get) and editing it. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachine.Provisioning.ModifyCustSpecs.  
     - POST /rest/vcenter/guest/customization-specs/{name}
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     
     - parameter name: (path) The name of the customization specification that needs to be set. The parameter must be an identifier for the resource type: vcenter.guest.CustomizationSpec. 
     - parameter requestBody: (body)  

     - returns: RequestBuilder<Void> 
     */
    open class func callSet_0WithRequestBuilder(name: String, requestBody: VcenterGuestCustomizationSpecsSet) -> RequestBuilder<Void> {
        var path = "/rest/vcenter/guest/customization-specs/{name}"
        let namePreEscape = "\(name)"
        let namePostEscape = namePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{name}", with: namePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Creates a customization specification. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachine.Provisioning.ModifyCustSpecs.  
     
     - parameter requestBody: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func create(requestBody: VcenterGuestCustomizationSpecsCreate? = nil, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        createWithRequestBuilder(requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Creates a customization specification. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachine.Provisioning.ModifyCustSpecs.  
     - POST /api/vcenter/guest/customization-specs
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={
  "blank": true,
  "bytes": [],
  "empty": true
}}]
     
     - parameter requestBody: (body)  (optional)

     - returns: RequestBuilder<String> 
     */
    open class func createWithRequestBuilder(requestBody: VcenterGuestCustomizationSpecsCreate? = nil) -> RequestBuilder<String> {
        let path = "/api/vcenter/guest/customization-specs"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Creates a customization specification. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachine.Provisioning.ModifyCustSpecs.  
     
     - parameter requestBody: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func create_0(requestBody: VcenterGuestCustomizationSpecsCreate, completion: @escaping ((_ data: VcenterGuestCustomizationSpecsCreateResp?,_ error: Error?) -> Void)) {
        create_0WithRequestBuilder(requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Creates a customization specification. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachine.Provisioning.ModifyCustSpecs.  
     - POST /rest/vcenter/guest/customization-specs
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter requestBody: (body)  

     - returns: RequestBuilder<VcenterGuestCustomizationSpecsCreateResp> 
     */
    open class func create_0WithRequestBuilder(requestBody: VcenterGuestCustomizationSpecsCreate) -> RequestBuilder<VcenterGuestCustomizationSpecsCreateResp> {
        let path = "/rest/vcenter/guest/customization-specs"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterGuestCustomizationSpecsCreateResp>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Deletes a customization specification with the specified identifier. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachine.Provisioning.ModifyCustSpecs.  
     
     - parameter name: (path) The name of the customization specification that needs to be deleted. The parameter must be an identifier for the resource type: vcenter.guest.CustomizationSpec. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func delete(name: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        deleteWithRequestBuilder(name: name).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Deletes a customization specification with the specified identifier. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachine.Provisioning.ModifyCustSpecs.  
     - DELETE /api/vcenter/guest/customization-specs/{name}
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     
     - parameter name: (path) The name of the customization specification that needs to be deleted. The parameter must be an identifier for the resource type: vcenter.guest.CustomizationSpec. 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteWithRequestBuilder(name: String) -> RequestBuilder<Void> {
        var path = "/api/vcenter/guest/customization-specs/{name}"
        let namePreEscape = "\(name)"
        let namePostEscape = namePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{name}", with: namePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Deletes a customization specification with the specified identifier. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachine.Provisioning.ModifyCustSpecs.  
     
     - parameter name: (path) The name of the customization specification that needs to be deleted. The parameter must be an identifier for the resource type: vcenter.guest.CustomizationSpec. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func delete_0(name: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        delete_0WithRequestBuilder(name: name).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Deletes a customization specification with the specified identifier. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachine.Provisioning.ModifyCustSpecs.  
     - DELETE /rest/vcenter/guest/customization-specs/{name}
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     
     - parameter name: (path) The name of the customization specification that needs to be deleted. The parameter must be an identifier for the resource type: vcenter.guest.CustomizationSpec. 

     - returns: RequestBuilder<Void> 
     */
    open class func delete_0WithRequestBuilder(name: String) -> RequestBuilder<Void> {
        var path = "/rest/vcenter/guest/customization-specs/{name}"
        let namePreEscape = "\(name)"
        let namePostEscape = namePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{name}", with: namePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Returns the content of the customization specification in the specified format. Note that any passwords in the customization specification will be set to blank values during the export operation. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachine.Provisioning.ReadCustSpecs.  
     
     - parameter name: (path) The name of the customization specification that has to be returned. The parameter must be an identifier for the resource type: vcenter.guest.CustomizationSpec. 
     - parameter requestBody: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func export(name: String, requestBody: VcenterGuestCustomizationSpecsExport, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        exportWithRequestBuilder(name: name, requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns the content of the customization specification in the specified format. Note that any passwords in the customization specification will be set to blank values during the export operation. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachine.Provisioning.ReadCustSpecs.  
     - POST /api/vcenter/guest/customization-specs/{name}?action=export
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={
  "blank": true,
  "bytes": [],
  "empty": true
}}]
     
     - parameter name: (path) The name of the customization specification that has to be returned. The parameter must be an identifier for the resource type: vcenter.guest.CustomizationSpec. 
     - parameter requestBody: (body)  

     - returns: RequestBuilder<String> 
     */
    open class func exportWithRequestBuilder(name: String, requestBody: VcenterGuestCustomizationSpecsExport) -> RequestBuilder<String> {
        var path = "/api/vcenter/guest/customization-specs/{name}?action=export"
        let namePreEscape = "\(name)"
        let namePostEscape = namePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{name}", with: namePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Returns the content of the customization specification in the specified format. Note that any passwords in the customization specification will be set to blank values during the export operation. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachine.Provisioning.ReadCustSpecs.  
     
     - parameter name: (path) The name of the customization specification that has to be returned. The parameter must be an identifier for the resource type: vcenter.guest.CustomizationSpec. 
     - parameter requestBody: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func export_0(name: String, requestBody: VcenterGuestCustomizationSpecsExport, completion: @escaping ((_ data: VcenterGuestCustomizationSpecsExportResp?,_ error: Error?) -> Void)) {
        export_0WithRequestBuilder(name: name, requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns the content of the customization specification in the specified format. Note that any passwords in the customization specification will be set to blank values during the export operation. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachine.Provisioning.ReadCustSpecs.  
     - POST /rest/vcenter/guest/customization-specs/{name}?action=export
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter name: (path) The name of the customization specification that has to be returned. The parameter must be an identifier for the resource type: vcenter.guest.CustomizationSpec. 
     - parameter requestBody: (body)  

     - returns: RequestBuilder<VcenterGuestCustomizationSpecsExportResp> 
     */
    open class func export_0WithRequestBuilder(name: String, requestBody: VcenterGuestCustomizationSpecsExport) -> RequestBuilder<VcenterGuestCustomizationSpecsExportResp> {
        var path = "/rest/vcenter/guest/customization-specs/{name}?action=export"
        let namePreEscape = "\(name)"
        let namePostEscape = namePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{name}", with: namePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterGuestCustomizationSpecsExportResp>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Converts a well formatted string to a CustomizationSpecs.CreateSpec. The resulting object can be passed to CustomizationSpecs.create operation. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachine.Provisioning.ModifyCustSpecs.  
     
     - parameter requestBody: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func importSpecification(requestBody: VcenterGuestCustomizationSpecsImportSpecification, completion: @escaping ((_ data: VcenterGuestCustomizationSpecsCreateSpec?,_ error: Error?) -> Void)) {
        importSpecificationWithRequestBuilder(requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Converts a well formatted string to a CustomizationSpecs.CreateSpec. The resulting object can be passed to CustomizationSpecs.create operation. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachine.Provisioning.ModifyCustSpecs.  
     - POST /api/vcenter/guest/customization-specs?action=import
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter requestBody: (body)  

     - returns: RequestBuilder<VcenterGuestCustomizationSpecsCreateSpec> 
     */
    open class func importSpecificationWithRequestBuilder(requestBody: VcenterGuestCustomizationSpecsImportSpecification) -> RequestBuilder<VcenterGuestCustomizationSpecsCreateSpec> {
        let path = "/api/vcenter/guest/customization-specs?action=import"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterGuestCustomizationSpecsCreateSpec>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Converts a well formatted string to a CustomizationSpecs.CreateSpec. The resulting object can be passed to CustomizationSpecs.create operation. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachine.Provisioning.ModifyCustSpecs.  
     
     - parameter requestBody: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func importSpecification_0(requestBody: VcenterGuestCustomizationSpecsImportSpecification, completion: @escaping ((_ data: VcenterGuestCustomizationSpecsImportSpecificationResp?,_ error: Error?) -> Void)) {
        importSpecification_0WithRequestBuilder(requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Converts a well formatted string to a CustomizationSpecs.CreateSpec. The resulting object can be passed to CustomizationSpecs.create operation. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachine.Provisioning.ModifyCustSpecs.  
     - POST /rest/vcenter/guest/customization-specs?action=import
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter requestBody: (body)  

     - returns: RequestBuilder<VcenterGuestCustomizationSpecsImportSpecificationResp> 
     */
    open class func importSpecification_0WithRequestBuilder(requestBody: VcenterGuestCustomizationSpecsImportSpecification) -> RequestBuilder<VcenterGuestCustomizationSpecsImportSpecificationResp> {
        let path = "/rest/vcenter/guest/customization-specs?action=import"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterGuestCustomizationSpecsImportSpecificationResp>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     * enum for parameter oSType
     */
    public enum OSType_list: String { 
        case windows = "WINDOWS"
        case linux = "LINUX"
    }

    /**
     Returns information about at most 1000 visible (subject to permission checks) guest customization specifications in vCenter matching the CustomizationSpecs.FilterSpec. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachine.Provisioning.ReadCustSpecs.  
     
     - parameter names: (query) Names that guest customization specifications must have to match the filter (see CustomizationSpecs.Summary.name). If unset or empty, guest customization specifications with any name match the filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.guest.CustomizationSpec. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.guest.CustomizationSpec. (optional)
     - parameter oSType: (query) The CustomizationSpecs.OsType enumerated type defines the types of guest operating systems for which guest customization is supported. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func list(names: [String]? = nil, oSType: OSType_list? = nil, completion: @escaping ((_ data: [VcenterGuestCustomizationSpecsSummary]?,_ error: Error?) -> Void)) {
        listWithRequestBuilder(names: names, oSType: oSType).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns information about at most 1000 visible (subject to permission checks) guest customization specifications in vCenter matching the CustomizationSpecs.FilterSpec. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachine.Provisioning.ReadCustSpecs.  
     - GET /api/vcenter/guest/customization-specs
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={}}]
     
     - parameter names: (query) Names that guest customization specifications must have to match the filter (see CustomizationSpecs.Summary.name). If unset or empty, guest customization specifications with any name match the filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.guest.CustomizationSpec. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.guest.CustomizationSpec. (optional)
     - parameter oSType: (query) The CustomizationSpecs.OsType enumerated type defines the types of guest operating systems for which guest customization is supported. (optional)

     - returns: RequestBuilder<[VcenterGuestCustomizationSpecsSummary]> 
     */
    open class func listWithRequestBuilder(names: [String]? = nil, oSType: OSType_list? = nil) -> RequestBuilder<[VcenterGuestCustomizationSpecsSummary]> {
        let path = "/api/vcenter/guest/customization-specs"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "names": names, 
            "OS_type": oSType?.rawValue
        ])

        let requestBuilder: RequestBuilder<[VcenterGuestCustomizationSpecsSummary]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     * enum for parameter filterOSType
     */
    public enum FilterOSType_list_0: String { 
        case windows = "WINDOWS"
        case linux = "LINUX"
    }

    /**
     Returns information about at most 1000 visible (subject to permission checks) guest customization specifications in vCenter matching the CustomizationSpecs.FilterSpec. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachine.Provisioning.ReadCustSpecs.  
     
     - parameter filterNames: (query) Names that guest customization specifications must have to match the filter (see CustomizationSpecs.Summary.name). If unset or empty, guest customization specifications with any name match the filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.guest.CustomizationSpec. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.guest.CustomizationSpec. (optional)
     - parameter filterOSType: (query) The CustomizationSpecs.OsType enumerated type defines the types of guest operating systems for which guest customization is supported. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func list_0(filterNames: [String]? = nil, filterOSType: FilterOSType_list_0? = nil, completion: @escaping ((_ data: VcenterGuestCustomizationSpecsListResp?,_ error: Error?) -> Void)) {
        list_0WithRequestBuilder(filterNames: filterNames, filterOSType: filterOSType).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns information about at most 1000 visible (subject to permission checks) guest customization specifications in vCenter matching the CustomizationSpecs.FilterSpec. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachine.Provisioning.ReadCustSpecs.  
     - GET /rest/vcenter/guest/customization-specs
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter filterNames: (query) Names that guest customization specifications must have to match the filter (see CustomizationSpecs.Summary.name). If unset or empty, guest customization specifications with any name match the filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.guest.CustomizationSpec. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.guest.CustomizationSpec. (optional)
     - parameter filterOSType: (query) The CustomizationSpecs.OsType enumerated type defines the types of guest operating systems for which guest customization is supported. (optional)

     - returns: RequestBuilder<VcenterGuestCustomizationSpecsListResp> 
     */
    open class func list_0WithRequestBuilder(filterNames: [String]? = nil, filterOSType: FilterOSType_list_0? = nil) -> RequestBuilder<VcenterGuestCustomizationSpecsListResp> {
        let path = "/rest/vcenter/guest/customization-specs"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "filter.names": filterNames, 
            "filter.OS_type": filterOSType?.rawValue
        ])

        let requestBuilder: RequestBuilder<VcenterGuestCustomizationSpecsListResp>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
