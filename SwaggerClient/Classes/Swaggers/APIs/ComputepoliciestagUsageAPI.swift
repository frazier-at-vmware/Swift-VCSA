//
// ComputepoliciestagUsageAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class ComputepoliciestagUsageAPI {
    /**
     Returns information about the tags used by policies available in this vCenter server matching the TagUsage.FilterSpec. if you do not have all of the privileges described as follows:     -  Operation execution requires System.Read.  
     
     - parameter policies: (query) Identifiers that compute policies must have to match the filter. If unset or empty, then tags used by any policy match this filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.compute.Policy. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.compute.Policy. (optional)
     - parameter tags: (query) Identifiers that tags must have to match the filter. If unset or empty, then tags with any tag identifier match this filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: cis.tagging.Tag. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: cis.tagging.Tag. (optional)
     - parameter tagTypes: (query) Identifiers that tag types must have to match the filter. If unset or empty, then tags of any type match this filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vapi.resource. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vapi.resource. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func list(policies: [String]? = nil, tags: [String]? = nil, tagTypes: [String]? = nil, completion: @escaping ((_ data: [VcenterComputePoliciesTagUsageSummary]?,_ error: Error?) -> Void)) {
        listWithRequestBuilder(policies: policies, tags: tags, tagTypes: tagTypes).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns information about the tags used by policies available in this vCenter server matching the TagUsage.FilterSpec. if you do not have all of the privileges described as follows:     -  Operation execution requires System.Read.  
     - GET /api/vcenter/compute/policies/tag-usage
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={}}]
     
     - parameter policies: (query) Identifiers that compute policies must have to match the filter. If unset or empty, then tags used by any policy match this filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.compute.Policy. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.compute.Policy. (optional)
     - parameter tags: (query) Identifiers that tags must have to match the filter. If unset or empty, then tags with any tag identifier match this filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: cis.tagging.Tag. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: cis.tagging.Tag. (optional)
     - parameter tagTypes: (query) Identifiers that tag types must have to match the filter. If unset or empty, then tags of any type match this filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vapi.resource. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vapi.resource. (optional)

     - returns: RequestBuilder<[VcenterComputePoliciesTagUsageSummary]> 
     */
    open class func listWithRequestBuilder(policies: [String]? = nil, tags: [String]? = nil, tagTypes: [String]? = nil) -> RequestBuilder<[VcenterComputePoliciesTagUsageSummary]> {
        let path = "/api/vcenter/compute/policies/tag-usage"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "policies": policies, 
            "tags": tags, 
            "tag_types": tagTypes
        ])

        let requestBuilder: RequestBuilder<[VcenterComputePoliciesTagUsageSummary]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
