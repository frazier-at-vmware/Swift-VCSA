//
// VcenterNamespaceManagementNetworksInfo.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct VcenterNamespaceManagementNetworksInfo: Codable {

    /** Identifier of the network. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.namespace_management.Network. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.namespace_management.Network. */
    public var network: String
    /** The network provider that will manage the vSphere Namespaces network object. */
    public var networkProvider: VcenterNamespaceManagementClustersNetworkProvider
    /** Updated configuration specification for a DVPG-backed Namespaces network object, supported by VSPHERE_NETWORK network provider. This field is optional and it is only relevant when the value of Networks.Info.network-provider is VSPHERE_NETWORK. */
    public var vsphereNetwork: VcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo?
    /** Configuration specification for a NSXT-backed Namespaces network configuration, supported by NSXT_CONTAINER_PLUGIN network provider. This field is optional and it is only relevant when the value of Networks.Info.network-provider is NSXT_CONTAINER_PLUGIN. */
    public var nsxNetwork: VcenterNamespaceManagementNetworksNsxNetworkInfo?
    /** A list of Supervisor Namespaces associated with this network. This field is optional because it was added in a newer version than its parent node. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.namespaces.Instance. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.namespaces.Instance. */
    public var namespaces: [String]?

    public init(network: String, networkProvider: VcenterNamespaceManagementClustersNetworkProvider, vsphereNetwork: VcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo?, nsxNetwork: VcenterNamespaceManagementNetworksNsxNetworkInfo?, namespaces: [String]?) {
        self.network = network
        self.networkProvider = networkProvider
        self.vsphereNetwork = vsphereNetwork
        self.nsxNetwork = nsxNetwork
        self.namespaces = namespaces
    }

    public enum CodingKeys: String, CodingKey { 
        case network
        case networkProvider = "network_provider"
        case vsphereNetwork = "vsphere_network"
        case nsxNetwork = "nsx_network"
        case namespaces
    }


}

