//
// DeploymentinstallpscstandaloneAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class DeploymentinstallpscstandaloneAPI {
    /**
     Checks that the information to configure a non-replicated PSC satisfies the requirements.
     
     - parameter requestBody: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func check(requestBody: VcenterDeploymentInstallPscStandaloneCheck? = nil, completion: @escaping ((_ data: VcenterDeploymentCheckInfo?,_ error: Error?) -> Void)) {
        checkWithRequestBuilder(requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Checks that the information to configure a non-replicated PSC satisfies the requirements.
     - POST /api/vcenter/deployment/install/psc/standalone?action=check
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter requestBody: (body)  (optional)

     - returns: RequestBuilder<VcenterDeploymentCheckInfo> 
     */
    open class func checkWithRequestBuilder(requestBody: VcenterDeploymentInstallPscStandaloneCheck? = nil) -> RequestBuilder<VcenterDeploymentCheckInfo> {
        let path = "/api/vcenter/deployment/install/psc/standalone?action=check"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterDeploymentCheckInfo>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Checks that the information to configure a non-replicated PSC satisfies the requirements.
     
     - parameter requestBody: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func check_0(requestBody: VcenterDeploymentInstallPscStandaloneCheck, completion: @escaping ((_ data: VcenterDeploymentInstallPscStandaloneCheckResp?,_ error: Error?) -> Void)) {
        check_0WithRequestBuilder(requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Checks that the information to configure a non-replicated PSC satisfies the requirements.
     - POST /rest/vcenter/deployment/install/psc/standalone?action=check
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter requestBody: (body)  

     - returns: RequestBuilder<VcenterDeploymentInstallPscStandaloneCheckResp> 
     */
    open class func check_0WithRequestBuilder(requestBody: VcenterDeploymentInstallPscStandaloneCheck) -> RequestBuilder<VcenterDeploymentInstallPscStandaloneCheckResp> {
        let path = "/rest/vcenter/deployment/install/psc/standalone?action=check"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterDeploymentInstallPscStandaloneCheckResp>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
