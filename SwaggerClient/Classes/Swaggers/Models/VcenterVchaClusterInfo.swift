//
// VcenterVchaClusterInfo.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct VcenterVchaClusterInfo: Codable {

    /** Configuration state of the VCHA cluster.  The active node&#39;s management vCenter server credentials are not required to populate this field. If unset, then the information is unavailable. */
    public var configState: VcenterVchaClusterConfigState?
    /** Node configuration information for the VCHA cluster. If unset, then the information is unavailable. */
    public var node1: VcenterVchaClusterNodeInfo?
    /** Node configuration information for the VCHA cluster. If unset, then the information is unavailable or the node is not cloned yet. */
    public var node2: VcenterVchaClusterNodeInfo?
    /** Node configuration information for the VCHA cluster. If unset, then the information is unavailable or the node is not cloned yet. */
    public var witness: VcenterVchaClusterWitnessInfo?
    /** Operational mode of the VCHA Cluster. If unset, then the information is unavailable or the node is not cloned yet. */
    public var mode: VcenterVchaClusterClusterMode?
    /** Last known state of the VCHA Cluster. If unset, then the information is unavailable or the node is not cloned yet. */
    public var healthState: VcenterVchaClusterClusterState?
    /** Health warning messages if the health information is unavailable. If unset, then the cluster is in a healthy state. */
    public var healthException: [VapiStdLocalizableMessage]?
    /** A collection of messages describing the reason for a non-healthy Cluster. If unset, then the cluster is in a healthy state. */
    public var healthWarnings: [VcenterVchaClusterErrorCondition]?
    /** Specifies if manual failover is allowed. If unset, then the cluster state healthy and manual failover allowance in accordance with the cluster mode. */
    public var manualFailoverAllowed: Bool?
    /** Specifies if automatic failover is allowed. If unset, then the cluster state healthy and automatic failover allowance in accordance with the cluster mode. */
    public var autoFailoverAllowed: Bool?

    public init(configState: VcenterVchaClusterConfigState?, node1: VcenterVchaClusterNodeInfo?, node2: VcenterVchaClusterNodeInfo?, witness: VcenterVchaClusterWitnessInfo?, mode: VcenterVchaClusterClusterMode?, healthState: VcenterVchaClusterClusterState?, healthException: [VapiStdLocalizableMessage]?, healthWarnings: [VcenterVchaClusterErrorCondition]?, manualFailoverAllowed: Bool?, autoFailoverAllowed: Bool?) {
        self.configState = configState
        self.node1 = node1
        self.node2 = node2
        self.witness = witness
        self.mode = mode
        self.healthState = healthState
        self.healthException = healthException
        self.healthWarnings = healthWarnings
        self.manualFailoverAllowed = manualFailoverAllowed
        self.autoFailoverAllowed = autoFailoverAllowed
    }

    public enum CodingKeys: String, CodingKey { 
        case configState = "config_state"
        case node1
        case node2
        case witness
        case mode
        case healthState = "health_state"
        case healthException = "health_exception"
        case healthWarnings = "health_warnings"
        case manualFailoverAllowed = "manual_failover_allowed"
        case autoFailoverAllowed = "auto_failover_allowed"
    }


}

