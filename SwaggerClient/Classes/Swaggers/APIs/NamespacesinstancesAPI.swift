//
// NamespacesinstancesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class NamespacesinstancesAPI {
    /**
     Returns information about a specific namespace on a single vSphere cluster. if you do not have all of the privileges described as follows:     -  The resource vcenter.namespaces.Instance referenced by the parameter namespace requires System.Read.  
     
     - parameter namespace: (path) Identifier for the namespace. The parameter must be an identifier for the resource type: vcenter.namespaces.Instance. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func callGet(namespace: String, completion: @escaping ((_ data: VcenterNamespacesInstancesInfo?,_ error: Error?) -> Void)) {
        callGetWithRequestBuilder(namespace: namespace).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns information about a specific namespace on a single vSphere cluster. if you do not have all of the privileges described as follows:     -  The resource vcenter.namespaces.Instance referenced by the parameter namespace requires System.Read.  
     - GET /api/vcenter/namespaces/instances/{namespace}
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter namespace: (path) Identifier for the namespace. The parameter must be an identifier for the resource type: vcenter.namespaces.Instance. 

     - returns: RequestBuilder<VcenterNamespacesInstancesInfo> 
     */
    open class func callGetWithRequestBuilder(namespace: String) -> RequestBuilder<VcenterNamespacesInstancesInfo> {
        var path = "/api/vcenter/namespaces/instances/{namespace}"
        let namespacePreEscape = "\(namespace)"
        let namespacePostEscape = namespacePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{namespace}", with: namespacePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterNamespacesInstancesInfo>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Set a new configuration on the namespace object. The specified configuration is applied in entirety and will replace the current configuration fully. if you do not have all of the privileges described as follows:     -  The resource vcenter.namespaces.Instance referenced by the parameter namespace requires Namespaces.Configure.  
     
     - parameter namespace: (path) Identifier for the namespace. The parameter must be an identifier for the resource type: vcenter.namespaces.Instance. 
     - parameter requestBody: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func callSet(namespace: String, requestBody: VcenterNamespacesInstancesSet? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        callSetWithRequestBuilder(namespace: namespace, requestBody: requestBody).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Set a new configuration on the namespace object. The specified configuration is applied in entirety and will replace the current configuration fully. if you do not have all of the privileges described as follows:     -  The resource vcenter.namespaces.Instance referenced by the parameter namespace requires Namespaces.Configure.  
     - PUT /api/vcenter/namespaces/instances/{namespace}
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     
     - parameter namespace: (path) Identifier for the namespace. The parameter must be an identifier for the resource type: vcenter.namespaces.Instance. 
     - parameter requestBody: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func callSetWithRequestBuilder(namespace: String, requestBody: VcenterNamespacesInstancesSet? = nil) -> RequestBuilder<Void> {
        var path = "/api/vcenter/namespaces/instances/{namespace}"
        let namespacePreEscape = "\(namespace)"
        let namespacePostEscape = namespacePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{namespace}", with: namespacePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Create a namespace object on a single vSphere cluster. if you do not have all of the privileges described as follows:     -  The resource ClusterComputeResource referenced by the attribute Instances.CreateSpec.cluster requires Namespaces.Configure.  
     
     - parameter requestBody: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func create(requestBody: VcenterNamespacesInstancesCreate? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        createWithRequestBuilder(requestBody: requestBody).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Create a namespace object on a single vSphere cluster. if you do not have all of the privileges described as follows:     -  The resource ClusterComputeResource referenced by the attribute Instances.CreateSpec.cluster requires Namespaces.Configure.  
     - POST /api/vcenter/namespaces/instances
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     
     - parameter requestBody: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func createWithRequestBuilder(requestBody: VcenterNamespacesInstancesCreate? = nil) -> RequestBuilder<Void> {
        let path = "/api/vcenter/namespaces/instances"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Create a namespace object on a Supervisor.
     
     - parameter requestBody: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createV2(requestBody: VcenterNamespacesInstancesCreateV2? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        createV2WithRequestBuilder(requestBody: requestBody).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Create a namespace object on a Supervisor.
     - POST /api/vcenter/namespaces/instances/v2
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     
     - parameter requestBody: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func createV2WithRequestBuilder(requestBody: VcenterNamespacesInstancesCreateV2? = nil) -> RequestBuilder<Void> {
        let path = "/api/vcenter/namespaces/instances/v2"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Delete the namespace object in the cluster. if you do not have all of the privileges described as follows:     -  The resource vcenter.namespaces.Instance referenced by the parameter namespace requires Namespaces.Configure.  
     
     - parameter namespace: (path) Identifier for the namespace. The parameter must be an identifier for the resource type: vcenter.namespaces.Instance. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func delete(namespace: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        deleteWithRequestBuilder(namespace: namespace).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Delete the namespace object in the cluster. if you do not have all of the privileges described as follows:     -  The resource vcenter.namespaces.Instance referenced by the parameter namespace requires Namespaces.Configure.  
     - DELETE /api/vcenter/namespaces/instances/{namespace}
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     
     - parameter namespace: (path) Identifier for the namespace. The parameter must be an identifier for the resource type: vcenter.namespaces.Instance. 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteWithRequestBuilder(namespace: String) -> RequestBuilder<Void> {
        var path = "/api/vcenter/namespaces/instances/{namespace}"
        let namespacePreEscape = "\(namespace)"
        let namespacePostEscape = namespacePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{namespace}", with: namespacePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Returns information about a specific namespace on a Supervisor. if you do not have all of the privileges described as follows:     -  The resource vcenter.namespaces.Instance referenced by the parameter namespace requires System.Read.  
     
     - parameter namespace: (path) Identifier for the namespace. The parameter must be an identifier for the resource type: vcenter.namespaces.Instance. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getV2(namespace: String, completion: @escaping ((_ data: VcenterNamespacesInstancesInfoV2?,_ error: Error?) -> Void)) {
        getV2WithRequestBuilder(namespace: namespace).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns information about a specific namespace on a Supervisor. if you do not have all of the privileges described as follows:     -  The resource vcenter.namespaces.Instance referenced by the parameter namespace requires System.Read.  
     - GET /api/vcenter/namespaces/instances/v2/{namespace}
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter namespace: (path) Identifier for the namespace. The parameter must be an identifier for the resource type: vcenter.namespaces.Instance. 

     - returns: RequestBuilder<VcenterNamespacesInstancesInfoV2> 
     */
    open class func getV2WithRequestBuilder(namespace: String) -> RequestBuilder<VcenterNamespacesInstancesInfoV2> {
        var path = "/api/vcenter/namespaces/instances/v2/{namespace}"
        let namespacePreEscape = "\(namespace)"
        let namespacePostEscape = namespacePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{namespace}", with: namespacePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterNamespacesInstancesInfoV2>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Returns the information about all namespaces in this vCenter Server. The information is tied to a single vSphere cluster. if you do not have all of the privileges described as follows:     -  Operation execution requires System.Anonymous.  
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func list(completion: @escaping ((_ data: [VcenterNamespacesInstancesSummary]?,_ error: Error?) -> Void)) {
        listWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns the information about all namespaces in this vCenter Server. The information is tied to a single vSphere cluster. if you do not have all of the privileges described as follows:     -  Operation execution requires System.Anonymous.  
     - GET /api/vcenter/namespaces/instances
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={}}]

     - returns: RequestBuilder<[VcenterNamespacesInstancesSummary]> 
     */
    open class func listWithRequestBuilder() -> RequestBuilder<[VcenterNamespacesInstancesSummary]> {
        let path = "/api/vcenter/namespaces/instances"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[VcenterNamespacesInstancesSummary]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Returns the information about all namespaces in this vCenter Server. The information is tied to a Supervisor. if you do not have all of the privileges described as follows:     -  Operation execution requires System.Anonymous.  
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listV2(completion: @escaping ((_ data: [VcenterNamespacesInstancesSummaryV2]?,_ error: Error?) -> Void)) {
        listV2WithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns the information about all namespaces in this vCenter Server. The information is tied to a Supervisor. if you do not have all of the privileges described as follows:     -  Operation execution requires System.Anonymous.  
     - GET /api/vcenter/namespaces/instances/v2
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={}}]

     - returns: RequestBuilder<[VcenterNamespacesInstancesSummaryV2]> 
     */
    open class func listV2WithRequestBuilder() -> RequestBuilder<[VcenterNamespacesInstancesSummaryV2]> {
        let path = "/api/vcenter/namespaces/instances/v2"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[VcenterNamespacesInstancesSummaryV2]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Update the namespace object. The specified configuration is applied partially and unset fields in spec will leave those parts of configuration as-is. if you do not have all of the privileges described as follows:     -  The resource vcenter.namespaces.Instance referenced by the parameter namespace requires Namespaces.Configure.  
     
     - parameter namespace: (path) Identifier for the namespace. The parameter must be an identifier for the resource type: vcenter.namespaces.Instance. 
     - parameter requestBody: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func update(namespace: String, requestBody: VcenterNamespacesInstancesUpdate? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        updateWithRequestBuilder(namespace: namespace, requestBody: requestBody).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Update the namespace object. The specified configuration is applied partially and unset fields in spec will leave those parts of configuration as-is. if you do not have all of the privileges described as follows:     -  The resource vcenter.namespaces.Instance referenced by the parameter namespace requires Namespaces.Configure.  
     - PATCH /api/vcenter/namespaces/instances/{namespace}
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     
     - parameter namespace: (path) Identifier for the namespace. The parameter must be an identifier for the resource type: vcenter.namespaces.Instance. 
     - parameter requestBody: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func updateWithRequestBuilder(namespace: String, requestBody: VcenterNamespacesInstancesUpdate? = nil) -> RequestBuilder<Void> {
        var path = "/api/vcenter/namespaces/instances/{namespace}"
        let namespacePreEscape = "\(namespace)"
        let namespacePostEscape = namespacePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{namespace}", with: namespacePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PATCH", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
