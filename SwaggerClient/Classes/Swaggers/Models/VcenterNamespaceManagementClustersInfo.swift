//
// VcenterNamespaceManagementClustersInfo.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct VcenterNamespaceManagementClustersInfo: Codable {

    /** Current setting for SizingHint. This affects the size and resources allocated to the Kubernetes API server. This field is optional because it was added in a newer version than its parent node. */
    public var sizeHint: VcenterNamespaceManagementSizingHint?
    /** Basic runtime statistics for the cluster. */
    public var statSummary: VcenterNamespaceManagementClustersStats
    /** Current setting for Clusters.ConfigStatus. */
    public var configStatus: VcenterNamespaceManagementClustersConfigStatus
    /** The conditions that need to be met for the cluster to reach the desired state. This field is optional because it was added in a newer version than its parent node. */
    public var conditions: [VcenterNamespaceManagementClustersCondition]?
    /** Current set of messages associated with the object. */
    public var messages: [VcenterNamespaceManagementClustersMessage]
    /** Current setting for Clusters.KubernetesStatus. */
    public var kubernetesStatus: VcenterNamespaceManagementClustersKubernetesStatus
    /** Current set of messages associated with the object. */
    public var kubernetesStatusMessages: [VcenterNamespaceManagementClustersMessage]
    /** Kubernetes API Server IP address on the management network. This is a floating IP and assigned to one of the control plane VMs on the management network. This endpoint is used by vSphere components. */
    public var apiServerManagementEndpoint: String
    /** Kubernetes API Server IP address via cluster network. This is the IP address of the Kubernetes LoadBalancer type service fronting the apiservers. This endpoint is the one configured in kubeconfig after login, and used for most human and application interaction with Kubernetes. */
    public var apiServerClusterEndpoint: String
    /** Identifier of the Kubernetes API servers. These are the IP addresses of the VM instances for the Kubernetes control plane on the management network. */
    public var apiServers: [String]
    /** PEM-encoded x509 certificate used by TLS endpoint on Kubernetes API servers when accessed from the management network, e.g. from ESX servers or VCSA. set only when Clusters.Info.api-server-management-endpoint is used. */
    public var tlsManagementEndpointCertificate: String?
    /** PEM-encoded x509 certificate(s) used by TLS endpoint on Kubernetes API servers when accessed via the load balancer, e.g. devops user on corporate network. In case of a certificates chain, the order of the certificates in this field is important. The first certificate must be the leaf certificate for your domain name, the second the intermediate certificate(s) and the last one must be the root certificate. set only when Clusters.Info.api-server-management-endpoint is used. */
    public var tlsEndpointCertificate: String?
    /** The provider of cluster networking for this vSphere Namespaces cluster. */
    public var networkProvider: VcenterNamespaceManagementClustersNetworkProvider
    /** Specification for the NSX Container Plugin cluster network. This field is optional and it is only relevant when the value of Clusters.Info.network-provider is NSXT_CONTAINER_PLUGIN. */
    public var ncpClusterNetworkInfo: VcenterNamespaceManagementClustersNCPClusterNetworkInfo?
    /** Information about workload networks associated with the cluster. This field is optional and it is only relevant when the value of Clusters.Info.network-provider is VSPHERE_NETWORK. */
    public var workloadNetworks: VcenterNamespaceManagementClustersWorkloadNetworksInfo?
    /** Information about NTP server DNS names or IP addresses to use for workloads such as Tanzu Kubernetes Grid VMs, specified in order of preference. unset when NTP server for Kubernetes API servers is used. */
    public var workloadNtpServers: [String]?
    /** Information related to the Load balancer used for provisioning virtual servers in the namespace. This field is optional and it is only relevant when the value of Clusters.Info.network-provider is VSPHERE_NETWORK. */
    public var loadBalancers: [VcenterNamespaceManagementLoadBalancersInfo]?
    /** CIDR block from which Kubernetes allocates service cluster IP addresses. */
    public var serviceCidr: VcenterNamespaceManagementIpv4Cidr
    /** Specification for the management network on Kubernetes API server. This field is optional because it was added in a newer version than its parent node. */
    public var masterManagementNetwork: VcenterNamespaceManagementClustersNetworkSpec?
    /** List of DNS server IP addresses to use on Kubernetes API server, specified in order of preference. If unset, no default DNS servers are set. */
    public var masterDNS: [String]?
    /** List of DNS server IP addresses to use for pods that execute on the worker nodes (which are native pods on ESXi hosts in the vSphere Namespaces Supervisor). If unset, no default DNS servers are set. */
    public var workerDNS: [String]?
    /** Identifier of storage policy associated with Kubernetes API server. This field is optional because it was added in a newer version than its parent node. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: SpsStorageProfile. When operations return a value of this structure as a result, the field will be an identifier for the resource type: SpsStorageProfile. */
    public var masterStoragePolicy: String?
    /** Identifier of storage policy associated with ephemeral disks of all the Kubernetes Pods in the cluster. This field is optional because it was added in a newer version than its parent node. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: SpsStorageProfile. When operations return a value of this structure as a result, the field will be an identifier for the resource type: SpsStorageProfile. */
    public var ephemeralStoragePolicy: String?
    /** Specification for configuring Cloud Native Storage file volume support on Supervisor. This feature provides support for provisioning ReadWriteMany persistent volumes on this cluster and/or external clusters. If unset, it means the file volume support is not enabled on this Supervisor. */
    public var cnsFileConfig: VcenterNamespaceManagementCNSFileConfig?
    /** Disclaimer to be displayed prior to login via the Kubectl plugin. If unset, just skip it. */
    public var loginBanner: String?
    /** List of additional DNS names to associate with the Kubernetes API server. These DNS names are embedded in the TLS certificate presented by the API server. If unset, no additional DNS names are embedded in the TLS certificate. */
    public var masterDNSNames: [String]?
    /** Specification for storage to be used for container images. This field is optional because it was added in a newer version than its parent node. */
    public var imageStorage: VcenterNamespaceManagementClustersImageStorageSpec?
    /** Default image registry to use when Kubernetes Pod container specification does not specify it as part of the container image name. If unset, defaults to Docker Hub. */
    public var defaultImageRegistry: VcenterNamespaceManagementClustersImageRegistry?
    /** Default image repository to use when Kubernetes Pod container specification does not specify it as part of the container image name. If unset, defaults to Docker Hub official repository in case of Docker Hub image registry, otherwise defaults to empty string. */
    public var defaultImageRepository: String?
    /** List of domains (for example \&quot;vmware.com\&quot;) to be searched when trying to lookup a host name on Kubernetes API server, specified in order of preference. If unset, no default DNS search domains are set. */
    public var masterDNSSearchDomains: [String]?
    /** List of NTP server DNS names or IP addresses to use on Kubernetes API server, specified in order of preference. If unset, VMware Tools based time synchronization is enabled. */
    public var masterNTPServers: [String]?
    /** Identifier of the Content Library which holds the VM Images for vSphere Kubernetes Service. This Content Library should be subscribed to VMware&#39;s hosted vSphere Kubernetes Service Repository. If unset, a default subscribed Content Library will be created. It will sync VMware-supplied images for Tanzu Kubernetes Grid over the internet. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: content.Library. When operations return a value of this structure as a result, the field will be an identifier for the resource type: content.Library. */
    public var defaultKubernetesServiceContentLibrary: String?
    /** Proxy configuration that is applied to the Supervisor. The proxy should be reachable from the management network and is used for image pulling and container traffic exiting out of the Supervisor.   Note that the proxy password will be removed from the URLs as per Section 3.2.1 of RFC3986 security recommendation. This field is optional because it was added in a newer version than its parent node. */
    public var clusterProxyConfig: VcenterNamespaceManagementProxyConfiguration?

    public init(sizeHint: VcenterNamespaceManagementSizingHint?, statSummary: VcenterNamespaceManagementClustersStats, configStatus: VcenterNamespaceManagementClustersConfigStatus, conditions: [VcenterNamespaceManagementClustersCondition]?, messages: [VcenterNamespaceManagementClustersMessage], kubernetesStatus: VcenterNamespaceManagementClustersKubernetesStatus, kubernetesStatusMessages: [VcenterNamespaceManagementClustersMessage], apiServerManagementEndpoint: String, apiServerClusterEndpoint: String, apiServers: [String], tlsManagementEndpointCertificate: String?, tlsEndpointCertificate: String?, networkProvider: VcenterNamespaceManagementClustersNetworkProvider, ncpClusterNetworkInfo: VcenterNamespaceManagementClustersNCPClusterNetworkInfo?, workloadNetworks: VcenterNamespaceManagementClustersWorkloadNetworksInfo?, workloadNtpServers: [String]?, loadBalancers: [VcenterNamespaceManagementLoadBalancersInfo]?, serviceCidr: VcenterNamespaceManagementIpv4Cidr, masterManagementNetwork: VcenterNamespaceManagementClustersNetworkSpec?, masterDNS: [String]?, workerDNS: [String]?, masterStoragePolicy: String?, ephemeralStoragePolicy: String?, cnsFileConfig: VcenterNamespaceManagementCNSFileConfig?, loginBanner: String?, masterDNSNames: [String]?, imageStorage: VcenterNamespaceManagementClustersImageStorageSpec?, defaultImageRegistry: VcenterNamespaceManagementClustersImageRegistry?, defaultImageRepository: String?, masterDNSSearchDomains: [String]?, masterNTPServers: [String]?, defaultKubernetesServiceContentLibrary: String?, clusterProxyConfig: VcenterNamespaceManagementProxyConfiguration?) {
        self.sizeHint = sizeHint
        self.statSummary = statSummary
        self.configStatus = configStatus
        self.conditions = conditions
        self.messages = messages
        self.kubernetesStatus = kubernetesStatus
        self.kubernetesStatusMessages = kubernetesStatusMessages
        self.apiServerManagementEndpoint = apiServerManagementEndpoint
        self.apiServerClusterEndpoint = apiServerClusterEndpoint
        self.apiServers = apiServers
        self.tlsManagementEndpointCertificate = tlsManagementEndpointCertificate
        self.tlsEndpointCertificate = tlsEndpointCertificate
        self.networkProvider = networkProvider
        self.ncpClusterNetworkInfo = ncpClusterNetworkInfo
        self.workloadNetworks = workloadNetworks
        self.workloadNtpServers = workloadNtpServers
        self.loadBalancers = loadBalancers
        self.serviceCidr = serviceCidr
        self.masterManagementNetwork = masterManagementNetwork
        self.masterDNS = masterDNS
        self.workerDNS = workerDNS
        self.masterStoragePolicy = masterStoragePolicy
        self.ephemeralStoragePolicy = ephemeralStoragePolicy
        self.cnsFileConfig = cnsFileConfig
        self.loginBanner = loginBanner
        self.masterDNSNames = masterDNSNames
        self.imageStorage = imageStorage
        self.defaultImageRegistry = defaultImageRegistry
        self.defaultImageRepository = defaultImageRepository
        self.masterDNSSearchDomains = masterDNSSearchDomains
        self.masterNTPServers = masterNTPServers
        self.defaultKubernetesServiceContentLibrary = defaultKubernetesServiceContentLibrary
        self.clusterProxyConfig = clusterProxyConfig
    }

    public enum CodingKeys: String, CodingKey { 
        case sizeHint = "size_hint"
        case statSummary = "stat_summary"
        case configStatus = "config_status"
        case conditions
        case messages
        case kubernetesStatus = "kubernetes_status"
        case kubernetesStatusMessages = "kubernetes_status_messages"
        case apiServerManagementEndpoint = "api_server_management_endpoint"
        case apiServerClusterEndpoint = "api_server_cluster_endpoint"
        case apiServers = "api_servers"
        case tlsManagementEndpointCertificate = "tls_management_endpoint_certificate"
        case tlsEndpointCertificate = "tls_endpoint_certificate"
        case networkProvider = "network_provider"
        case ncpClusterNetworkInfo = "ncp_cluster_network_info"
        case workloadNetworks = "workload_networks"
        case workloadNtpServers = "workload_ntp_servers"
        case loadBalancers = "load_balancers"
        case serviceCidr = "service_cidr"
        case masterManagementNetwork = "master_management_network"
        case masterDNS = "master_DNS"
        case workerDNS = "worker_DNS"
        case masterStoragePolicy = "master_storage_policy"
        case ephemeralStoragePolicy = "ephemeral_storage_policy"
        case cnsFileConfig = "cns_file_config"
        case loginBanner = "login_banner"
        case masterDNSNames = "Master_DNS_names"
        case imageStorage = "image_storage"
        case defaultImageRegistry = "default_image_registry"
        case defaultImageRepository = "default_image_repository"
        case masterDNSSearchDomains = "master_DNS_search_domains"
        case masterNTPServers = "master_NTP_servers"
        case defaultKubernetesServiceContentLibrary = "default_kubernetes_service_content_library"
        case clusterProxyConfig = "cluster_proxy_config"
    }


}

