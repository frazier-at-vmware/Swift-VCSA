//
// TopologyreplicationStatusAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class TopologyreplicationStatusAPI {
    /**
     Returns the replication information of vCenter and Platform Services Controller nodes of type VCSA_EMBEDDED/PSC_EXTERNAL (see Nodes.Info.type) matching the ReplicationStatus.FilterSpec. if you do not have all of the privileges described as follows:     -  Operation execution requires System.Read.  
     
     - parameter nodes: (query) Identifier that a vCenter and Platform Services Controller node must have to match the filter. (see ReplicationStatus.Summary.node). If unset or empty, all vCenter and Platform Services Controller nodes of type VCSA_EMBEDDED/PSC_EXTERNAL match the filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.VCenter.name. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.VCenter.name. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func list(nodes: [String]? = nil, completion: @escaping ((_ data: [VcenterTopologyReplicationStatusSummary]?,_ error: Error?) -> Void)) {
        listWithRequestBuilder(nodes: nodes).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns the replication information of vCenter and Platform Services Controller nodes of type VCSA_EMBEDDED/PSC_EXTERNAL (see Nodes.Info.type) matching the ReplicationStatus.FilterSpec. if you do not have all of the privileges described as follows:     -  Operation execution requires System.Read.  
     - GET /api/vcenter/topology/replication-status
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={}}]
     
     - parameter nodes: (query) Identifier that a vCenter and Platform Services Controller node must have to match the filter. (see ReplicationStatus.Summary.node). If unset or empty, all vCenter and Platform Services Controller nodes of type VCSA_EMBEDDED/PSC_EXTERNAL match the filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.VCenter.name. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.VCenter.name. (optional)

     - returns: RequestBuilder<[VcenterTopologyReplicationStatusSummary]> 
     */
    open class func listWithRequestBuilder(nodes: [String]? = nil) -> RequestBuilder<[VcenterTopologyReplicationStatusSummary]> {
        let path = "/api/vcenter/topology/replication-status"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "nodes": nodes
        ])

        let requestBuilder: RequestBuilder<[VcenterTopologyReplicationStatusSummary]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Returns the replication information of vCenter and Platform Services Controller nodes of type VCSA_EMBEDDED/PSC_EXTERNAL (see Nodes.Info.type) matching the ReplicationStatus.FilterSpec. if you do not have all of the privileges described as follows:     -  Operation execution requires System.Read.  
     
     - parameter filterNodes: (query) Identifier that a vCenter and Platform Services Controller node must have to match the filter. (see ReplicationStatus.Summary.node). If unset or empty, all vCenter and Platform Services Controller nodes of type VCSA_EMBEDDED/PSC_EXTERNAL match the filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.VCenter.name. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.VCenter.name. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func list_0(filterNodes: [String]? = nil, completion: @escaping ((_ data: VcenterTopologyReplicationStatusListResp?,_ error: Error?) -> Void)) {
        list_0WithRequestBuilder(filterNodes: filterNodes).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns the replication information of vCenter and Platform Services Controller nodes of type VCSA_EMBEDDED/PSC_EXTERNAL (see Nodes.Info.type) matching the ReplicationStatus.FilterSpec. if you do not have all of the privileges described as follows:     -  Operation execution requires System.Read.  
     - GET /rest/vcenter/topology/replication-status
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter filterNodes: (query) Identifier that a vCenter and Platform Services Controller node must have to match the filter. (see ReplicationStatus.Summary.node). If unset or empty, all vCenter and Platform Services Controller nodes of type VCSA_EMBEDDED/PSC_EXTERNAL match the filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.VCenter.name. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.VCenter.name. (optional)

     - returns: RequestBuilder<VcenterTopologyReplicationStatusListResp> 
     */
    open class func list_0WithRequestBuilder(filterNodes: [String]? = nil) -> RequestBuilder<VcenterTopologyReplicationStatusListResp> {
        let path = "/rest/vcenter/topology/replication-status"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "filter.nodes": filterNodes
        ])

        let requestBuilder: RequestBuilder<VcenterTopologyReplicationStatusListResp>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
