//
// VcenterTokenserviceTokenExchangeExchangeSpec.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct VcenterTokenserviceTokenExchangeExchangeSpec: Codable {

    /** The value of {@link TokenExchange#TOKEN_EXCHANGE_GRANT} indicates that a token exchange is being performed. */
    public var grantType: String
    /** Indicates the location of the target service or resource where the client intends to use the requested security token. */
    public var resource: String?
    /** The logical name of the target service where the client intends to use the requested security token. This serves a purpose similar to the {@link ExchangeSpec#resource} parameter, but with the client providing a logical name rather than a location. */
    public var audience: String?
    /** A list of space-delimited, case-sensitive strings, that allow the client to specify the desired scope of the requested security token in the context of the service or resource where the token will be used. */
    public var scope: String?
    /** An identifier for the type of the requested security token. If the requested type is unspecified, the issued token type is at the discretion of the server and may be dictated by knowledge of the requirements of the service or resource indicated by the {@link ExchangeSpec#resource} or {@link ExchangeSpec#audience} parameter. */
    public var requestedTokenType: String?
    /** A security token that represents the identity of the party on behalf of whom exchange is being made. Typically, the subject of this token will be the subject of the security token issued. Token is base64-encoded. */
    public var subjectToken: String
    /** An identifier, that indicates the type of the security token in the {@link ExchangeSpec#subject_token} parameter. */
    public var subjectTokenType: String
    /** A security token that represents the identity of the acting party. Typically, this will be the party that is authorized to use the requested security token and act on behalf of the subject. */
    public var actorToken: String?
    /** An identifier, that indicates the type of the security token in the {@link ExchangeSpec#actor_token} parameter. */
    public var actorTokenType: String?

    public init(grantType: String, resource: String?, audience: String?, scope: String?, requestedTokenType: String?, subjectToken: String, subjectTokenType: String, actorToken: String?, actorTokenType: String?) {
        self.grantType = grantType
        self.resource = resource
        self.audience = audience
        self.scope = scope
        self.requestedTokenType = requestedTokenType
        self.subjectToken = subjectToken
        self.subjectTokenType = subjectTokenType
        self.actorToken = actorToken
        self.actorTokenType = actorTokenType
    }

    public enum CodingKeys: String, CodingKey { 
        case grantType = "grant_type"
        case resource
        case audience
        case scope
        case requestedTokenType = "requested_token_type"
        case subjectToken = "subject_token"
        case subjectTokenType = "subject_token_type"
        case actorToken = "actor_token"
        case actorTokenType = "actor_token_type"
    }


}

