//
// TrustedInfrastructuretrustedClusterskmsservicesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class TrustedInfrastructuretrustedClusterskmsservicesAPI {
    /**
     Returns detailed information about the given Key Provider Service instance used by the given cluster. if you do not have all of the privileges described as follows:     -  Operation execution requires TrustedAdmin.ReadTrustedHosts.    -  The resource ClusterComputeResource referenced by the parameter cluster requires System.View.  
     
     - parameter cluster: (path) The ID of the cluster. The parameter must be an identifier for the resource type: ClusterComputeResource. 
     - parameter service: (path) The ID of the service. The parameter must be an identifier for the resource type: vcenter.trusted_infrastructure.kms.Service. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func callGet(cluster: String, service: String, completion: @escaping ((_ data: VcenterTrustedInfrastructureTrustedClustersKmsServicesInfo?,_ error: Error?) -> Void)) {
        callGetWithRequestBuilder(cluster: cluster, service: service).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns detailed information about the given Key Provider Service instance used by the given cluster. if you do not have all of the privileges described as follows:     -  Operation execution requires TrustedAdmin.ReadTrustedHosts.    -  The resource ClusterComputeResource referenced by the parameter cluster requires System.View.  
     - GET /api/vcenter/trusted-infrastructure/trusted-clusters/{cluster}/kms/services/{service}
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter cluster: (path) The ID of the cluster. The parameter must be an identifier for the resource type: ClusterComputeResource. 
     - parameter service: (path) The ID of the service. The parameter must be an identifier for the resource type: vcenter.trusted_infrastructure.kms.Service. 

     - returns: RequestBuilder<VcenterTrustedInfrastructureTrustedClustersKmsServicesInfo> 
     */
    open class func callGetWithRequestBuilder(cluster: String, service: String) -> RequestBuilder<VcenterTrustedInfrastructureTrustedClustersKmsServicesInfo> {
        var path = "/api/vcenter/trusted-infrastructure/trusted-clusters/{cluster}/kms/services/{service}"
        let clusterPreEscape = "\(cluster)"
        let clusterPostEscape = clusterPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{cluster}", with: clusterPostEscape, options: .literal, range: nil)
        let servicePreEscape = "\(service)"
        let servicePostEscape = servicePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{service}", with: servicePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterTrustedInfrastructureTrustedClustersKmsServicesInfo>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Configures the cluster to use a the given registered Key Provider Service.
     
     - parameter cluster: (path) The ID of the cluster. The parameter must be an identifier for the resource type: ClusterComputeResource. 
     - parameter requestBody: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createtask(cluster: String, requestBody: VcenterTrustedInfrastructureTrustedClustersKmsServicesCreateTask? = nil, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        createtaskWithRequestBuilder(cluster: cluster, requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Configures the cluster to use a the given registered Key Provider Service.
     - POST /api/vcenter/trusted-infrastructure/trusted-clusters/{cluster}/kms/services?vmw-task=true
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={
  "blank": true,
  "bytes": [],
  "empty": true
}}]
     
     - parameter cluster: (path) The ID of the cluster. The parameter must be an identifier for the resource type: ClusterComputeResource. 
     - parameter requestBody: (body)  (optional)

     - returns: RequestBuilder<String> 
     */
    open class func createtaskWithRequestBuilder(cluster: String, requestBody: VcenterTrustedInfrastructureTrustedClustersKmsServicesCreateTask? = nil) -> RequestBuilder<String> {
        var path = "/api/vcenter/trusted-infrastructure/trusted-clusters/{cluster}/kms/services?vmw-task=true"
        let clusterPreEscape = "\(cluster)"
        let clusterPostEscape = clusterPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{cluster}", with: clusterPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Removes the Key Provider Service instance from the configuration of the given cluster.
     
     - parameter cluster: (path) the unique ID of the cluster. The parameter must be an identifier for the resource type: ClusterComputeResource. 
     - parameter service: (path) the registered Key Provider Service instance unique identifier. The parameter must be an identifier for the resource type: vcenter.trusted_infrastructure.kms.Service. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deletetask(cluster: String, service: String, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        deletetaskWithRequestBuilder(cluster: cluster, service: service).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Removes the Key Provider Service instance from the configuration of the given cluster.
     - DELETE /api/vcenter/trusted-infrastructure/trusted-clusters/{cluster}/kms/services/{service}?vmw-task=true
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={
  "blank": true,
  "bytes": [],
  "empty": true
}}]
     
     - parameter cluster: (path) the unique ID of the cluster. The parameter must be an identifier for the resource type: ClusterComputeResource. 
     - parameter service: (path) the registered Key Provider Service instance unique identifier. The parameter must be an identifier for the resource type: vcenter.trusted_infrastructure.kms.Service. 

     - returns: RequestBuilder<String> 
     */
    open class func deletetaskWithRequestBuilder(cluster: String, service: String) -> RequestBuilder<String> {
        var path = "/api/vcenter/trusted-infrastructure/trusted-clusters/{cluster}/kms/services/{service}?vmw-task=true"
        let clusterPreEscape = "\(cluster)"
        let clusterPostEscape = clusterPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{cluster}", with: clusterPostEscape, options: .literal, range: nil)
        let servicePreEscape = "\(service)"
        let servicePostEscape = servicePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{service}", with: servicePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Returns basic information about all configured Key Provider Service instances used by this cluster. if you do not have all of the privileges described as follows:     -  Operation execution requires TrustedAdmin.ReadTrustedHosts.    -  The resource ClusterComputeResource referenced by the parameter cluster requires System.View.  
     
     - parameter cluster: (path) The ID of the cluster. The parameter must be an identifier for the resource type: ClusterComputeResource. 
     - parameter requestBody: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func list(cluster: String, requestBody: VcenterTrustedInfrastructureTrustedClustersKmsServicesList? = nil, completion: @escaping ((_ data: [VcenterTrustedInfrastructureTrustedClustersKmsServicesSummary]?,_ error: Error?) -> Void)) {
        listWithRequestBuilder(cluster: cluster, requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns basic information about all configured Key Provider Service instances used by this cluster. if you do not have all of the privileges described as follows:     -  Operation execution requires TrustedAdmin.ReadTrustedHosts.    -  The resource ClusterComputeResource referenced by the parameter cluster requires System.View.  
     - POST /api/vcenter/trusted-infrastructure/trusted-clusters/{cluster}/kms/services?action=query
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={}}]
     
     - parameter cluster: (path) The ID of the cluster. The parameter must be an identifier for the resource type: ClusterComputeResource. 
     - parameter requestBody: (body)  (optional)

     - returns: RequestBuilder<[VcenterTrustedInfrastructureTrustedClustersKmsServicesSummary]> 
     */
    open class func listWithRequestBuilder(cluster: String, requestBody: VcenterTrustedInfrastructureTrustedClustersKmsServicesList? = nil) -> RequestBuilder<[VcenterTrustedInfrastructureTrustedClustersKmsServicesSummary]> {
        var path = "/api/vcenter/trusted-infrastructure/trusted-clusters/{cluster}/kms/services?action=query"
        let clusterPreEscape = "\(cluster)"
        let clusterPostEscape = clusterPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{cluster}", with: clusterPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[VcenterTrustedInfrastructureTrustedClustersKmsServicesSummary]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
