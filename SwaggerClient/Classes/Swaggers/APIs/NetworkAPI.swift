//
// NetworkAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class NetworkAPI {
    /**
     * enum for parameter types
     */
    public enum Types_list: String { 
        case standardPortgroup = "STANDARD_PORTGROUP"
        case distributedPortgroup = "DISTRIBUTED_PORTGROUP"
        case opaqueNetwork = "OPAQUE_NETWORK"
    }

    /**
     Returns information about at most 1000 visible (subject to permission checks) networks in vCenter matching the Network.FilterSpec.
     
     - parameter networks: (query) Identifiers of networks that can match the filter. If unset or empty, networks with any identifier match the filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Network. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Network. (optional)
     - parameter names: (query) Names that networks must have to match the filter (see Network.Summary.name). If unset or empty, networks with any name match the filter. (optional)
     - parameter types: (query) Types that networks must have to match the filter (see Network.Summary.type). If unset, networks with any type match the filter. (optional)
     - parameter folders: (query) Folders that must contain the network for the network to match the filter. If unset or empty, networks in any folder match the filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Folder. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Folder. (optional)
     - parameter datacenters: (query) Datacenters that must contain the network for the network to match the filter. If unset or empty, networks in any datacenter match the filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Datacenter. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Datacenter. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func list(networks: [String]? = nil, names: [String]? = nil, types: [String]? = nil, folders: [String]? = nil, datacenters: [String]? = nil, completion: @escaping ((_ data: [VcenterNetworkSummary]?,_ error: Error?) -> Void)) {
        listWithRequestBuilder(networks: networks, names: names, types: types, folders: folders, datacenters: datacenters).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns information about at most 1000 visible (subject to permission checks) networks in vCenter matching the Network.FilterSpec.
     - GET /api/vcenter/network
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={}}]
     
     - parameter networks: (query) Identifiers of networks that can match the filter. If unset or empty, networks with any identifier match the filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Network. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Network. (optional)
     - parameter names: (query) Names that networks must have to match the filter (see Network.Summary.name). If unset or empty, networks with any name match the filter. (optional)
     - parameter types: (query) Types that networks must have to match the filter (see Network.Summary.type). If unset, networks with any type match the filter. (optional)
     - parameter folders: (query) Folders that must contain the network for the network to match the filter. If unset or empty, networks in any folder match the filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Folder. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Folder. (optional)
     - parameter datacenters: (query) Datacenters that must contain the network for the network to match the filter. If unset or empty, networks in any datacenter match the filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Datacenter. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Datacenter. (optional)

     - returns: RequestBuilder<[VcenterNetworkSummary]> 
     */
    open class func listWithRequestBuilder(networks: [String]? = nil, names: [String]? = nil, types: [String]? = nil, folders: [String]? = nil, datacenters: [String]? = nil) -> RequestBuilder<[VcenterNetworkSummary]> {
        let path = "/api/vcenter/network"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "networks": networks, 
            "names": names, 
            "types": types, 
            "folders": folders, 
            "datacenters": datacenters
        ])

        let requestBuilder: RequestBuilder<[VcenterNetworkSummary]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     * enum for parameter filterTypes
     */
    public enum FilterTypes_list_0: String { 
        case standardPortgroup = "STANDARD_PORTGROUP"
        case distributedPortgroup = "DISTRIBUTED_PORTGROUP"
        case opaqueNetwork = "OPAQUE_NETWORK"
    }

    /**
     Returns information about at most 1000 visible (subject to permission checks) networks in vCenter matching the Network.FilterSpec.
     
     - parameter filterNetworks: (query) Identifiers of networks that can match the filter. If unset or empty, networks with any identifier match the filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Network. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Network. (optional)
     - parameter filterNames: (query) Names that networks must have to match the filter (see Network.Summary.name). If unset or empty, networks with any name match the filter. (optional)
     - parameter filterTypes: (query) Types that networks must have to match the filter (see Network.Summary.type). If unset, networks with any type match the filter. (optional)
     - parameter filterFolders: (query) Folders that must contain the network for the network to match the filter. If unset or empty, networks in any folder match the filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Folder. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Folder. (optional)
     - parameter filterDatacenters: (query) Datacenters that must contain the network for the network to match the filter. If unset or empty, networks in any datacenter match the filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Datacenter. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Datacenter. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func list_0(filterNetworks: [String]? = nil, filterNames: [String]? = nil, filterTypes: [String]? = nil, filterFolders: [String]? = nil, filterDatacenters: [String]? = nil, completion: @escaping ((_ data: VcenterNetworkListResp?,_ error: Error?) -> Void)) {
        list_0WithRequestBuilder(filterNetworks: filterNetworks, filterNames: filterNames, filterTypes: filterTypes, filterFolders: filterFolders, filterDatacenters: filterDatacenters).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns information about at most 1000 visible (subject to permission checks) networks in vCenter matching the Network.FilterSpec.
     - GET /rest/vcenter/network
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter filterNetworks: (query) Identifiers of networks that can match the filter. If unset or empty, networks with any identifier match the filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Network. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Network. (optional)
     - parameter filterNames: (query) Names that networks must have to match the filter (see Network.Summary.name). If unset or empty, networks with any name match the filter. (optional)
     - parameter filterTypes: (query) Types that networks must have to match the filter (see Network.Summary.type). If unset, networks with any type match the filter. (optional)
     - parameter filterFolders: (query) Folders that must contain the network for the network to match the filter. If unset or empty, networks in any folder match the filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Folder. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Folder. (optional)
     - parameter filterDatacenters: (query) Datacenters that must contain the network for the network to match the filter. If unset or empty, networks in any datacenter match the filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Datacenter. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Datacenter. (optional)

     - returns: RequestBuilder<VcenterNetworkListResp> 
     */
    open class func list_0WithRequestBuilder(filterNetworks: [String]? = nil, filterNames: [String]? = nil, filterTypes: [String]? = nil, filterFolders: [String]? = nil, filterDatacenters: [String]? = nil) -> RequestBuilder<VcenterNetworkListResp> {
        let path = "/rest/vcenter/network"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "filter.networks": filterNetworks, 
            "filter.names": filterNames, 
            "filter.types": filterTypes, 
            "filter.folders": filterFolders, 
            "filter.datacenters": filterDatacenters
        ])

        let requestBuilder: RequestBuilder<VcenterNetworkListResp>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
