//
// VmguestenvironmentAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class VmguestenvironmentAPI {
    /**
     Reads a single environment variable from the guest operating system.   If the authentication uses Credentials.interactive-session, then the environment being read will be that of the user logged into the desktop. Otherwise it's the environment of the system user.     if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.GuestOperations.Query.  
     
     - parameter vm: (path) Virtual machine to perform the operation on. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter name: (path) The name of the environment variable to be read. 
     - parameter requestBody: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func callGet(vm: String, name: String, requestBody: VcenterVmGuestEnvironmentGet, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        callGetWithRequestBuilder(vm: vm, name: name, requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Reads a single environment variable from the guest operating system.   If the authentication uses Credentials.interactive-session, then the environment being read will be that of the user logged into the desktop. Otherwise it's the environment of the system user.     if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.GuestOperations.Query.  
     - POST /api/vcenter/vm/{vm}/guest/environment/{name}?action=get
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={
  "blank": true,
  "bytes": [],
  "empty": true
}}]
     
     - parameter vm: (path) Virtual machine to perform the operation on. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter name: (path) The name of the environment variable to be read. 
     - parameter requestBody: (body)  

     - returns: RequestBuilder<String> 
     */
    open class func callGetWithRequestBuilder(vm: String, name: String, requestBody: VcenterVmGuestEnvironmentGet) -> RequestBuilder<String> {
        var path = "/api/vcenter/vm/{vm}/guest/environment/{name}?action=get"
        let vmPreEscape = "\(vm)"
        let vmPostEscape = vmPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{vm}", with: vmPostEscape, options: .literal, range: nil)
        let namePreEscape = "\(name)"
        let namePostEscape = namePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{name}", with: namePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Reads a list of environment variables from the guest operating system.   If the authentication uses Credentials.interactive-session, then the environment being read will be that of the user logged into the desktop. Otherwise it's the environment of the system user.     if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.GuestOperations.Query.  
     
     - parameter vm: (path) Virtual machine to perform the operation on. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter requestBody: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func list(vm: String, requestBody: VcenterVmGuestEnvironmentList, completion: @escaping ((_ data: [String:String]?,_ error: Error?) -> Void)) {
        listWithRequestBuilder(vm: vm, requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Reads a list of environment variables from the guest operating system.   If the authentication uses Credentials.interactive-session, then the environment being read will be that of the user logged into the desktop. Otherwise it's the environment of the system user.     if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.GuestOperations.Query.  
     - POST /api/vcenter/vm/{vm}/guest/environment?action=list
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter vm: (path) Virtual machine to perform the operation on. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter requestBody: (body)  

     - returns: RequestBuilder<[String:String]> 
     */
    open class func listWithRequestBuilder(vm: String, requestBody: VcenterVmGuestEnvironmentList) -> RequestBuilder<[String:String]> {
        var path = "/api/vcenter/vm/{vm}/guest/environment?action=list"
        let vmPreEscape = "\(vm)"
        let vmPostEscape = vmPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{vm}", with: vmPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[String:String]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
