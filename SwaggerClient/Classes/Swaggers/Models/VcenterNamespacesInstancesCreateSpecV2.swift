//
// VcenterNamespacesInstancesCreateSpecV2.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct VcenterNamespacesInstancesCreateSpecV2: Codable {

    /** Identifier for the sSupervisor hosting the namespace. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.namespace_management.supervisor.Supervisor. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.namespace_management.supervisor.Supervisor. */
    public var supervisor: String
    /** Identifier of the namespace. This has DNS_LABEL restrictions as specified in . This must be an alphanumeric (a-z and 0-9) string and with maximum length of 63 characters and with the &#39;-&#39; character allowed anywhere except the first or last character. This name is unique across all Namespaces in this vCenter server. In this version, this maps to the name of a Kubernetes namespace. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.namespaces.Instance. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.namespaces.Instance. */
    public var namespace: String
    /** Description for the namespace. If unset, no description is added to the namespace. */
    public var _description: String?
    /** Resource quota on the namespace. Refer to vcenter.namespace_management.NamespaceResourceOptions.Info#createResourceQuotaType and use vcenter.namespace_management.NamespaceResourceOptions#get for retrieving the type for the value for this field. For an example of this, see ResourceQuotaOptionsV1. If unset, no resource limits will be set on the namespace. */
    public var resourceSpec: JSONValue?
    /** Access controls associated with the namespace. If unset, only users with Administrator role can access the namespace. */
    public var accessList: [VcenterNamespacesInstancesAccess]?
    /** Storage associated with the namespace. If unset, storage policies will not be associated with the namespace which will prevent users from being able to provision pods with persistent storage on the namespace. Users will be able to provision pods which use local storage. */
    public var storageSpecs: [VcenterNamespacesInstancesStorageSpec]?
    /** vSphere Namespaces network objects to be associated with the namespace. The values of this list need to reference names of pre-existing vcenter.namespace_management.Networks.Info structures. The field must be left unset if the cluster hosting the namespace uses NSXT_CONTAINER_PLUGIN as the network provider, since the network(s) for this namespace will be managed by NSX-T Container Plugin. If field is unset when the cluster hosting the namespace uses VSPHERE_NETWORK as its network provider, the namespace will automatically be associated with the cluster&#39;s Supervisor Primary Workload Network. The field currently accepts at most only 1 vSphere Namespaces network object reference. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.namespace_management.Network. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.namespace_management.Network. */
    public var networks: [String]?
    /** VM Service specification associated with the namespace. This field is optional because it was added in a newer version than its parent node. */
    public var vmServiceSpec: VcenterNamespacesInstancesVMServiceSpec?
    /** Image Registry Service specification associated with the namespace. If unset, no additional image registry will be associated with the namespace except for the content libraries specified in {VMServiceSpec#contentLibraries}. */
    public var imageRegistrySpec: VcenterNamespacesInstancesImageRegistrySpec?
    /** Creator of the namespace. Namespace self-service uses this field to populate the user who created this namespace. This field is optional because it was added in a newer version than its parent node. */
    public var creator: VcenterNamespacesInstancesPrincipal?
    /** This field that accepts parameters to define a vSphere Namespace Network object that will automatically be associated with this Namespace. Networks created in this operation will be given an autogenerated ID and cannot be referenced by other Namespaces. This field is optional because it was added in a newer version than its parent node. */
    public var namespaceNetwork: VcenterNamespacesInstancesNetworkCreateSpec?

    public init(supervisor: String, namespace: String, _description: String?, resourceSpec: JSONValue?, accessList: [VcenterNamespacesInstancesAccess]?, storageSpecs: [VcenterNamespacesInstancesStorageSpec]?, networks: [String]?, vmServiceSpec: VcenterNamespacesInstancesVMServiceSpec?, imageRegistrySpec: VcenterNamespacesInstancesImageRegistrySpec?, creator: VcenterNamespacesInstancesPrincipal?, namespaceNetwork: VcenterNamespacesInstancesNetworkCreateSpec?) {
        self.supervisor = supervisor
        self.namespace = namespace
        self._description = _description
        self.resourceSpec = resourceSpec
        self.accessList = accessList
        self.storageSpecs = storageSpecs
        self.networks = networks
        self.vmServiceSpec = vmServiceSpec
        self.imageRegistrySpec = imageRegistrySpec
        self.creator = creator
        self.namespaceNetwork = namespaceNetwork
    }

    public enum CodingKeys: String, CodingKey { 
        case supervisor
        case namespace
        case _description = "description"
        case resourceSpec = "resource_spec"
        case accessList = "access_list"
        case storageSpecs = "storage_specs"
        case networks
        case vmServiceSpec = "vm_service_spec"
        case imageRegistrySpec = "image_registry_spec"
        case creator
        case namespaceNetwork = "namespace_network"
    }


}

