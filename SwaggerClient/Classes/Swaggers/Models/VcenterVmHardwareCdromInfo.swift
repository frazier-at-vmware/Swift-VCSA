//
// VcenterVmHardwareCdromInfo.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct VcenterVmHardwareCdromInfo: Codable {

    /** Type of host bus adapter to which the device is attached. */
    public var type: VcenterVmHardwareCdromHostBusAdapterType
    /** Device label. */
    public var label: String
    /** Address of device attached to a virtual IDE adapter. This field is optional and it is only relevant when the value of Cdrom.Info.type is IDE. */
    public var ide: VcenterVmHardwareIdeAddressInfo?
    /** Address of device attached to a virtual SATA adapter. This field is optional and it is only relevant when the value of Cdrom.Info.type is SATA. */
    public var sata: VcenterVmHardwareSataAddressInfo?
    /** Physical resource backing for the virtual CD-ROM device. */
    public var backing: VcenterVmHardwareCdromBackingInfo
    /** Connection status of the virtual device. */
    public var state: VcenterVmHardwareConnectionState
    /** Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on. */
    public var startConnected: Bool
    /** Flag indicating whether the guest can connect and disconnect the device. */
    public var allowGuestControl: Bool

    public init(type: VcenterVmHardwareCdromHostBusAdapterType, label: String, ide: VcenterVmHardwareIdeAddressInfo?, sata: VcenterVmHardwareSataAddressInfo?, backing: VcenterVmHardwareCdromBackingInfo, state: VcenterVmHardwareConnectionState, startConnected: Bool, allowGuestControl: Bool) {
        self.type = type
        self.label = label
        self.ide = ide
        self.sata = sata
        self.backing = backing
        self.state = state
        self.startConnected = startConnected
        self.allowGuestControl = allowGuestControl
    }

    public enum CodingKeys: String, CodingKey { 
        case type
        case label
        case ide
        case sata
        case backing
        case state
        case startConnected = "start_connected"
        case allowGuestControl = "allow_guest_control"
    }


}

