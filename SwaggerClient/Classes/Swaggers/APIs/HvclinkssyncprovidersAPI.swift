//
// HvclinkssyncprovidersAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class HvclinkssyncprovidersAPI {
    /**
     Gets Sync information for a sync provider. Usage beyond VMware Cloud on AWS is not supported. *Warning:* This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.
     
     - parameter link: (path) Unique identifier of the link 
     - parameter provider: (path) Unique identifier of the sync provider. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func callGet(link: String, provider: String, completion: @escaping ((_ data: VcenterHvcLinksSyncProvidersResp?,_ error: Error?) -> Void)) {
        callGetWithRequestBuilder(link: link, provider: provider).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets Sync information for a sync provider. Usage beyond VMware Cloud on AWS is not supported. *Warning:* This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.
     - GET /rest/hvc/links/{link}/sync/providers/{provider}
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter link: (path) Unique identifier of the link 
     - parameter provider: (path) Unique identifier of the sync provider. 

     - returns: RequestBuilder<VcenterHvcLinksSyncProvidersResp> 
     */
    open class func callGetWithRequestBuilder(link: String, provider: String) -> RequestBuilder<VcenterHvcLinksSyncProvidersResp> {
        var path = "/rest/hvc/links/{link}/sync/providers/{provider}"
        let linkPreEscape = "\(link)"
        let linkPostEscape = linkPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{link}", with: linkPostEscape, options: .literal, range: nil)
        let providerPreEscape = "\(provider)"
        let providerPostEscape = providerPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{provider}", with: providerPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterHvcLinksSyncProvidersResp>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Enumerates the sync providers. Usage beyond VMware Cloud on AWS is not supported. *Warning:* This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.
     
     - parameter link: (path) Unique identifier of the link 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func list(link: String, completion: @escaping ((_ data: VcenterHvcLinksSyncProvidersListResp?,_ error: Error?) -> Void)) {
        listWithRequestBuilder(link: link).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Enumerates the sync providers. Usage beyond VMware Cloud on AWS is not supported. *Warning:* This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.
     - GET /rest/hvc/links/{link}/sync/providers
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter link: (path) Unique identifier of the link 

     - returns: RequestBuilder<VcenterHvcLinksSyncProvidersListResp> 
     */
    open class func listWithRequestBuilder(link: String) -> RequestBuilder<VcenterHvcLinksSyncProvidersListResp> {
        var path = "/rest/hvc/links/{link}/sync/providers"
        let linkPreEscape = "\(link)"
        let linkPostEscape = linkPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{link}", with: linkPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterHvcLinksSyncProvidersListResp>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Initiates synchronization between the local and remote replicas for the sync provider. Usage beyond VMware Cloud on AWS is not supported. *Warning:* This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.
     
     - parameter link: (path) Unique identifier of the link 
     - parameter provider: (path) Unique identifier representing the sync provider 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func start(link: String, provider: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        startWithRequestBuilder(link: link, provider: provider).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Initiates synchronization between the local and remote replicas for the sync provider. Usage beyond VMware Cloud on AWS is not supported. *Warning:* This operation is available as Technology Preview. These are early access APIs provided to test, automate and provide feedback on the feature. Since this can change based on feedback, VMware does not guarantee backwards compatibility and recommends against using them in production environments. Some Technology Preview APIs might only be applicable to specific environments.
     - POST /rest/hvc/links/{link}/sync/providers/{provider}?action=start
     
     - parameter link: (path) Unique identifier of the link 
     - parameter provider: (path) Unique identifier representing the sync provider 

     - returns: RequestBuilder<Void> 
     */
    open class func startWithRequestBuilder(link: String, provider: String) -> RequestBuilder<Void> {
        var path = "/rest/hvc/links/{link}/sync/providers/{provider}?action=start"
        let linkPreEscape = "\(link)"
        let linkPostEscape = linkPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{link}", with: linkPostEscape, options: .literal, range: nil)
        let providerPreEscape = "\(provider)"
        let providerPostEscape = providerPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{provider}", with: providerPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
