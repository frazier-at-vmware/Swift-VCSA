//
// VcenterVmHardwareBootUpdateSpec.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct VcenterVmHardwareBootUpdateSpec: Codable {

    /** Firmware type to be used by the virtual machine. If unset, the value is unchanged. */
    public var type: VcenterVmHardwareBootType?
    /** Flag indicating whether to use EFI legacy boot mode. If unset, the value is unchanged. */
    public var efiLegacyBoot: Bool?
    /** Protocol to use when attempting to boot the virtual machine over the network. If unset, the value is unchanged. */
    public var networkProtocol: VcenterVmHardwareBootNetworkProtocol?
    /** Delay in milliseconds before beginning the firmware boot process when the virtual machine is powered on. This delay may be used to provide a time window for users to connect to the virtual machine console and enter BIOS setup mode. If unset, the value is unchanged. */
    public var delay: Int64?
    /** Flag indicating whether the virtual machine should automatically retry the boot process after a failure. If unset, the value is unchanged. */
    public var retry: Bool?
    /** Delay in milliseconds before retrying the boot process after a failure; applicable only when Boot.Info.retry is true. If unset, the value is unchanged. */
    public var retryDelay: Int64?
    /** Flag indicating whether the firmware boot process should automatically enter setup mode the next time the virtual machine boots. Note that this flag will automatically be reset to false once the virtual machine enters setup mode. If unset, the value is unchanged. */
    public var enterSetupMode: Bool?

    public init(type: VcenterVmHardwareBootType?, efiLegacyBoot: Bool?, networkProtocol: VcenterVmHardwareBootNetworkProtocol?, delay: Int64?, retry: Bool?, retryDelay: Int64?, enterSetupMode: Bool?) {
        self.type = type
        self.efiLegacyBoot = efiLegacyBoot
        self.networkProtocol = networkProtocol
        self.delay = delay
        self.retry = retry
        self.retryDelay = retryDelay
        self.enterSetupMode = enterSetupMode
    }

    public enum CodingKeys: String, CodingKey { 
        case type
        case efiLegacyBoot = "efi_legacy_boot"
        case networkProtocol = "network_protocol"
        case delay
        case retry
        case retryDelay = "retry_delay"
        case enterSetupMode = "enter_setup_mode"
    }


}

