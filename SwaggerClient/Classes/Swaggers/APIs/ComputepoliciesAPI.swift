//
// ComputepoliciesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class ComputepoliciesAPI {
    /**
     Returns information about a specific compute policy. if you do not have all of the privileges described as follows:     -  Operation execution requires System.Read.  
     
     - parameter policy: (path) Identifier of the policy for which information should be retrieved. The parameter must be an identifier for the resource type: vcenter.compute.Policy. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func callGet(policy: String, completion: @escaping ((_ data: JSONValue?,_ error: Error?) -> Void)) {
        callGetWithRequestBuilder(policy: policy).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns information about a specific compute policy. if you do not have all of the privileges described as follows:     -  Operation execution requires System.Read.  
     - GET /api/vcenter/compute/policies/{policy}
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={
  "blank": false,
  "bytes": [
    123,
    125
  ],
  "empty": false
}}]
     
     - parameter policy: (path) Identifier of the policy for which information should be retrieved. The parameter must be an identifier for the resource type: vcenter.compute.Policy. 

     - returns: RequestBuilder<JSONValue> 
     */
    open class func callGetWithRequestBuilder(policy: String) -> RequestBuilder<JSONValue> {
        var path = "/api/vcenter/compute/policies/{policy}"
        let policyPreEscape = "\(policy)"
        let policyPostEscape = policyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{policy}", with: policyPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<JSONValue>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Creates a new compute policy. if you do not have all of the privileges described as follows:     -  Operation execution requires ComputePolicy.Manage.  
     
     - parameter requestBody: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func create(requestBody: VcenterComputePoliciesCreate? = nil, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        createWithRequestBuilder(requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Creates a new compute policy. if you do not have all of the privileges described as follows:     -  Operation execution requires ComputePolicy.Manage.  
     - POST /api/vcenter/compute/policies
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={
  "blank": true,
  "bytes": [],
  "empty": true
}}]
     
     - parameter requestBody: (body)  (optional)

     - returns: RequestBuilder<String> 
     */
    open class func createWithRequestBuilder(requestBody: VcenterComputePoliciesCreate? = nil) -> RequestBuilder<String> {
        let path = "/api/vcenter/compute/policies"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Deletes a specific compute policy. if you do not have all of the privileges described as follows:     -  Operation execution requires ComputePolicy.Manage.  
     
     - parameter policy: (path) Identifier of the policy to be deleted. The parameter must be an identifier for the resource type: vcenter.compute.Policy. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func delete(policy: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        deleteWithRequestBuilder(policy: policy).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Deletes a specific compute policy. if you do not have all of the privileges described as follows:     -  Operation execution requires ComputePolicy.Manage.  
     - DELETE /api/vcenter/compute/policies/{policy}
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     
     - parameter policy: (path) Identifier of the policy to be deleted. The parameter must be an identifier for the resource type: vcenter.compute.Policy. 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteWithRequestBuilder(policy: String) -> RequestBuilder<Void> {
        var path = "/api/vcenter/compute/policies/{policy}"
        let policyPreEscape = "\(policy)"
        let policyPostEscape = policyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{policy}", with: policyPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Returns information about the compute policies available in this vCenter server. if you do not have all of the privileges described as follows:     -  Operation execution requires System.Read.  
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func list(completion: @escaping ((_ data: [VcenterComputePoliciesSummary]?,_ error: Error?) -> Void)) {
        listWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns information about the compute policies available in this vCenter server. if you do not have all of the privileges described as follows:     -  Operation execution requires System.Read.  
     - GET /api/vcenter/compute/policies
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={}}]

     - returns: RequestBuilder<[VcenterComputePoliciesSummary]> 
     */
    open class func listWithRequestBuilder() -> RequestBuilder<[VcenterComputePoliciesSummary]> {
        let path = "/api/vcenter/compute/policies"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[VcenterComputePoliciesSummary]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
