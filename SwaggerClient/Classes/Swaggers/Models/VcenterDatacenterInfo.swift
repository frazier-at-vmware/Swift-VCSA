//
// VcenterDatacenterInfo.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct VcenterDatacenterInfo: Codable {

    /** The name of the datacenter. */
    public var name: String
    /** The root datastore folder associated with the datacenter. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder. */
    public var datastoreFolder: String
    /** The root host and cluster folder associated with the datacenter. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder. */
    public var hostFolder: String
    /** The root network folder associated with the datacenter. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder. */
    public var networkFolder: String
    /** The root virtual machine folder associated with the datacenter. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Folder. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Folder. */
    public var vmFolder: String

    public init(name: String, datastoreFolder: String, hostFolder: String, networkFolder: String, vmFolder: String) {
        self.name = name
        self.datastoreFolder = datastoreFolder
        self.hostFolder = hostFolder
        self.networkFolder = networkFolder
        self.vmFolder = vmFolder
    }

    public enum CodingKeys: String, CodingKey { 
        case name
        case datastoreFolder = "datastore_folder"
        case hostFolder = "host_folder"
        case networkFolder = "network_folder"
        case vmFolder = "vm_folder"
    }


}

