//
// VcenterNamespaceManagementNetworksVsphereDVPGNetworkSetSpec.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct VcenterNamespaceManagementNetworksVsphereDVPGNetworkSetSpec: Codable {

    /** Identifier of the vSphere Distributed Portgroup backing the vSphere network object. If the network object is associated with a Namespace or is Clusters.WorkloadNetworksEnableSpec.supervisor-primary-workload-network, modification to existing portgroup will result in the operation failing with a ResourceInUse error. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network. */
    public var portgroup: String
    /** Usable IP pools on this network. If the network object is associated with a Namespace or is Clusters.WorkloadNetworksEnableSpec.supervisor-primary-workload-network, then replacement of or modification to any existing range in this list will result in operation failing with a ResourceInUse error. To add new address ranges to the list, existing address ranges have to be passed in without modifications. */
    public var addressRanges: [VcenterNamespaceManagementIPRange]
    /** Gateway for the network. If the network object is associated with a Namespace or is Clusters.WorkloadNetworksEnableSpec.supervisor-primary-workload-network, then modification to existing gateway will result in the operation failing with a ResourceInUse error. */
    public var gateway: String
    /** Subnet mask of the network. If the network object is associated with a Namespace or is Clusters.WorkloadNetworksEnableSpec.supervisor-primary-workload-network, then modification to existing subnet mask will result in the operation failing with a ResourceInUse error. */
    public var subnetMask: String

    public init(portgroup: String, addressRanges: [VcenterNamespaceManagementIPRange], gateway: String, subnetMask: String) {
        self.portgroup = portgroup
        self.addressRanges = addressRanges
        self.gateway = gateway
        self.subnetMask = subnetMask
    }

    public enum CodingKeys: String, CodingKey { 
        case portgroup
        case addressRanges = "address_ranges"
        case gateway
        case subnetMask = "subnet_mask"
    }


}

