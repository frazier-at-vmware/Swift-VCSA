//
// DeploymentmigrateAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class DeploymentmigrateAPI {
    /**
     Get the MigrateSpec parameters used to configure the ongoing appliance migration.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func callGet(completion: @escaping ((_ data: VcenterDeploymentMigrateMigrateSpec?,_ error: Error?) -> Void)) {
        callGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get the MigrateSpec parameters used to configure the ongoing appliance migration.
     - GET /api/vcenter/deployment/migrate
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]

     - returns: RequestBuilder<VcenterDeploymentMigrateMigrateSpec> 
     */
    open class func callGetWithRequestBuilder() -> RequestBuilder<VcenterDeploymentMigrateMigrateSpec> {
        let path = "/api/vcenter/deployment/migrate"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterDeploymentMigrateMigrateSpec>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get the MigrateSpec parameters used to configure the ongoing appliance migration.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func callGet_0(completion: @escaping ((_ data: VcenterDeploymentMigrateResp?,_ error: Error?) -> Void)) {
        callGet_0WithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get the MigrateSpec parameters used to configure the ongoing appliance migration.
     - GET /rest/vcenter/deployment/migrate
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]

     - returns: RequestBuilder<VcenterDeploymentMigrateResp> 
     */
    open class func callGet_0WithRequestBuilder() -> RequestBuilder<VcenterDeploymentMigrateResp> {
        let path = "/rest/vcenter/deployment/migrate"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterDeploymentMigrateResp>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Cancel the appliance migration that is in progress.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func cancel(completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        cancelWithRequestBuilder().execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Cancel the appliance migration that is in progress.
     - POST /api/vcenter/deployment/migrate?action=cancel
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id

     - returns: RequestBuilder<Void> 
     */
    open class func cancelWithRequestBuilder() -> RequestBuilder<Void> {
        let path = "/api/vcenter/deployment/migrate?action=cancel"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Cancel the appliance migration that is in progress.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func cancel_0(completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        cancel_0WithRequestBuilder().execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Cancel the appliance migration that is in progress.
     - POST /rest/vcenter/deployment/migrate?action=cancel
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id

     - returns: RequestBuilder<Void> 
     */
    open class func cancel_0WithRequestBuilder() -> RequestBuilder<Void> {
        let path = "/rest/vcenter/deployment/migrate?action=cancel"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Run sanity checks using the MigrateSpec parameters passed.
     
     - parameter requestBody: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func check(requestBody: VcenterDeploymentMigrateCheck? = nil, completion: @escaping ((_ data: VcenterDeploymentCheckInfo?,_ error: Error?) -> Void)) {
        checkWithRequestBuilder(requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Run sanity checks using the MigrateSpec parameters passed.
     - POST /api/vcenter/deployment/migrate?action=check
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter requestBody: (body)  (optional)

     - returns: RequestBuilder<VcenterDeploymentCheckInfo> 
     */
    open class func checkWithRequestBuilder(requestBody: VcenterDeploymentMigrateCheck? = nil) -> RequestBuilder<VcenterDeploymentCheckInfo> {
        let path = "/api/vcenter/deployment/migrate?action=check"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterDeploymentCheckInfo>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Run sanity checks using the MigrateSpec parameters passed.
     
     - parameter requestBody: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func check_0(requestBody: VcenterDeploymentMigrateCheck, completion: @escaping ((_ data: VcenterDeploymentMigrateCheckResp?,_ error: Error?) -> Void)) {
        check_0WithRequestBuilder(requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Run sanity checks using the MigrateSpec parameters passed.
     - POST /rest/vcenter/deployment/migrate?action=check
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter requestBody: (body)  

     - returns: RequestBuilder<VcenterDeploymentMigrateCheckResp> 
     */
    open class func check_0WithRequestBuilder(requestBody: VcenterDeploymentMigrateCheck) -> RequestBuilder<VcenterDeploymentMigrateCheckResp> {
        let path = "/rest/vcenter/deployment/migrate?action=check"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterDeploymentMigrateCheckResp>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Start the appliance migration.
     
     - parameter requestBody: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func start(requestBody: VcenterDeploymentMigrateStart? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        startWithRequestBuilder(requestBody: requestBody).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Start the appliance migration.
     - POST /api/vcenter/deployment/migrate?action=start
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     
     - parameter requestBody: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func startWithRequestBuilder(requestBody: VcenterDeploymentMigrateStart? = nil) -> RequestBuilder<Void> {
        let path = "/api/vcenter/deployment/migrate?action=start"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Start the appliance migration.
     
     - parameter requestBody: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func start_0(requestBody: VcenterDeploymentMigrateStart, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        start_0WithRequestBuilder(requestBody: requestBody).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Start the appliance migration.
     - POST /rest/vcenter/deployment/migrate?action=start
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     
     - parameter requestBody: (body)  

     - returns: RequestBuilder<Void> 
     */
    open class func start_0WithRequestBuilder(requestBody: VcenterDeploymentMigrateStart) -> RequestBuilder<Void> {
        let path = "/rest/vcenter/deployment/migrate?action=start"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
