//
// VmguestprocessesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class VmguestprocessesAPI {
    /**
     Returns the status of a process running in the guest operating system, including those started by Processes.create that may have recently completed.    if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.GuestOperations.Query.  
     
     - parameter vm: (path) Virtual machine to perform the operation on. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter pid: (path) Specifies the process to query. 
     - parameter requestBody: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func callGet(vm: String, pid: Int64, requestBody: VcenterVmGuestProcessesGet, completion: @escaping ((_ data: VcenterVmGuestProcessesInfo?,_ error: Error?) -> Void)) {
        callGetWithRequestBuilder(vm: vm, pid: pid, requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns the status of a process running in the guest operating system, including those started by Processes.create that may have recently completed.    if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.GuestOperations.Query.  
     - POST /api/vcenter/vm/{vm}/guest/processes/{pid}?action=get
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter vm: (path) Virtual machine to perform the operation on. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter pid: (path) Specifies the process to query. 
     - parameter requestBody: (body)  

     - returns: RequestBuilder<VcenterVmGuestProcessesInfo> 
     */
    open class func callGetWithRequestBuilder(vm: String, pid: Int64, requestBody: VcenterVmGuestProcessesGet) -> RequestBuilder<VcenterVmGuestProcessesInfo> {
        var path = "/api/vcenter/vm/{vm}/guest/processes/{pid}?action=get"
        let vmPreEscape = "\(vm)"
        let vmPostEscape = vmPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{vm}", with: vmPostEscape, options: .literal, range: nil)
        let pidPreEscape = "\(pid)"
        let pidPostEscape = pidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{pid}", with: pidPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterVmGuestProcessesInfo>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Starts a program in the guest operating system.   A process started this way can have its status queried with Processes.list or Processes.get. When the process completes, its exit code and end time will be available for 5 minutes after completion.     if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.GuestOperations.Execute.  
     
     - parameter vm: (path) Virtual machine to perform the operation on. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter requestBody: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func create(vm: String, requestBody: VcenterVmGuestProcessesCreate, completion: @escaping ((_ data: Int64?,_ error: Error?) -> Void)) {
        createWithRequestBuilder(vm: vm, requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Starts a program in the guest operating system.   A process started this way can have its status queried with Processes.list or Processes.get. When the process completes, its exit code and end time will be available for 5 minutes after completion.     if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.GuestOperations.Execute.  
     - POST /api/vcenter/vm/{vm}/guest/processes?action=create
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={}}]
     
     - parameter vm: (path) Virtual machine to perform the operation on. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter requestBody: (body)  

     - returns: RequestBuilder<Int64> 
     */
    open class func createWithRequestBuilder(vm: String, requestBody: VcenterVmGuestProcessesCreate) -> RequestBuilder<Int64> {
        var path = "/api/vcenter/vm/{vm}/guest/processes?action=create"
        let vmPreEscape = "\(vm)"
        let vmPostEscape = vmPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{vm}", with: vmPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Int64>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Terminates a process in the guest OS.   On Posix guests, the process is sent a SIGTERM signal. If that doesn't terminate the process, a SIGKILL signal is sent. A process may still be running if it's stuck.     if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.GuestOperations.Execute.  
     
     - parameter vm: (path) Virtual machine to perform the operation on. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter pid: (path) Process ID of the process to be terminated 
     - parameter requestBody: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func delete(vm: String, pid: Int64, requestBody: VcenterVmGuestProcessesDelete, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        deleteWithRequestBuilder(vm: vm, pid: pid, requestBody: requestBody).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Terminates a process in the guest OS.   On Posix guests, the process is sent a SIGTERM signal. If that doesn't terminate the process, a SIGKILL signal is sent. A process may still be running if it's stuck.     if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.GuestOperations.Execute.  
     - POST /api/vcenter/vm/{vm}/guest/processes/{pid}?action=delete
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     
     - parameter vm: (path) Virtual machine to perform the operation on. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter pid: (path) Process ID of the process to be terminated 
     - parameter requestBody: (body)  

     - returns: RequestBuilder<Void> 
     */
    open class func deleteWithRequestBuilder(vm: String, pid: Int64, requestBody: VcenterVmGuestProcessesDelete) -> RequestBuilder<Void> {
        var path = "/api/vcenter/vm/{vm}/guest/processes/{pid}?action=delete"
        let vmPreEscape = "\(vm)"
        let vmPostEscape = vmPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{vm}", with: vmPostEscape, options: .literal, range: nil)
        let pidPreEscape = "\(pid)"
        let pidPostEscape = pidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{pid}", with: pidPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     List the processes running in the guest operating system, plus those started by Processes.create that have recently completed.    if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.GuestOperations.Query.  
     
     - parameter vm: (path) Virtual machine to perform the operation on. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter requestBody: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func list(vm: String, requestBody: VcenterVmGuestProcessesList, completion: @escaping ((_ data: [VcenterVmGuestProcessesSummary]?,_ error: Error?) -> Void)) {
        listWithRequestBuilder(vm: vm, requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     List the processes running in the guest operating system, plus those started by Processes.create that have recently completed.    if you do not have all of the privileges described as follows:     -  The resource VirtualMachine referenced by the parameter vm requires VirtualMachine.GuestOperations.Query.  
     - POST /api/vcenter/vm/{vm}/guest/processes?action=list
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={}}]
     
     - parameter vm: (path) Virtual machine to perform the operation on. The parameter must be an identifier for the resource type: VirtualMachine. 
     - parameter requestBody: (body)  

     - returns: RequestBuilder<[VcenterVmGuestProcessesSummary]> 
     */
    open class func listWithRequestBuilder(vm: String, requestBody: VcenterVmGuestProcessesList) -> RequestBuilder<[VcenterVmGuestProcessesSummary]> {
        var path = "/api/vcenter/vm/{vm}/guest/processes?action=list"
        let vmPreEscape = "\(vm)"
        let vmPostEscape = vmPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{vm}", with: vmPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[VcenterVmGuestProcessesSummary]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
