//
// VcenterVMRegisterSpec.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct VcenterVMRegisterSpec: Codable {

    /** Identifier of the datastore on which the virtual machine&#39;s configuration state is stored. If unset, VM.RegisterSpec.path must also be unset and VM.RegisterSpec.datastore-path must be set. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datastore. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datastore. */
    public var datastore: String?
    /** Path to the virtual machine&#39;s configuration file on the datastore corresponding to {@link #datastore). If unset, VM.RegisterSpec.datastore must also be unset and VM.RegisterSpec.datastore-path must be set. */
    public var path: String?
    /** Datastore path for the virtual machine&#39;s configuration file in the format \&quot;[datastore name] path\&quot;. For example \&quot;[storage1] Test-VM/Test-VM.vmx\&quot;. If unset, both VM.RegisterSpec.datastore and VM.RegisterSpec.path must be set. */
    public var datastorePath: String?
    /** Virtual machine name. If unset, the display name from the virtual machine&#39;s configuration file will be used. */
    public var name: String?
    /** Virtual machine placement information. This field is currently required. In the future, if this field is unset, the system will attempt to choose suitable resources on which to place the virtual machine. */
    public var placement: VcenterVMRegisterPlacementSpec?

    public init(datastore: String?, path: String?, datastorePath: String?, name: String?, placement: VcenterVMRegisterPlacementSpec?) {
        self.datastore = datastore
        self.path = path
        self.datastorePath = datastorePath
        self.name = name
        self.placement = placement
    }

    public enum CodingKeys: String, CodingKey { 
        case datastore
        case path
        case datastorePath = "datastore_path"
        case name
        case placement
    }


}

