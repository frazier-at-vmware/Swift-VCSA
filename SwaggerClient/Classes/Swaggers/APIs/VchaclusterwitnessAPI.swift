//
// VchaclusterwitnessAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class VchaclusterwitnessAPI {
    /**
     Validates the specified witness node's placement configuration.
     
     - parameter requestBody: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func check(requestBody: VcenterVchaClusterWitnessCheck? = nil, completion: @escaping ((_ data: VcenterVchaClusterWitnessCheckResult?,_ error: Error?) -> Void)) {
        checkWithRequestBuilder(requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Validates the specified witness node's placement configuration.
     - POST /api/vcenter/vcha/cluster/witness?action=check
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter requestBody: (body)  (optional)

     - returns: RequestBuilder<VcenterVchaClusterWitnessCheckResult> 
     */
    open class func checkWithRequestBuilder(requestBody: VcenterVchaClusterWitnessCheck? = nil) -> RequestBuilder<VcenterVchaClusterWitnessCheckResult> {
        let path = "/api/vcenter/vcha/cluster/witness?action=check"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterVchaClusterWitnessCheckResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Validates the specified witness node's placement configuration.
     
     - parameter requestBody: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func check_0(requestBody: VcenterVchaClusterWitnessCheck, completion: @escaping ((_ data: VcenterVchaClusterWitnessCheckResp?,_ error: Error?) -> Void)) {
        check_0WithRequestBuilder(requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Validates the specified witness node's placement configuration.
     - POST /rest/vcenter/vcha/cluster/witness?action=check
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter requestBody: (body)  

     - returns: RequestBuilder<VcenterVchaClusterWitnessCheckResp> 
     */
    open class func check_0WithRequestBuilder(requestBody: VcenterVchaClusterWitnessCheck) -> RequestBuilder<VcenterVchaClusterWitnessCheckResp> {
        let path = "/rest/vcenter/vcha/cluster/witness?action=check"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterVchaClusterWitnessCheckResp>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Creates the witness node in a degraded cluster with node location information and pre-existing VCHA cluster configuration from the active node.
     
     - parameter requestBody: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func redeploytask(requestBody: VcenterVchaClusterWitnessRedeployTask? = nil, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        redeploytaskWithRequestBuilder(requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Creates the witness node in a degraded cluster with node location information and pre-existing VCHA cluster configuration from the active node.
     - POST /api/vcenter/vcha/cluster/witness?action=redeploy&vmw-task=true
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={
  "blank": true,
  "bytes": [],
  "empty": true
}}]
     
     - parameter requestBody: (body)  (optional)

     - returns: RequestBuilder<String> 
     */
    open class func redeploytaskWithRequestBuilder(requestBody: VcenterVchaClusterWitnessRedeployTask? = nil) -> RequestBuilder<String> {
        let path = "/api/vcenter/vcha/cluster/witness?action=redeploy&vmw-task=true"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Creates the witness node in a degraded cluster with node location information and pre-existing VCHA cluster configuration from the active node.
     
     - parameter requestBody: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func redeploytask_0(requestBody: VcenterVchaClusterWitnessRedeployTask, completion: @escaping ((_ data: VcenterVchaClusterWitnessRedeployTaskResp?,_ error: Error?) -> Void)) {
        redeploytask_0WithRequestBuilder(requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Creates the witness node in a degraded cluster with node location information and pre-existing VCHA cluster configuration from the active node.
     - POST /rest/vcenter/vcha/cluster/witness?action=redeploy&vmw-task=true
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter requestBody: (body)  

     - returns: RequestBuilder<VcenterVchaClusterWitnessRedeployTaskResp> 
     */
    open class func redeploytask_0WithRequestBuilder(requestBody: VcenterVchaClusterWitnessRedeployTask) -> RequestBuilder<VcenterVchaClusterWitnessRedeployTaskResp> {
        let path = "/rest/vcenter/vcha/cluster/witness?action=redeploy&vmw-task=true"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterVchaClusterWitnessRedeployTaskResp>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
