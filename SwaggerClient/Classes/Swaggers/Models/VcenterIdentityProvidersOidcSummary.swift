//
// VcenterIdentityProvidersOidcSummary.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct VcenterIdentityProvidersOidcSummary: Codable {

    /** Endpoint to retrieve the provider metadata This field is optional because it was added in a newer version than its parent node. */
    public var discoveryEndpoint: String?
    /** The endpoint to use for terminating the user&#39;s session at the identity provider. This value is automatically derived from the metadata information provided by the OIDC discovery endpoint. This field is optional because it was added in a newer version than its parent node. */
    public var logoutEndpoint: String?
    /** Authentication/authorization endpoint of the provider */
    public var authEndpoint: String
    /** Token endpoint of the provider */
    public var tokenEndpoint: String
    /** Client identifier to connect to the provider */
    public var clientId: String
    /** The authentication data used as part of request header to acquire or refresh an OAuth2 token. The data format depends on the authentication method used. Example of basic authentication format: Authorization: Basic [base64Encode(clientId + \&quot;:\&quot; + secret)] */
    public var authenticationHeader: String
    /**  key/value pairs that are to be appended to the authEndpoint request.   How to append to authEndpoint request:  If the map is not empty, a \&quot;?\&quot; is added to the endpoint URL, and combination of each k and each string in the v is added with an \&quot;&amp;\&quot; delimiter. Details:    - If the value contains only one string, then the key is added with \&quot;k&#x3D;v\&quot;.    - If the value is an empty list, then the key is added without a \&quot;&#x3D;v\&quot;.    - If the value contains multiple strings, then the key is repeated in the query-string for each string in the value.  */
    public var authQueryParams: [VcenterIdentityProvidersCreateSpecAuthQueryParams]

    public init(discoveryEndpoint: String?, logoutEndpoint: String?, authEndpoint: String, tokenEndpoint: String, clientId: String, authenticationHeader: String, authQueryParams: [VcenterIdentityProvidersCreateSpecAuthQueryParams]) {
        self.discoveryEndpoint = discoveryEndpoint
        self.logoutEndpoint = logoutEndpoint
        self.authEndpoint = authEndpoint
        self.tokenEndpoint = tokenEndpoint
        self.clientId = clientId
        self.authenticationHeader = authenticationHeader
        self.authQueryParams = authQueryParams
    }

    public enum CodingKeys: String, CodingKey { 
        case discoveryEndpoint = "discovery_endpoint"
        case logoutEndpoint = "logout_endpoint"
        case authEndpoint = "auth_endpoint"
        case tokenEndpoint = "token_endpoint"
        case clientId = "client_id"
        case authenticationHeader = "authentication_header"
        case authQueryParams = "auth_query_params"
    }


}

