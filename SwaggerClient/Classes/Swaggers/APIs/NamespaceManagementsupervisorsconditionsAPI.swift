//
// NamespaceManagementsupervisorsconditionsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class NamespaceManagementsupervisorsconditionsAPI {
    /**
     Get all conditions of a given Supervisor.
     
     - parameter supervisor: (path) the identifier for a Supervisor. The parameter must be an identifier for the resource type: vcenter.namespace_management.supervisor.Supervisor. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func callGet(supervisor: String, completion: @escaping ((_ data: [VcenterNamespaceManagementSupervisorsConditionsCondition]?,_ error: Error?) -> Void)) {
        callGetWithRequestBuilder(supervisor: supervisor).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get all conditions of a given Supervisor.
     - GET /api/vcenter/namespace-management/supervisors/{supervisor}/conditions
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={}}]
     
     - parameter supervisor: (path) the identifier for a Supervisor. The parameter must be an identifier for the resource type: vcenter.namespace_management.supervisor.Supervisor. 

     - returns: RequestBuilder<[VcenterNamespaceManagementSupervisorsConditionsCondition]> 
     */
    open class func callGetWithRequestBuilder(supervisor: String) -> RequestBuilder<[VcenterNamespaceManagementSupervisorsConditionsCondition]> {
        var path = "/api/vcenter/namespace-management/supervisors/{supervisor}/conditions"
        let supervisorPreEscape = "\(supervisor)"
        let supervisorPostEscape = supervisorPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{supervisor}", with: supervisorPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[VcenterNamespaceManagementSupervisorsConditionsCondition]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
