//
// LcmdiscoveryassociatedProductsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class LcmdiscoveryassociatedProductsAPI {
    /**
     Returns the detailed information of a product associated with vCenter Server. if you do not have all of the privileges described as follows:     -  Operation execution requires VcLifecycle.View.  
     
     - parameter product: (path) An identifier of the product to be modified. The parameter must be an identifier for the resource type: vcenter.lcm.product. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func callGet(product: String, completion: @escaping ((_ data: VcenterLcmDiscoveryProduct?,_ error: Error?) -> Void)) {
        callGetWithRequestBuilder(product: product).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns the detailed information of a product associated with vCenter Server. if you do not have all of the privileges described as follows:     -  Operation execution requires VcLifecycle.View.  
     - GET /api/vcenter/lcm/discovery/associated-products/{product}
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter product: (path) An identifier of the product to be modified. The parameter must be an identifier for the resource type: vcenter.lcm.product. 

     - returns: RequestBuilder<VcenterLcmDiscoveryProduct> 
     */
    open class func callGetWithRequestBuilder(product: String) -> RequestBuilder<VcenterLcmDiscoveryProduct> {
        var path = "/api/vcenter/lcm/discovery/associated-products/{product}"
        let productPreEscape = "\(product)"
        let productPostEscape = productPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{product}", with: productPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterLcmDiscoveryProduct>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Associates a VMware product with vCenter Server manually. The product must be taken from the product catalog API. if you do not have all of the privileges described as follows:     -  Operation execution requires VcLifecycle.View.  
     
     - parameter requestBody: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func create(requestBody: VcenterLcmDiscoveryAssociatedProductsCreate? = nil, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        createWithRequestBuilder(requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Associates a VMware product with vCenter Server manually. The product must be taken from the product catalog API. if you do not have all of the privileges described as follows:     -  Operation execution requires VcLifecycle.View.  
     - POST /api/vcenter/lcm/discovery/associated-products
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={
  "blank": true,
  "bytes": [],
  "empty": true
}}]
     
     - parameter requestBody: (body)  (optional)

     - returns: RequestBuilder<String> 
     */
    open class func createWithRequestBuilder(requestBody: VcenterLcmDiscoveryAssociatedProductsCreate? = nil) -> RequestBuilder<String> {
        let path = "/api/vcenter/lcm/discovery/associated-products"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Deletes or dissociates a VMware product associated with vCenter Server which was added manually. Automatically discovered VMware products cannot be deleted or dissociated. if you do not have all of the privileges described as follows:     -  Operation execution requires VcLifecycle.View.  
     
     - parameter product: (path) An id of the product to be removed. The parameter must be an identifier for the resource type: vcenter.lcm.product. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func delete(product: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        deleteWithRequestBuilder(product: product).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Deletes or dissociates a VMware product associated with vCenter Server which was added manually. Automatically discovered VMware products cannot be deleted or dissociated. if you do not have all of the privileges described as follows:     -  Operation execution requires VcLifecycle.View.  
     - DELETE /api/vcenter/lcm/discovery/associated-products/{product}
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     
     - parameter product: (path) An id of the product to be removed. The parameter must be an identifier for the resource type: vcenter.lcm.product. 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteWithRequestBuilder(product: String) -> RequestBuilder<Void> {
        var path = "/api/vcenter/lcm/discovery/associated-products/{product}"
        let productPreEscape = "\(product)"
        let productPostEscape = productPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{product}", with: productPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Retrieves a list of all associated VMware product deployments with vCenter Server in the environment. The list contains both product deployments discovered automatically and deployments registered manually through the API. if you do not have all of the privileges described as follows:     -  Operation execution requires VcLifecycle.View.  
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func list(completion: @escaping ((_ data: [VcenterLcmDiscoveryProduct]?,_ error: Error?) -> Void)) {
        listWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Retrieves a list of all associated VMware product deployments with vCenter Server in the environment. The list contains both product deployments discovered automatically and deployments registered manually through the API. if you do not have all of the privileges described as follows:     -  Operation execution requires VcLifecycle.View.  
     - GET /api/vcenter/lcm/discovery/associated-products
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={}}]

     - returns: RequestBuilder<[VcenterLcmDiscoveryProduct]> 
     */
    open class func listWithRequestBuilder() -> RequestBuilder<[VcenterLcmDiscoveryProduct]> {
        let path = "/api/vcenter/lcm/discovery/associated-products"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[VcenterLcmDiscoveryProduct]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Modifies a VMware product associated with vCenter Server which was added manually. Automatically discovered VMware products cannot be modified. if you do not have all of the privileges described as follows:     -  Operation execution requires VcLifecycle.View.  
     
     - parameter product: (path) An id of the product to be modified. The parameter must be an identifier for the resource type: vcenter.lcm.product. 
     - parameter requestBody: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func update(product: String, requestBody: VcenterLcmDiscoveryAssociatedProductsUpdate? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        updateWithRequestBuilder(product: product, requestBody: requestBody).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Modifies a VMware product associated with vCenter Server which was added manually. Automatically discovered VMware products cannot be modified. if you do not have all of the privileges described as follows:     -  Operation execution requires VcLifecycle.View.  
     - PATCH /api/vcenter/lcm/discovery/associated-products/{product}
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     
     - parameter product: (path) An id of the product to be modified. The parameter must be an identifier for the resource type: vcenter.lcm.product. 
     - parameter requestBody: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func updateWithRequestBuilder(product: String, requestBody: VcenterLcmDiscoveryAssociatedProductsUpdate? = nil) -> RequestBuilder<Void> {
        var path = "/api/vcenter/lcm/discovery/associated-products/{product}"
        let productPreEscape = "\(product)"
        let productPostEscape = productPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{product}", with: productPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PATCH", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
