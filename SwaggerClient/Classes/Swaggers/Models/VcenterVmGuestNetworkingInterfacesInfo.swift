//
// VcenterVmGuestNetworkingInterfacesInfo.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct VcenterVmGuestNetworkingInterfacesInfo: Codable {

    /** Client DNS values. Data assigned by DNS. If unset no DNS assigned value exists. */
    public var dnsValues: VcenterVmGuestDnsAssignedValues?
    /** MAC address of the adapter. If unset then not supported by the Guest OS. */
    public var macAddress: String?
    /** DNS configuration of the adapter. See Networking.Info.dns for system wide settings. If unset then not assigned by the Guest OS. */
    public var dns: VcenterVmGuestDnsConfigInfo?
    /** IP configuration settings of the adapter If unset then not supported by the Guest OS. */
    public var ip: VcenterVmGuestNetworkingInterfacesIpConfigInfo?
    /** The IP addresses of any WINS name servers for the adapter. If unset then not supported by the Guest OS. */
    public var winsServers: [String]?
    /** Link to the corresponding virtual device. If unset then the interface is not backed by a virtual device. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.vm.hardware.Ethernet. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.vm.hardware.Ethernet. */
    public var nic: String?

    public init(dnsValues: VcenterVmGuestDnsAssignedValues?, macAddress: String?, dns: VcenterVmGuestDnsConfigInfo?, ip: VcenterVmGuestNetworkingInterfacesIpConfigInfo?, winsServers: [String]?, nic: String?) {
        self.dnsValues = dnsValues
        self.macAddress = macAddress
        self.dns = dns
        self.ip = ip
        self.winsServers = winsServers
        self.nic = nic
    }

    public enum CodingKeys: String, CodingKey { 
        case dnsValues = "dns_values"
        case macAddress = "mac_address"
        case dns
        case ip
        case winsServers = "wins_servers"
        case nic
    }


}

