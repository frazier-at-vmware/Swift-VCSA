//
// LcmupdateprecheckReportAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class LcmupdateprecheckReportAPI {
    /**
     Creates a vCenter Server pre-update compatibility check report for the pending update version. The report can be exported and downloaded in CSV format.   The result of this operation can be queried by calling the cis.Tasks#get operation where task is the response of this operation. 
     
     - parameter version: (path) Pending update version for which pre-update compatibility check will be executed. The parameter must be an identifier for the resource type: vcenter.lcm.update.pending. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createtask(version: String, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        createtaskWithRequestBuilder(version: version).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Creates a vCenter Server pre-update compatibility check report for the pending update version. The report can be exported and downloaded in CSV format.   The result of this operation can be queried by calling the cis.Tasks#get operation where task is the response of this operation. 
     - POST /api/vcenter/lcm/update/pending/{version}/precheck-report?vmw-task=true
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={
  "blank": true,
  "bytes": [],
  "empty": true
}}]
     
     - parameter version: (path) Pending update version for which pre-update compatibility check will be executed. The parameter must be an identifier for the resource type: vcenter.lcm.update.pending. 

     - returns: RequestBuilder<String> 
     */
    open class func createtaskWithRequestBuilder(version: String) -> RequestBuilder<String> {
        var path = "/api/vcenter/lcm/update/pending/{version}/precheck-report?vmw-task=true"
        let versionPreEscape = "\(version)"
        let versionPostEscape = versionPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{version}", with: versionPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
