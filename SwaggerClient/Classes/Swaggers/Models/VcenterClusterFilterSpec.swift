//
// VcenterClusterFilterSpec.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct VcenterClusterFilterSpec: Codable {

    /** Identifiers of clusters that can match the filter. If unset or empty, clusters with any identifier match the filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: ClusterComputeResource. */
    public var clusters: [String]?
    /** Names that clusters must have to match the filter (see Cluster.Info.name). If unset or empty, clusters with any name match the filter. */
    public var names: [String]?
    /** Folders that must contain the cluster for the cluster to match the filter. If unset or empty, clusters in any folder match the filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Folder. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Folder. */
    public var folders: [String]?
    /** Datacenters that must contain the cluster for the cluster to match the filter. If unset or empty, clusters in any datacenter match the filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: Datacenter. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: Datacenter. */
    public var datacenters: [String]?

    public init(clusters: [String]?, names: [String]?, folders: [String]?, datacenters: [String]?) {
        self.clusters = clusters
        self.names = names
        self.folders = folders
        self.datacenters = datacenters
    }


}

