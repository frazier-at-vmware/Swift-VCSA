//
// VcenterDeploymentUpgradeSourceApplianceSpec.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct VcenterDeploymentUpgradeSourceApplianceSpec: Codable {

    /** The IP address or DNS resolvable name of the source appliance. */
    public var hostname: String
    /** The HTTPS port of the source appliance. If unset, port 443 will be used. */
    public var httpsPort: Int64?
    /** SHA1 thumbprint of the server SSL certificate will be used for verification. This field is only relevant if Upgrade.SourceApplianceSpec.ssl-verify is unset or has the value true. */
    public var sslThumbprint: String?
    /** SSL verification should be enabled or disabled for the source appliance validations. By default it is enabled and will use SSL certificate for verification. If thumbprint is provided, will use thumbprint for the verification. If unset, ssl_verify true will be used. */
    public var sslVerify: Bool?
    /** The SSO administrator account on the source appliance. */
    public var ssoAdminUsername: String
    /** The SSO administrator account password. */
    public var ssoAdminPassword: String
    /** The password of the root user on the source appliance. */
    public var rootPassword: String
    /** Appliance SSH verification should be enabled or disabled. By default it is disabled and will not use any verification. If thumbprint is provided, thumbprint verification will be performed. If unset, ssh_verify true will be used. */
    public var sshVerify: Bool?
    /** MD5 thumbprint of the server SSH key will be used for verification. This field is only relevant if Upgrade.SourceApplianceSpec.ssh-verify is unset or has the value true. */
    public var sshThumbprint: String?

    public init(hostname: String, httpsPort: Int64?, sslThumbprint: String?, sslVerify: Bool?, ssoAdminUsername: String, ssoAdminPassword: String, rootPassword: String, sshVerify: Bool?, sshThumbprint: String?) {
        self.hostname = hostname
        self.httpsPort = httpsPort
        self.sslThumbprint = sslThumbprint
        self.sslVerify = sslVerify
        self.ssoAdminUsername = ssoAdminUsername
        self.ssoAdminPassword = ssoAdminPassword
        self.rootPassword = rootPassword
        self.sshVerify = sshVerify
        self.sshThumbprint = sshThumbprint
    }

    public enum CodingKeys: String, CodingKey { 
        case hostname
        case httpsPort = "https_port"
        case sslThumbprint = "ssl_thumbprint"
        case sslVerify = "ssl_verify"
        case ssoAdminUsername = "sso_admin_username"
        case ssoAdminPassword = "sso_admin_password"
        case rootPassword = "root_password"
        case sshVerify = "ssh_verify"
        case sshThumbprint = "ssh_thumbprint"
    }


}

