//
// NamespaceManagementvirtualMachineClassesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class NamespaceManagementvirtualMachineClassesAPI {
    /**
     Return information about a VM class. if you do not have all of the privileges described as follows:     -  The resource vcenter.namespace_management.VirtualMachineClass referenced by the parameter vm_class requires System.Read.  
     
     - parameter vmClass: (path) Identifier for the VM class. The parameter must be an identifier for the resource type: vcenter.namespace_management.VirtualMachineClass. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func callGet(vmClass: String, completion: @escaping ((_ data: VcenterNamespaceManagementVirtualMachineClassesInfo?,_ error: Error?) -> Void)) {
        callGetWithRequestBuilder(vmClass: vmClass).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Return information about a VM class. if you do not have all of the privileges described as follows:     -  The resource vcenter.namespace_management.VirtualMachineClass referenced by the parameter vm_class requires System.Read.  
     - GET /api/vcenter/namespace-management/virtual-machine-classes/{vm_class}
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter vmClass: (path) Identifier for the VM class. The parameter must be an identifier for the resource type: vcenter.namespace_management.VirtualMachineClass. 

     - returns: RequestBuilder<VcenterNamespaceManagementVirtualMachineClassesInfo> 
     */
    open class func callGetWithRequestBuilder(vmClass: String) -> RequestBuilder<VcenterNamespaceManagementVirtualMachineClassesInfo> {
        var path = "/api/vcenter/namespace-management/virtual-machine-classes/{vm_class}"
        let vmClassPreEscape = "\(vmClass)"
        let vmClassPostEscape = vmClassPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{vm_class}", with: vmClassPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterNamespaceManagementVirtualMachineClassesInfo>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Create a VM class object. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachineClasses.Manage.  
     
     - parameter requestBody: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func create(requestBody: VcenterNamespaceManagementVirtualMachineClassesCreate? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        createWithRequestBuilder(requestBody: requestBody).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Create a VM class object. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachineClasses.Manage.  
     - POST /api/vcenter/namespace-management/virtual-machine-classes
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     
     - parameter requestBody: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func createWithRequestBuilder(requestBody: VcenterNamespaceManagementVirtualMachineClassesCreate? = nil) -> RequestBuilder<Void> {
        let path = "/api/vcenter/namespace-management/virtual-machine-classes"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Delete the VM class object. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachineClasses.Manage.  
     
     - parameter vmClass: (path) Identifier for the VM class. The parameter must be an identifier for the resource type: vcenter.namespace_management.VirtualMachineClass. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func delete(vmClass: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        deleteWithRequestBuilder(vmClass: vmClass).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Delete the VM class object. if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachineClasses.Manage.  
     - DELETE /api/vcenter/namespace-management/virtual-machine-classes/{vm_class}
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     
     - parameter vmClass: (path) Identifier for the VM class. The parameter must be an identifier for the resource type: vcenter.namespace_management.VirtualMachineClass. 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteWithRequestBuilder(vmClass: String) -> RequestBuilder<Void> {
        var path = "/api/vcenter/namespace-management/virtual-machine-classes/{vm_class}"
        let vmClassPreEscape = "\(vmClass)"
        let vmClassPostEscape = vmClassPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{vm_class}", with: vmClassPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Return information about all VirtualMachine classes. if you do not have all of the privileges described as follows:     -  Operation execution requires System.Anonymous.  
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func list(completion: @escaping ((_ data: [VcenterNamespaceManagementVirtualMachineClassesInfo]?,_ error: Error?) -> Void)) {
        listWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Return information about all VirtualMachine classes. if you do not have all of the privileges described as follows:     -  Operation execution requires System.Anonymous.  
     - GET /api/vcenter/namespace-management/virtual-machine-classes
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={}}]

     - returns: RequestBuilder<[VcenterNamespaceManagementVirtualMachineClassesInfo]> 
     */
    open class func listWithRequestBuilder() -> RequestBuilder<[VcenterNamespaceManagementVirtualMachineClassesInfo]> {
        let path = "/api/vcenter/namespace-management/virtual-machine-classes"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[VcenterNamespaceManagementVirtualMachineClassesInfo]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Update the configuration of the VM class object if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachineClasses.Manage.  
     
     - parameter vmClass: (path) Identifier for the VM class. The parameter must be an identifier for the resource type: vcenter.namespace_management.VirtualMachineClass. 
     - parameter requestBody: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func update(vmClass: String, requestBody: VcenterNamespaceManagementVirtualMachineClassesUpdate? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        updateWithRequestBuilder(vmClass: vmClass, requestBody: requestBody).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Update the configuration of the VM class object if you do not have all of the privileges described as follows:     -  Operation execution requires VirtualMachineClasses.Manage.  
     - PATCH /api/vcenter/namespace-management/virtual-machine-classes/{vm_class}
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     
     - parameter vmClass: (path) Identifier for the VM class. The parameter must be an identifier for the resource type: vcenter.namespace_management.VirtualMachineClass. 
     - parameter requestBody: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func updateWithRequestBuilder(vmClass: String, requestBody: VcenterNamespaceManagementVirtualMachineClassesUpdate? = nil) -> RequestBuilder<Void> {
        var path = "/api/vcenter/namespace-management/virtual-machine-classes/{vm_class}"
        let vmClassPreEscape = "\(vmClass)"
        let vmClassPostEscape = vmClassPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{vm_class}", with: vmClassPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PATCH", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
