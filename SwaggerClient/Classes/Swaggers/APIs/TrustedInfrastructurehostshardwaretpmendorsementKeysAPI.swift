//
// TrustedInfrastructurehostshardwaretpmendorsementKeysAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class TrustedInfrastructurehostshardwaretpmendorsementKeysAPI {
    /**
     Get the TPM endorsement key details on a host.   The information returned is derived from executing the TPM2_ReadPublic command on the endorsement key object handle.    Trusted Platform Module Library Part 3: Commands, Family \"2.0\", Level 00 Revision 01.59, November 8, 2019, Section 12.4 TPM2_ReadPublic  if you do not have all of the privileges described as follows:     -  The resource HostSystem referenced by the parameter host requires Host.Tpm.Read.  
     
     - parameter host: (path) Identifier of the host. The parameter must be an identifier for the resource type: HostSystem. 
     - parameter tpm: (path) the TPM identifier. The parameter must be an identifier for the resource type: vcenter.trusted_infrastructure.hosts.hardware.Tpm. 
     - parameter key: (path) the endorsement key identifier. The parameter must be an identifier for the resource type: vcenter.trusted_infrastructure.hosts.hardware.tpm.EndorsementKey. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func callGet(host: String, tpm: String, key: String, completion: @escaping ((_ data: VcenterTrustedInfrastructureHostsHardwareTpmEndorsementKeysInfo?,_ error: Error?) -> Void)) {
        callGetWithRequestBuilder(host: host, tpm: tpm, key: key).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get the TPM endorsement key details on a host.   The information returned is derived from executing the TPM2_ReadPublic command on the endorsement key object handle.    Trusted Platform Module Library Part 3: Commands, Family \"2.0\", Level 00 Revision 01.59, November 8, 2019, Section 12.4 TPM2_ReadPublic  if you do not have all of the privileges described as follows:     -  The resource HostSystem referenced by the parameter host requires Host.Tpm.Read.  
     - GET /api/vcenter/trusted-infrastructure/hosts/{host}/hardware/tpm/{tpm}/endorsement-keys/{key}
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter host: (path) Identifier of the host. The parameter must be an identifier for the resource type: HostSystem. 
     - parameter tpm: (path) the TPM identifier. The parameter must be an identifier for the resource type: vcenter.trusted_infrastructure.hosts.hardware.Tpm. 
     - parameter key: (path) the endorsement key identifier. The parameter must be an identifier for the resource type: vcenter.trusted_infrastructure.hosts.hardware.tpm.EndorsementKey. 

     - returns: RequestBuilder<VcenterTrustedInfrastructureHostsHardwareTpmEndorsementKeysInfo> 
     */
    open class func callGetWithRequestBuilder(host: String, tpm: String, key: String) -> RequestBuilder<VcenterTrustedInfrastructureHostsHardwareTpmEndorsementKeysInfo> {
        var path = "/api/vcenter/trusted-infrastructure/hosts/{host}/hardware/tpm/{tpm}/endorsement-keys/{key}"
        let hostPreEscape = "\(host)"
        let hostPostEscape = hostPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{host}", with: hostPostEscape, options: .literal, range: nil)
        let tpmPreEscape = "\(tpm)"
        let tpmPostEscape = tpmPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{tpm}", with: tpmPostEscape, options: .literal, range: nil)
        let keyPreEscape = "\(key)"
        let keyPostEscape = keyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{key}", with: keyPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterTrustedInfrastructureHostsHardwareTpmEndorsementKeysInfo>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     * enum for parameter types
     */
    public enum Types_list: String { 
        case rsa2048 = "RSA_2048"
        case eccNistP256 = "ECC_NIST_P_256"
    }

    /**
     Return a list of configured endorsement keys on a host. if you do not have all of the privileges described as follows:     -  The resource HostSystem referenced by the parameter host requires Host.Tpm.Read.  
     
     - parameter host: (path) Identifier of the host. The parameter must be an identifier for the resource type: HostSystem. 
     - parameter tpm: (path) the TPM identifier. The parameter must be an identifier for the resource type: vcenter.trusted_infrastructure.hosts.hardware.Tpm. 
     - parameter types: (query) Type of the endorsement key. if unset or empty, the result will not be filtered by EndorsementKeys.FilterSpec.types. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func list(host: String, tpm: String, types: [String]? = nil, completion: @escaping ((_ data: [VcenterTrustedInfrastructureHostsHardwareTpmEndorsementKeysSummary]?,_ error: Error?) -> Void)) {
        listWithRequestBuilder(host: host, tpm: tpm, types: types).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Return a list of configured endorsement keys on a host. if you do not have all of the privileges described as follows:     -  The resource HostSystem referenced by the parameter host requires Host.Tpm.Read.  
     - GET /api/vcenter/trusted-infrastructure/hosts/{host}/hardware/tpm/{tpm}/endorsement-keys
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={}}]
     
     - parameter host: (path) Identifier of the host. The parameter must be an identifier for the resource type: HostSystem. 
     - parameter tpm: (path) the TPM identifier. The parameter must be an identifier for the resource type: vcenter.trusted_infrastructure.hosts.hardware.Tpm. 
     - parameter types: (query) Type of the endorsement key. if unset or empty, the result will not be filtered by EndorsementKeys.FilterSpec.types. (optional)

     - returns: RequestBuilder<[VcenterTrustedInfrastructureHostsHardwareTpmEndorsementKeysSummary]> 
     */
    open class func listWithRequestBuilder(host: String, tpm: String, types: [String]? = nil) -> RequestBuilder<[VcenterTrustedInfrastructureHostsHardwareTpmEndorsementKeysSummary]> {
        var path = "/api/vcenter/trusted-infrastructure/hosts/{host}/hardware/tpm/{tpm}/endorsement-keys"
        let hostPreEscape = "\(host)"
        let hostPostEscape = hostPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{host}", with: hostPostEscape, options: .literal, range: nil)
        let tpmPreEscape = "\(tpm)"
        let tpmPostEscape = tpmPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{tpm}", with: tpmPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "types": types
        ])

        let requestBuilder: RequestBuilder<[VcenterTrustedInfrastructureHostsHardwareTpmEndorsementKeysSummary]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Unseal a secret that is bound to an endorsement key.   Provided with duplicate key data, load the key as a child of the specified endorsement key using the TPM2_Import command and then unseal the secret data using the TPM2_Unseal command.    The duplicate key must include only inner wrapping (symmetric); outer wrapping (asymmetric) is not supported. The duplicate key cannot have a complex authorization policy (e.g. including command selection, locality, etc). Only PCR policy authorization is supported at this time.    Trusted Platform Module Library Part 1: Architecture, Family \"2.0\", Level 00 Revision 01.59, November 8, 2019, Section 23.3 Duplication    Trusted Platform Module Library Part 3: Commands, Family \"2.0\", Level 00 Revision 01.59, November 8, 2019, Section 13.3 TPM2_Import    Trusted Platform Module Library Part 3: Commands, Family \"2.0\", Level 00 Revision 01.59, November 8, 2019, Section 12.7 TPM2_Unseal  if you do not have all of the privileges described as follows:     -  The resource HostSystem referenced by the parameter host requires Host.Tpm.Unseal.  
     
     - parameter host: (path) Identifier of the host. The parameter must be an identifier for the resource type: HostSystem. 
     - parameter tpm: (path) the TPM identifier. The parameter must be an identifier for the resource type: vcenter.trusted_infrastructure.hosts.hardware.Tpm. 
     - parameter key: (path) the endorsement key identifier. The parameter must be an identifier for the resource type: vcenter.trusted_infrastructure.hosts.hardware.tpm.EndorsementKey. 
     - parameter requestBody: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func unseal(host: String, tpm: String, key: String, requestBody: VcenterTrustedInfrastructureHostsHardwareTpmEndorsementKeysUnseal? = nil, completion: @escaping ((_ data: Data?,_ error: Error?) -> Void)) {
        unsealWithRequestBuilder(host: host, tpm: tpm, key: key, requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Unseal a secret that is bound to an endorsement key.   Provided with duplicate key data, load the key as a child of the specified endorsement key using the TPM2_Import command and then unseal the secret data using the TPM2_Unseal command.    The duplicate key must include only inner wrapping (symmetric); outer wrapping (asymmetric) is not supported. The duplicate key cannot have a complex authorization policy (e.g. including command selection, locality, etc). Only PCR policy authorization is supported at this time.    Trusted Platform Module Library Part 1: Architecture, Family \"2.0\", Level 00 Revision 01.59, November 8, 2019, Section 23.3 Duplication    Trusted Platform Module Library Part 3: Commands, Family \"2.0\", Level 00 Revision 01.59, November 8, 2019, Section 13.3 TPM2_Import    Trusted Platform Module Library Part 3: Commands, Family \"2.0\", Level 00 Revision 01.59, November 8, 2019, Section 12.7 TPM2_Unseal  if you do not have all of the privileges described as follows:     -  The resource HostSystem referenced by the parameter host requires Host.Tpm.Unseal.  
     - POST /api/vcenter/trusted-infrastructure/hosts/{host}/hardware/tpm/{tpm}/endorsement-keys/{key}?action=unseal
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={
  "blank": true,
  "bytes": [],
  "empty": true
}}]
     
     - parameter host: (path) Identifier of the host. The parameter must be an identifier for the resource type: HostSystem. 
     - parameter tpm: (path) the TPM identifier. The parameter must be an identifier for the resource type: vcenter.trusted_infrastructure.hosts.hardware.Tpm. 
     - parameter key: (path) the endorsement key identifier. The parameter must be an identifier for the resource type: vcenter.trusted_infrastructure.hosts.hardware.tpm.EndorsementKey. 
     - parameter requestBody: (body)  (optional)

     - returns: RequestBuilder<Data> 
     */
    open class func unsealWithRequestBuilder(host: String, tpm: String, key: String, requestBody: VcenterTrustedInfrastructureHostsHardwareTpmEndorsementKeysUnseal? = nil) -> RequestBuilder<Data> {
        var path = "/api/vcenter/trusted-infrastructure/hosts/{host}/hardware/tpm/{tpm}/endorsement-keys/{key}?action=unseal"
        let hostPreEscape = "\(host)"
        let hostPostEscape = hostPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{host}", with: hostPostEscape, options: .literal, range: nil)
        let tpmPreEscape = "\(tpm)"
        let tpmPostEscape = tpmPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{tpm}", with: tpmPostEscape, options: .literal, range: nil)
        let keyPreEscape = "\(key)"
        let keyPostEscape = keyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{key}", with: keyPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Data>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
