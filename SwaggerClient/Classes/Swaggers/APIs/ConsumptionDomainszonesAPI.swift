//
// ConsumptionDomainszonesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class ConsumptionDomainszonesAPI {
    /**
     Returns the information about a specific zone. if you do not have all of the privileges described as follows:     -  Operation execution requires System.Read.  
     
     - parameter zone: (path) Identifier of the zone for which information should be retrieved. The parameter must be an identifier for the resource type: vcenter.consumption_domains.Zone. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func callGet(zone: String, completion: @escaping ((_ data: VcenterConsumptionDomainsZonesInfo?,_ error: Error?) -> Void)) {
        callGetWithRequestBuilder(zone: zone).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns the information about a specific zone. if you do not have all of the privileges described as follows:     -  Operation execution requires System.Read.  
     - GET /api/vcenter/consumption-domains/zones/{zone}
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter zone: (path) Identifier of the zone for which information should be retrieved. The parameter must be an identifier for the resource type: vcenter.consumption_domains.Zone. 

     - returns: RequestBuilder<VcenterConsumptionDomainsZonesInfo> 
     */
    open class func callGetWithRequestBuilder(zone: String) -> RequestBuilder<VcenterConsumptionDomainsZonesInfo> {
        var path = "/api/vcenter/consumption-domains/zones/{zone}"
        let zonePreEscape = "\(zone)"
        let zonePostEscape = zonePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{zone}", with: zonePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VcenterConsumptionDomainsZonesInfo>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Creates a zone based on the provided specifications. if you do not have all of the privileges described as follows:     -  Operation execution requires Zone.Manage.  
     
     - parameter requestBody: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func create(requestBody: VcenterConsumptionDomainsZonesCreate? = nil, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        createWithRequestBuilder(requestBody: requestBody).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Creates a zone based on the provided specifications. if you do not have all of the privileges described as follows:     -  Operation execution requires Zone.Manage.  
     - POST /api/vcenter/consumption-domains/zones
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={
  "blank": true,
  "bytes": [],
  "empty": true
}}]
     
     - parameter requestBody: (body)  (optional)

     - returns: RequestBuilder<String> 
     */
    open class func createWithRequestBuilder(requestBody: VcenterConsumptionDomainsZonesCreate? = nil) -> RequestBuilder<String> {
        let path = "/api/vcenter/consumption-domains/zones"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: requestBody)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Deletes the zone with the specified identifier. In order to delete a zone, there must not be any workload running in that zone because deleting the zone without removing all the dependencies on that zone can cause undefined behavior for the entities depending on this zone to be present. if you do not have all of the privileges described as follows:     -  Operation execution requires Zone.Manage.  
     
     - parameter zone: (path) Identifier of the zone to be deleted. The parameter must be an identifier for the resource type: vcenter.consumption_domains.Zone. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func delete(zone: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        deleteWithRequestBuilder(zone: zone).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Deletes the zone with the specified identifier. In order to delete a zone, there must not be any workload running in that zone because deleting the zone without removing all the dependencies on that zone can cause undefined behavior for the entities depending on this zone to be present. if you do not have all of the privileges described as follows:     -  Operation execution requires Zone.Manage.  
     - DELETE /api/vcenter/consumption-domains/zones/{zone}
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     
     - parameter zone: (path) Identifier of the zone to be deleted. The parameter must be an identifier for the resource type: vcenter.consumption_domains.Zone. 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteWithRequestBuilder(zone: String) -> RequestBuilder<Void> {
        var path = "/api/vcenter/consumption-domains/zones/{zone}"
        let zonePreEscape = "\(zone)"
        let zonePostEscape = zonePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{zone}", with: zonePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Returns information about the zones available on this vCenter server, where the zones need to match Zones.FilterSpec. if you do not have all of the privileges described as follows:     -  Operation execution requires System.Read.  
     
     - parameter zones: (query) Matches all zones corresponding to the specified set of zone identifiers. If unset or empty, results will not be filtered for specific zone identifiers. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.consumption_domains.Zone. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.consumption_domains.Zone. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func list(zones: [String]? = nil, completion: @escaping ((_ data: VcenterConsumptionDomainsZonesListResult?,_ error: Error?) -> Void)) {
        listWithRequestBuilder(zones: zones).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns information about the zones available on this vCenter server, where the zones need to match Zones.FilterSpec. if you do not have all of the privileges described as follows:     -  Operation execution requires System.Read.  
     - GET /api/vcenter/consumption-domains/zones
     - API Key:
       - type: apiKey vmware-api-session-id 
       - name: session_id
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter zones: (query) Matches all zones corresponding to the specified set of zone identifiers. If unset or empty, results will not be filtered for specific zone identifiers. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.consumption_domains.Zone. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.consumption_domains.Zone. (optional)

     - returns: RequestBuilder<VcenterConsumptionDomainsZonesListResult> 
     */
    open class func listWithRequestBuilder(zones: [String]? = nil) -> RequestBuilder<VcenterConsumptionDomainsZonesListResult> {
        let path = "/api/vcenter/consumption-domains/zones"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "zones": zones
        ])

        let requestBuilder: RequestBuilder<VcenterConsumptionDomainsZonesListResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
